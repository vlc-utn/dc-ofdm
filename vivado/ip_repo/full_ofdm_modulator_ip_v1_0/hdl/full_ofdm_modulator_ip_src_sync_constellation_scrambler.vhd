-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLModulatorFull/full_ofdm_modulator_ip_src_sync_constellation_scrambler.vhd
-- Created: 2024-08-31 22:08:52
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_ofdm_modulator_ip_src_sync_constellation_scrambler
-- Source Path: HDLModulatorFull/full_ofdm_modulator/sync_constellation_scrambler
-- Hierarchy Level: 1
-- Model version: 1.21
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_ofdm_modulator_ip_src_sync_constellation_scrambler IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        enb_1_2_1                         :   IN    std_logic;
        enb                               :   IN    std_logic;
        new_ofdm_symbol                   :   IN    std_logic;
        init                              :   IN    std_logic_vector(12 DOWNTO 0);  -- boolean [13]
        valid_in                          :   IN    std_logic;
        s1                                :   OUT   std_logic;
        s2                                :   OUT   std_logic
        );
END full_ofdm_modulator_ip_src_sync_constellation_scrambler;


ARCHITECTURE rtl OF full_ofdm_modulator_ip_src_sync_constellation_scrambler IS

  -- Component Declarations
  COMPONENT full_ofdm_modulator_ip_src_Synchronous_constellation_scrambler
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          valid_in                        :   IN    std_logic;
          init                            :   IN    std_logic_vector(12 DOWNTO 0);  -- boolean [13]
          new_ofdm_symbol                 :   IN    std_logic;
          s1_out                          :   OUT   std_logic;
          s2_out                          :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_ofdm_modulator_ip_src_Synchronous_constellation_scrambler
    USE ENTITY work.full_ofdm_modulator_ip_src_Synchronous_constellation_scrambler(rtl);

  -- Signals
  SIGNAL valid_in_1                       : std_logic;
  SIGNAL init_1                           : std_logic_vector(12 DOWNTO 0);  -- boolean [13]
  SIGNAL new_ofdm_symbol_1                : std_logic;
  SIGNAL Synchronous_constellation_scrambler_out1 : std_logic;
  SIGNAL Synchronous_constellation_scrambler_out2 : std_logic;
  SIGNAL Rate_Transition1_bypass_reg      : std_logic;  -- ufix1
  SIGNAL Rate_Transition1_out1            : std_logic;
  SIGNAL Rate_Transition_bypass_reg       : std_logic;  -- ufix1
  SIGNAL Rate_Transition_out1             : std_logic;

BEGIN
  u_Synchronous_constellation_scrambler : full_ofdm_modulator_ip_src_Synchronous_constellation_scrambler
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              valid_in => valid_in_1,
              init => init_1,  -- boolean [13]
              new_ofdm_symbol => new_ofdm_symbol_1,
              s1_out => Synchronous_constellation_scrambler_out1,
              s2_out => Synchronous_constellation_scrambler_out2
              );

  Rate_Transition41_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        valid_in_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        valid_in_1 <= valid_in;
      END IF;
    END IF;
  END PROCESS Rate_Transition41_process;


  Rate_Transition31_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        init_1 <= (OTHERS => '0');
      ELSIF enb_1_2_0 = '1' THEN
        init_1 <= init;
      END IF;
    END IF;
  END PROCESS Rate_Transition31_process;


  Rate_Transition21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        new_ofdm_symbol_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        new_ofdm_symbol_1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS Rate_Transition21_process;


  Rate_Transition1_bypass_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Rate_Transition1_bypass_reg <= '0';
      ELSIF enb_1_2_1 = '1' THEN
        Rate_Transition1_bypass_reg <= Synchronous_constellation_scrambler_out1;
      END IF;
    END IF;
  END PROCESS Rate_Transition1_bypass_process;

  
  Rate_Transition1_out1 <= Synchronous_constellation_scrambler_out1 WHEN enb_1_2_1 = '1' ELSE
      Rate_Transition1_bypass_reg;

  Rate_Transition_bypass_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Rate_Transition_bypass_reg <= '0';
      ELSIF enb_1_2_1 = '1' THEN
        Rate_Transition_bypass_reg <= Synchronous_constellation_scrambler_out2;
      END IF;
    END IF;
  END PROCESS Rate_Transition_bypass_process;

  
  Rate_Transition_out1 <= Synchronous_constellation_scrambler_out2 WHEN enb_1_2_1 = '1' ELSE
      Rate_Transition_bypass_reg;

  s1 <= Rate_Transition1_out1;

  s2 <= Rate_Transition_out1;

END rtl;

