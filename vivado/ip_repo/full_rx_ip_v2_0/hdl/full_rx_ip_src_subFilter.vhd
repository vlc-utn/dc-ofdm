-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_subFilter.vhd
-- Created: 2024-08-11 11:00:05
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_subFilter
-- Source Path: HDLRx/full_rx/rx_demodulator_full/decimator/FIR Decimator/FilterBank/subFilter
-- Hierarchy Level: 5
-- Model version: 1.44
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_rx_ip_src_full_rx_pac.ALL;

ENTITY full_rx_ip_src_subFilter IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        dinReg2_0_re                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        coefIn                            :   IN    vector_of_std_logic_vector16(0 TO 34);  -- sfix16_En16 [35]
        dinRegVld                         :   IN    std_logic;
        syncReset                         :   IN    std_logic;
        dout_1_re                         :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33_En28
        doutVld                           :   OUT   std_logic
        );
END full_rx_ip_src_subFilter;


ARCHITECTURE rtl OF full_rx_ip_src_subFilter IS

  -- Component Declarations
  COMPONENT full_rx_ip_src_FilterTapSystolicWvldin
    PORT( clk                             :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          dinReg2_0_re                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          coefIn_0                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En16
          addin                           :   IN    std_logic_vector(47 DOWNTO 0);  -- sfix48_En28
          dinRegVld                       :   IN    std_logic;
          dinDly2                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          tapout                          :   OUT   std_logic_vector(47 DOWNTO 0)  -- sfix48_En28
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_rx_ip_src_FilterTapSystolicWvldin
    USE ENTITY work.full_rx_ip_src_FilterTapSystolicWvldin(rtl);

  -- Signals
  SIGNAL intdelay_reg                     : std_logic_vector(71 DOWNTO 0);  -- ufix1 [72]
  SIGNAL vldShift                         : std_logic;
  SIGNAL vldOutTmp                        : std_logic;
  SIGNAL ZERO_OUT                         : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL addin                            : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2                          : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout                           : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_1                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2                      : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1                      : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_1                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_1                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_1                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_2                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_1                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_1                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_1                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_2                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_2                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_2                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_3                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_2                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_2                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_2                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_3                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_3                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_3                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_4                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_3                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_3                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_3                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_4                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_4                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_4                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_5                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_4                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_4                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_4                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_5                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_5                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_5                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_6                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_5                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_5                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_5                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_6                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_6                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_6                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_7                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_6                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_6                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_6                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_7                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_7                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_7                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_8                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_7                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_7                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_7                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_8                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_8                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_8                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_9                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_8                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_8                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_8                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_9                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_9                         : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_9                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_10                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_9                    : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_9                  : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_9                    : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_10                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_10                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_10                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_11                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_10                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_10                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_10                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_11                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_11                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_11                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_12                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_11                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_11                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_11                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_12                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_12                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_12                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_13                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_12                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_12                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_12                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_13                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_13                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_13                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_14                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_13                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_13                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_13                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_14                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_14                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_14                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_15                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_14                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_14                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_14                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_15                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_15                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_15                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_16                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_15                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_15                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_15                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_16                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_16                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_16                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_17                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_16                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_16                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_16                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_17                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_17                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_17                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_18                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_17                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_17                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_17                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_18                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_18                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_18                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_19                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_18                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_18                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_18                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_19                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_19                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_19                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_20                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_19                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_19                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_19                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_20                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_20                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_20                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_21                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_20                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_20                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_20                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_21                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_21                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_21                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_22                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_21                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_21                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_21                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_22                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_22                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_22                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_23                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_22                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_22                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_22                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_23                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_23                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_23                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_24                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_23                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_23                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_23                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_24                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_24                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_24                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_25                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_24                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_24                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_24                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_25                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_25                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_25                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_26                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_25                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_25                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_25                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_26                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_26                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_26                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_27                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_26                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_26                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_26                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_27                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_27                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_27                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_28                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_27                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_27                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_27                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_28                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_28                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_28                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_29                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_28                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_28                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_28                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_29                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_29                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_29                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_30                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_29                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_29                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_29                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_30                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_30                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_30                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_31                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_30                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_30                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_30                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_31                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_31                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_31                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_32                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_31                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_31                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_31                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_32                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_32                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_32                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_33                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_32                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_32                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_32                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2_33                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_33                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL dinDly2_signed_33                : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL intdelay_reg_34                  : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_33                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tapout_signed_33                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dlyLineOut1_33                   : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dinDly2deadOut                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_34                        : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL tapout_signed_34                 : signed(47 DOWNTO 0);  -- sfix48_En28
  SIGNAL dout_cast                        : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL muxOut                           : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL dout_1_re_tmp                    : signed(32 DOWNTO 0);  -- sfix33_En28

BEGIN
  u_FilterTap_1 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => dinReg2_0_re,  -- sfix16_En12
              coefIn_0 => coefIn(0),  -- sfix16_En16
              addin => std_logic_vector(addin),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2,  -- sfix16_En12
              tapout => tapout  -- sfix48_En28
              );

  u_FilterTap_2 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2),  -- sfix16_En12
              coefIn_0 => coefIn(1),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_1,  -- sfix16_En12
              tapout => tapout_1  -- sfix48_En28
              );

  u_FilterTap_3 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_1),  -- sfix16_En12
              coefIn_0 => coefIn(2),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_1),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_2,  -- sfix16_En12
              tapout => tapout_2  -- sfix48_En28
              );

  u_FilterTap_4 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_2),  -- sfix16_En12
              coefIn_0 => coefIn(3),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_2),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_3,  -- sfix16_En12
              tapout => tapout_3  -- sfix48_En28
              );

  u_FilterTap_5 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_3),  -- sfix16_En12
              coefIn_0 => coefIn(4),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_3),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_4,  -- sfix16_En12
              tapout => tapout_4  -- sfix48_En28
              );

  u_FilterTap_6 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_4),  -- sfix16_En12
              coefIn_0 => coefIn(5),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_4),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_5,  -- sfix16_En12
              tapout => tapout_5  -- sfix48_En28
              );

  u_FilterTap_7 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_5),  -- sfix16_En12
              coefIn_0 => coefIn(6),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_5),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_6,  -- sfix16_En12
              tapout => tapout_6  -- sfix48_En28
              );

  u_FilterTap_8 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_6),  -- sfix16_En12
              coefIn_0 => coefIn(7),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_6),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_7,  -- sfix16_En12
              tapout => tapout_7  -- sfix48_En28
              );

  u_FilterTap_9 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_7),  -- sfix16_En12
              coefIn_0 => coefIn(8),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_7),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_8,  -- sfix16_En12
              tapout => tapout_8  -- sfix48_En28
              );

  u_FilterTap_10 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_8),  -- sfix16_En12
              coefIn_0 => coefIn(9),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_8),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_9,  -- sfix16_En12
              tapout => tapout_9  -- sfix48_En28
              );

  u_FilterTap_11 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_9),  -- sfix16_En12
              coefIn_0 => coefIn(10),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_9),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_10,  -- sfix16_En12
              tapout => tapout_10  -- sfix48_En28
              );

  u_FilterTap_12 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_10),  -- sfix16_En12
              coefIn_0 => coefIn(11),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_10),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_11,  -- sfix16_En12
              tapout => tapout_11  -- sfix48_En28
              );

  u_FilterTap_13 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_11),  -- sfix16_En12
              coefIn_0 => coefIn(12),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_11),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_12,  -- sfix16_En12
              tapout => tapout_12  -- sfix48_En28
              );

  u_FilterTap_14 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_12),  -- sfix16_En12
              coefIn_0 => coefIn(13),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_12),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_13,  -- sfix16_En12
              tapout => tapout_13  -- sfix48_En28
              );

  u_FilterTap_15 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_13),  -- sfix16_En12
              coefIn_0 => coefIn(14),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_13),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_14,  -- sfix16_En12
              tapout => tapout_14  -- sfix48_En28
              );

  u_FilterTap_16 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_14),  -- sfix16_En12
              coefIn_0 => coefIn(15),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_14),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_15,  -- sfix16_En12
              tapout => tapout_15  -- sfix48_En28
              );

  u_FilterTap_17 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_15),  -- sfix16_En12
              coefIn_0 => coefIn(16),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_15),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_16,  -- sfix16_En12
              tapout => tapout_16  -- sfix48_En28
              );

  u_FilterTap_18 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_16),  -- sfix16_En12
              coefIn_0 => coefIn(17),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_16),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_17,  -- sfix16_En12
              tapout => tapout_17  -- sfix48_En28
              );

  u_FilterTap_19 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_17),  -- sfix16_En12
              coefIn_0 => coefIn(18),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_17),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_18,  -- sfix16_En12
              tapout => tapout_18  -- sfix48_En28
              );

  u_FilterTap_20 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_18),  -- sfix16_En12
              coefIn_0 => coefIn(19),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_18),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_19,  -- sfix16_En12
              tapout => tapout_19  -- sfix48_En28
              );

  u_FilterTap_21 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_19),  -- sfix16_En12
              coefIn_0 => coefIn(20),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_19),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_20,  -- sfix16_En12
              tapout => tapout_20  -- sfix48_En28
              );

  u_FilterTap_22 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_20),  -- sfix16_En12
              coefIn_0 => coefIn(21),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_20),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_21,  -- sfix16_En12
              tapout => tapout_21  -- sfix48_En28
              );

  u_FilterTap_23 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_21),  -- sfix16_En12
              coefIn_0 => coefIn(22),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_21),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_22,  -- sfix16_En12
              tapout => tapout_22  -- sfix48_En28
              );

  u_FilterTap_24 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_22),  -- sfix16_En12
              coefIn_0 => coefIn(23),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_22),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_23,  -- sfix16_En12
              tapout => tapout_23  -- sfix48_En28
              );

  u_FilterTap_25 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_23),  -- sfix16_En12
              coefIn_0 => coefIn(24),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_23),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_24,  -- sfix16_En12
              tapout => tapout_24  -- sfix48_En28
              );

  u_FilterTap_26 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_24),  -- sfix16_En12
              coefIn_0 => coefIn(25),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_24),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_25,  -- sfix16_En12
              tapout => tapout_25  -- sfix48_En28
              );

  u_FilterTap_27 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_25),  -- sfix16_En12
              coefIn_0 => coefIn(26),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_25),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_26,  -- sfix16_En12
              tapout => tapout_26  -- sfix48_En28
              );

  u_FilterTap_28 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_26),  -- sfix16_En12
              coefIn_0 => coefIn(27),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_26),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_27,  -- sfix16_En12
              tapout => tapout_27  -- sfix48_En28
              );

  u_FilterTap_29 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_27),  -- sfix16_En12
              coefIn_0 => coefIn(28),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_27),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_28,  -- sfix16_En12
              tapout => tapout_28  -- sfix48_En28
              );

  u_FilterTap_30 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_28),  -- sfix16_En12
              coefIn_0 => coefIn(29),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_28),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_29,  -- sfix16_En12
              tapout => tapout_29  -- sfix48_En28
              );

  u_FilterTap_31 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_29),  -- sfix16_En12
              coefIn_0 => coefIn(30),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_29),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_30,  -- sfix16_En12
              tapout => tapout_30  -- sfix48_En28
              );

  u_FilterTap_32 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_30),  -- sfix16_En12
              coefIn_0 => coefIn(31),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_30),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_31,  -- sfix16_En12
              tapout => tapout_31  -- sfix48_En28
              );

  u_FilterTap_33 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_31),  -- sfix16_En12
              coefIn_0 => coefIn(32),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_31),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_32,  -- sfix16_En12
              tapout => tapout_32  -- sfix48_En28
              );

  u_FilterTap_34 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_32),  -- sfix16_En12
              coefIn_0 => coefIn(33),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_32),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_33,  -- sfix16_En12
              tapout => tapout_33  -- sfix48_En28
              );

  u_FilterTap_35 : full_rx_ip_src_FilterTapSystolicWvldin
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_33),  -- sfix16_En12
              coefIn_0 => coefIn(34),  -- sfix16_En16
              addin => std_logic_vector(dlyLineOut1_33),  -- sfix48_En28
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2deadOut,  -- sfix16_En12
              tapout => tapout_34  -- sfix48_En28
              );

  intdelay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg <= (OTHERS => '0');
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg <= (OTHERS => '0');
        ELSIF dinRegVld = '1' THEN
          intdelay_reg(0) <= dinRegVld;
          intdelay_reg(71 DOWNTO 1) <= intdelay_reg(70 DOWNTO 0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_process;

  vldShift <= intdelay_reg(71);

  vldOutTmp <= dinRegVld AND vldShift;

  ZERO_OUT <= to_signed(0, 33);

  addin <= to_signed(0, 48);

  dinDly2_signed <= signed(dinDly2);

  intdelay_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_1 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_1 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_1(0) <= dinDly2_signed;
          intdelay_reg_1(1) <= intdelay_reg_1(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;

  dlyLineOut2 <= intdelay_reg_1(1);

  tapout_signed <= signed(tapout);

  intdelay_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1 <= tapout_signed;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


  dinDly2_signed_1 <= signed(dinDly2_1);

  intdelay_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_2 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_2 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_2(0) <= dinDly2_signed_1;
          intdelay_reg_2(1) <= intdelay_reg_2(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_3_process;

  dlyLineOut2_1 <= intdelay_reg_2(1);

  tapout_signed_1 <= signed(tapout_1);

  intdelay_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_1 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_1 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_1 <= tapout_signed_1;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_4_process;


  dinDly2_signed_2 <= signed(dinDly2_2);

  intdelay_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_3 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_3 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_3(0) <= dinDly2_signed_2;
          intdelay_reg_3(1) <= intdelay_reg_3(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_5_process;

  dlyLineOut2_2 <= intdelay_reg_3(1);

  tapout_signed_2 <= signed(tapout_2);

  intdelay_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_2 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_2 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_2 <= tapout_signed_2;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_6_process;


  dinDly2_signed_3 <= signed(dinDly2_3);

  intdelay_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_4 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_4 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_4(0) <= dinDly2_signed_3;
          intdelay_reg_4(1) <= intdelay_reg_4(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_7_process;

  dlyLineOut2_3 <= intdelay_reg_4(1);

  tapout_signed_3 <= signed(tapout_3);

  intdelay_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_3 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_3 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_3 <= tapout_signed_3;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_8_process;


  dinDly2_signed_4 <= signed(dinDly2_4);

  intdelay_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_5 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_5 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_5(0) <= dinDly2_signed_4;
          intdelay_reg_5(1) <= intdelay_reg_5(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_9_process;

  dlyLineOut2_4 <= intdelay_reg_5(1);

  tapout_signed_4 <= signed(tapout_4);

  intdelay_10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_4 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_4 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_4 <= tapout_signed_4;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_10_process;


  dinDly2_signed_5 <= signed(dinDly2_5);

  intdelay_11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_6 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_6 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_6(0) <= dinDly2_signed_5;
          intdelay_reg_6(1) <= intdelay_reg_6(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_11_process;

  dlyLineOut2_5 <= intdelay_reg_6(1);

  tapout_signed_5 <= signed(tapout_5);

  intdelay_12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_5 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_5 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_5 <= tapout_signed_5;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_12_process;


  dinDly2_signed_6 <= signed(dinDly2_6);

  intdelay_13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_7 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_7 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_7(0) <= dinDly2_signed_6;
          intdelay_reg_7(1) <= intdelay_reg_7(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_13_process;

  dlyLineOut2_6 <= intdelay_reg_7(1);

  tapout_signed_6 <= signed(tapout_6);

  intdelay_14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_6 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_6 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_6 <= tapout_signed_6;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_14_process;


  dinDly2_signed_7 <= signed(dinDly2_7);

  intdelay_15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_8 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_8 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_8(0) <= dinDly2_signed_7;
          intdelay_reg_8(1) <= intdelay_reg_8(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_15_process;

  dlyLineOut2_7 <= intdelay_reg_8(1);

  tapout_signed_7 <= signed(tapout_7);

  intdelay_16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_7 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_7 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_7 <= tapout_signed_7;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_16_process;


  dinDly2_signed_8 <= signed(dinDly2_8);

  intdelay_17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_9 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_9 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_9(0) <= dinDly2_signed_8;
          intdelay_reg_9(1) <= intdelay_reg_9(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_17_process;

  dlyLineOut2_8 <= intdelay_reg_9(1);

  tapout_signed_8 <= signed(tapout_8);

  intdelay_18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_8 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_8 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_8 <= tapout_signed_8;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_18_process;


  dinDly2_signed_9 <= signed(dinDly2_9);

  intdelay_19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_10 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_10 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_10(0) <= dinDly2_signed_9;
          intdelay_reg_10(1) <= intdelay_reg_10(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_19_process;

  dlyLineOut2_9 <= intdelay_reg_10(1);

  tapout_signed_9 <= signed(tapout_9);

  intdelay_20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_9 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_9 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_9 <= tapout_signed_9;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_20_process;


  dinDly2_signed_10 <= signed(dinDly2_10);

  intdelay_21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_11 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_11 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_11(0) <= dinDly2_signed_10;
          intdelay_reg_11(1) <= intdelay_reg_11(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_21_process;

  dlyLineOut2_10 <= intdelay_reg_11(1);

  tapout_signed_10 <= signed(tapout_10);

  intdelay_22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_10 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_10 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_10 <= tapout_signed_10;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_22_process;


  dinDly2_signed_11 <= signed(dinDly2_11);

  intdelay_23_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_12 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_12 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_12(0) <= dinDly2_signed_11;
          intdelay_reg_12(1) <= intdelay_reg_12(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_23_process;

  dlyLineOut2_11 <= intdelay_reg_12(1);

  tapout_signed_11 <= signed(tapout_11);

  intdelay_24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_11 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_11 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_11 <= tapout_signed_11;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_24_process;


  dinDly2_signed_12 <= signed(dinDly2_12);

  intdelay_25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_13 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_13 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_13(0) <= dinDly2_signed_12;
          intdelay_reg_13(1) <= intdelay_reg_13(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_25_process;

  dlyLineOut2_12 <= intdelay_reg_13(1);

  tapout_signed_12 <= signed(tapout_12);

  intdelay_26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_12 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_12 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_12 <= tapout_signed_12;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_26_process;


  dinDly2_signed_13 <= signed(dinDly2_13);

  intdelay_27_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_14 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_14 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_14(0) <= dinDly2_signed_13;
          intdelay_reg_14(1) <= intdelay_reg_14(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_27_process;

  dlyLineOut2_13 <= intdelay_reg_14(1);

  tapout_signed_13 <= signed(tapout_13);

  intdelay_28_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_13 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_13 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_13 <= tapout_signed_13;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_28_process;


  dinDly2_signed_14 <= signed(dinDly2_14);

  intdelay_29_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_15 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_15 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_15(0) <= dinDly2_signed_14;
          intdelay_reg_15(1) <= intdelay_reg_15(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_29_process;

  dlyLineOut2_14 <= intdelay_reg_15(1);

  tapout_signed_14 <= signed(tapout_14);

  intdelay_30_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_14 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_14 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_14 <= tapout_signed_14;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_30_process;


  dinDly2_signed_15 <= signed(dinDly2_15);

  intdelay_31_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_16 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_16 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_16(0) <= dinDly2_signed_15;
          intdelay_reg_16(1) <= intdelay_reg_16(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_31_process;

  dlyLineOut2_15 <= intdelay_reg_16(1);

  tapout_signed_15 <= signed(tapout_15);

  intdelay_32_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_15 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_15 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_15 <= tapout_signed_15;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_32_process;


  dinDly2_signed_16 <= signed(dinDly2_16);

  intdelay_33_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_17 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_17 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_17(0) <= dinDly2_signed_16;
          intdelay_reg_17(1) <= intdelay_reg_17(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_33_process;

  dlyLineOut2_16 <= intdelay_reg_17(1);

  tapout_signed_16 <= signed(tapout_16);

  intdelay_34_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_16 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_16 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_16 <= tapout_signed_16;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_34_process;


  dinDly2_signed_17 <= signed(dinDly2_17);

  intdelay_35_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_18 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_18 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_18(0) <= dinDly2_signed_17;
          intdelay_reg_18(1) <= intdelay_reg_18(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_35_process;

  dlyLineOut2_17 <= intdelay_reg_18(1);

  tapout_signed_17 <= signed(tapout_17);

  intdelay_36_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_17 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_17 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_17 <= tapout_signed_17;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_36_process;


  dinDly2_signed_18 <= signed(dinDly2_18);

  intdelay_37_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_19 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_19 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_19(0) <= dinDly2_signed_18;
          intdelay_reg_19(1) <= intdelay_reg_19(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_37_process;

  dlyLineOut2_18 <= intdelay_reg_19(1);

  tapout_signed_18 <= signed(tapout_18);

  intdelay_38_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_18 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_18 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_18 <= tapout_signed_18;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_38_process;


  dinDly2_signed_19 <= signed(dinDly2_19);

  intdelay_39_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_20 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_20 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_20(0) <= dinDly2_signed_19;
          intdelay_reg_20(1) <= intdelay_reg_20(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_39_process;

  dlyLineOut2_19 <= intdelay_reg_20(1);

  tapout_signed_19 <= signed(tapout_19);

  intdelay_40_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_19 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_19 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_19 <= tapout_signed_19;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_40_process;


  dinDly2_signed_20 <= signed(dinDly2_20);

  intdelay_41_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_21 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_21 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_21(0) <= dinDly2_signed_20;
          intdelay_reg_21(1) <= intdelay_reg_21(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_41_process;

  dlyLineOut2_20 <= intdelay_reg_21(1);

  tapout_signed_20 <= signed(tapout_20);

  intdelay_42_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_20 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_20 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_20 <= tapout_signed_20;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_42_process;


  dinDly2_signed_21 <= signed(dinDly2_21);

  intdelay_43_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_22 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_22 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_22(0) <= dinDly2_signed_21;
          intdelay_reg_22(1) <= intdelay_reg_22(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_43_process;

  dlyLineOut2_21 <= intdelay_reg_22(1);

  tapout_signed_21 <= signed(tapout_21);

  intdelay_44_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_21 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_21 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_21 <= tapout_signed_21;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_44_process;


  dinDly2_signed_22 <= signed(dinDly2_22);

  intdelay_45_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_23 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_23 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_23(0) <= dinDly2_signed_22;
          intdelay_reg_23(1) <= intdelay_reg_23(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_45_process;

  dlyLineOut2_22 <= intdelay_reg_23(1);

  tapout_signed_22 <= signed(tapout_22);

  intdelay_46_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_22 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_22 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_22 <= tapout_signed_22;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_46_process;


  dinDly2_signed_23 <= signed(dinDly2_23);

  intdelay_47_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_24 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_24 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_24(0) <= dinDly2_signed_23;
          intdelay_reg_24(1) <= intdelay_reg_24(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_47_process;

  dlyLineOut2_23 <= intdelay_reg_24(1);

  tapout_signed_23 <= signed(tapout_23);

  intdelay_48_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_23 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_23 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_23 <= tapout_signed_23;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_48_process;


  dinDly2_signed_24 <= signed(dinDly2_24);

  intdelay_49_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_25 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_25 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_25(0) <= dinDly2_signed_24;
          intdelay_reg_25(1) <= intdelay_reg_25(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_49_process;

  dlyLineOut2_24 <= intdelay_reg_25(1);

  tapout_signed_24 <= signed(tapout_24);

  intdelay_50_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_24 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_24 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_24 <= tapout_signed_24;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_50_process;


  dinDly2_signed_25 <= signed(dinDly2_25);

  intdelay_51_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_26 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_26 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_26(0) <= dinDly2_signed_25;
          intdelay_reg_26(1) <= intdelay_reg_26(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_51_process;

  dlyLineOut2_25 <= intdelay_reg_26(1);

  tapout_signed_25 <= signed(tapout_25);

  intdelay_52_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_25 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_25 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_25 <= tapout_signed_25;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_52_process;


  dinDly2_signed_26 <= signed(dinDly2_26);

  intdelay_53_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_27 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_27 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_27(0) <= dinDly2_signed_26;
          intdelay_reg_27(1) <= intdelay_reg_27(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_53_process;

  dlyLineOut2_26 <= intdelay_reg_27(1);

  tapout_signed_26 <= signed(tapout_26);

  intdelay_54_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_26 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_26 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_26 <= tapout_signed_26;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_54_process;


  dinDly2_signed_27 <= signed(dinDly2_27);

  intdelay_55_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_28 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_28 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_28(0) <= dinDly2_signed_27;
          intdelay_reg_28(1) <= intdelay_reg_28(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_55_process;

  dlyLineOut2_27 <= intdelay_reg_28(1);

  tapout_signed_27 <= signed(tapout_27);

  intdelay_56_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_27 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_27 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_27 <= tapout_signed_27;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_56_process;


  dinDly2_signed_28 <= signed(dinDly2_28);

  intdelay_57_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_29 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_29 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_29(0) <= dinDly2_signed_28;
          intdelay_reg_29(1) <= intdelay_reg_29(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_57_process;

  dlyLineOut2_28 <= intdelay_reg_29(1);

  tapout_signed_28 <= signed(tapout_28);

  intdelay_58_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_28 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_28 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_28 <= tapout_signed_28;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_58_process;


  dinDly2_signed_29 <= signed(dinDly2_29);

  intdelay_59_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_30 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_30 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_30(0) <= dinDly2_signed_29;
          intdelay_reg_30(1) <= intdelay_reg_30(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_59_process;

  dlyLineOut2_29 <= intdelay_reg_30(1);

  tapout_signed_29 <= signed(tapout_29);

  intdelay_60_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_29 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_29 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_29 <= tapout_signed_29;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_60_process;


  dinDly2_signed_30 <= signed(dinDly2_30);

  intdelay_61_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_31 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_31 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_31(0) <= dinDly2_signed_30;
          intdelay_reg_31(1) <= intdelay_reg_31(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_61_process;

  dlyLineOut2_30 <= intdelay_reg_31(1);

  tapout_signed_30 <= signed(tapout_30);

  intdelay_62_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_30 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_30 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_30 <= tapout_signed_30;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_62_process;


  dinDly2_signed_31 <= signed(dinDly2_31);

  intdelay_63_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_32 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_32 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_32(0) <= dinDly2_signed_31;
          intdelay_reg_32(1) <= intdelay_reg_32(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_63_process;

  dlyLineOut2_31 <= intdelay_reg_32(1);

  tapout_signed_31 <= signed(tapout_31);

  intdelay_64_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_31 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_31 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_31 <= tapout_signed_31;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_64_process;


  dinDly2_signed_32 <= signed(dinDly2_32);

  intdelay_65_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_33 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_33 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_33(0) <= dinDly2_signed_32;
          intdelay_reg_33(1) <= intdelay_reg_33(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_65_process;

  dlyLineOut2_32 <= intdelay_reg_33(1);

  tapout_signed_32 <= signed(tapout_32);

  intdelay_66_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_32 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_32 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_32 <= tapout_signed_32;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_66_process;


  dinDly2_signed_33 <= signed(dinDly2_33);

  intdelay_67_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        intdelay_reg_34 <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_34 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_34(0) <= dinDly2_signed_33;
          intdelay_reg_34(1) <= intdelay_reg_34(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_67_process;

  dlyLineOut2_33 <= intdelay_reg_34(1);

  tapout_signed_33 <= signed(tapout_33);

  intdelay_68_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dlyLineOut1_33 <= to_signed(0, 48);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_33 <= to_signed(0, 48);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_33 <= tapout_signed_33;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_68_process;


  tapout_signed_34 <= signed(tapout_34);

  dout_cast <= tapout_signed_34(32 DOWNTO 0);

  
  muxOut <= ZERO_OUT WHEN vldOutTmp = '0' ELSE
      dout_cast;

  intdelay_69_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        dout_1_re_tmp <= to_signed(0, 33);
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          dout_1_re_tmp <= to_signed(0, 33);
        ELSE 
          dout_1_re_tmp <= muxOut;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_69_process;


  dout_1_re <= std_logic_vector(dout_1_re_tmp);

  intdelay_70_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        doutVld <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        IF syncReset = '1' THEN
          doutVld <= '0';
        ELSE 
          doutVld <= vldOutTmp;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_70_process;


END rtl;

