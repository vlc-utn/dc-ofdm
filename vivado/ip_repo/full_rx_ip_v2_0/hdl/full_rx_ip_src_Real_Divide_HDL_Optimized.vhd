-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_Real_Divide_HDL_Optimized.vhd
-- Created: 2024-08-11 11:00:05
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_Real_Divide_HDL_Optimized
-- Source Path: HDLRx/full_rx/rx_demodulator_full/ofdm_symbol_sync/m_cox/Real Divide HDL Optimized
-- Hierarchy Level: 4
-- Model version: 1.44
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_rx_ip_src_Real_Divide_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        num                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        den                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        validIn                           :   IN    std_logic;
        y                                 :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
        );
END full_rx_ip_src_Real_Divide_HDL_Optimized;


ARCHITECTURE rtl OF full_rx_ip_src_Real_Divide_HDL_Optimized IS

  -- Component Declarations
  COMPONENT full_rx_ip_src_Verify_divide_sizes
    PORT( denominator                     :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          numerator                       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          den                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          num                             :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En24
          );
  END COMPONENT;

  COMPONENT full_rx_ip_src_ForEach_Real_Divide
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          den                             :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          num                             :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          validIn                         :   IN    std_logic;
          y                               :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
          );
  END COMPONENT;

  COMPONENT full_rx_ip_src_Reshape_to_original_size
    PORT( y                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          u                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          z                               :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_rx_ip_src_Verify_divide_sizes
    USE ENTITY work.full_rx_ip_src_Verify_divide_sizes(rtl);

  FOR ALL : full_rx_ip_src_ForEach_Real_Divide
    USE ENTITY work.full_rx_ip_src_ForEach_Real_Divide(rtl);

  FOR ALL : full_rx_ip_src_Reshape_to_original_size
    USE ENTITY work.full_rx_ip_src_Reshape_to_original_size(rtl);

  -- Signals
  SIGNAL den_1                            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL num_1                            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ForEach_Real_Divide_out1         : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL z                                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL z_signed                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay17_out1                     : signed(15 DOWNTO 0);  -- sfix16_En12

BEGIN
  u_Verify_divide_sizes : full_rx_ip_src_Verify_divide_sizes
    PORT MAP( denominator => den,  -- sfix32_En24
              numerator => num,  -- sfix32_En24
              den => den_1,  -- sfix32_En24
              num => num_1  -- sfix32_En24
              );

  u_ForEach_Real_Divide_instance1 : full_rx_ip_src_ForEach_Real_Divide
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb_1_4_0 => enb_1_4_0,
              den => den_1,  -- sfix32_En24
              num => num_1,  -- sfix32_En24
              validIn => validIn,
              y => ForEach_Real_Divide_out1  -- sfix16_En12
              );

  u_Reshape_to_original_size : full_rx_ip_src_Reshape_to_original_size
    PORT MAP( y => ForEach_Real_Divide_out1,  -- sfix16_En12
              u => num,  -- sfix32_En24
              z => z  -- sfix16_En12
              );

  z_signed <= signed(z);

  Delay17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay17_out1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_4_0 = '1' THEN
        Delay17_out1 <= z_signed;
      END IF;
    END IF;
  END PROCESS Delay17_process;


  y <= std_logic_vector(Delay17_out1);

END rtl;

