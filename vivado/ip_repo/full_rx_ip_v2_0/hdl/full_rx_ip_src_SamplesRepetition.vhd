-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_SamplesRepetition.vhd
-- Created: 2024-08-11 11:00:05
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_SamplesRepetition
-- Source Path: 
-- Hierarchy Level: 4
-- Model version: 1.44
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_rx_ip_src_SamplesRepetition IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        varargin_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        varargin_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        varargin_2                        :   IN    std_logic;
        varargin_3                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargin_4                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargin_5                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargout_1_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        varargout_1_im                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        varargout_2                       :   OUT   std_logic;
        varargout_3                       :   OUT   std_logic_vector(8 DOWNTO 0);  -- ufix9
        varargout_4                       :   OUT   std_logic_vector(8 DOWNTO 0);  -- ufix9
        varargout_5                       :   OUT   std_logic_vector(8 DOWNTO 0)  -- ufix9
        );
END full_rx_ip_src_SamplesRepetition;


ARCHITECTURE rtl OF full_rx_ip_src_SamplesRepetition IS

  -- Component Declarations
  COMPONENT full_rx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          wr_din_re                       :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_din_im                       :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          dout_re                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          dout_im                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_rx_ip_src_SimpleDualPortRAM_generic_block
    USE ENTITY work.full_rx_ip_src_SimpleDualPortRAM_generic_block(rtl);

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL varargout_2_1                    : std_logic;
  SIGNAL obj_SamplesRepetitionObj_resetSig : std_logic;
  SIGNAL obj_SamplesRepetitionObj_resetSig_1 : std_logic;
  SIGNAL tmp                              : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validInReg : std_logic;
  SIGNAL tmp_1                            : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validInReg_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_currFFTLength : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL varargin_3_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_SamplesRepetitionObj_FFTLenReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLenReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_2                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLenReg_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_3                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_inCount : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_inCount_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_inCount_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_4                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_5                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_6                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_currFFTLength_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s                                : std_logic;
  SIGNAL a0                               : std_logic;
  SIGNAL tmp_7                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_8                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_9                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0_1                             : std_logic;
  SIGNAL obj_SamplesRepetitionObj_flag    : std_logic;
  SIGNAL a0_2                             : std_logic;
  SIGNAL obj_SamplesRepetitionObj_flag_1  : std_logic;
  SIGNAL obj_SamplesRepetitionObj_flag_2  : std_logic;
  SIGNAL obj_SamplesRepetitionObj_flag_3  : std_logic;
  SIGNAL tmp_10                           : std_logic;
  SIGNAL tmp_11                           : std_logic;
  SIGNAL tmp_12                           : std_logic;
  SIGNAL tmp_13                           : std_logic;
  SIGNAL tmp_14                           : std_logic;
  SIGNAL tmp_15                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_sym2Done : std_logic;
  SIGNAL obj_SamplesRepetitionObj_sym2Done_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_sym2Done_2 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_startRead2 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_startRead2_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_startRead2_2 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_outCount : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_outCount_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_outCount_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_startRead2_3 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_sym1Done : std_logic;
  SIGNAL obj_SamplesRepetitionObj_sym1Done_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_sym1Done_2 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_startRead1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_startRead1_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_startRead1_2 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_startRead1_3 : std_logic;
  SIGNAL tmp_16                           : std_logic;
  SIGNAL tmp_17                           : std_logic;
  SIGNAL s_1                              : std_logic;
  SIGNAL obj_SamplesRepetitionObj_startRead1_4 : std_logic;
  SIGNAL tmp_18                           : std_logic;
  SIGNAL s_2                              : std_logic;
  SIGNAL tmp_19                           : std_logic;
  SIGNAL tmp_20                           : std_logic;
  SIGNAL tmp_21                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_outCount_3 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_22                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_23                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_24                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_3                              : std_logic;
  SIGNAL tmp_25                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_4                              : std_logic;
  SIGNAL tmp_26                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_27                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_28                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_startRead2_4 : std_logic;
  SIGNAL tmp_29                           : std_logic;
  SIGNAL tmp_30                           : std_logic;
  SIGNAL tmp_31                           : std_logic;
  SIGNAL tmp_32                           : std_logic;
  SIGNAL tmp_33                           : std_logic;
  SIGNAL tmp_34                           : std_logic;
  SIGNAL tmp_35                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_sym2Done_3 : std_logic;
  SIGNAL tmp_36                           : std_logic;
  SIGNAL tmp_37                           : std_logic;
  SIGNAL tmp_38                           : std_logic;
  SIGNAL tmp_39                           : std_logic;
  SIGNAL tmp_40                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_sym1Done_3 : std_logic;
  SIGNAL tmp_41                           : std_logic;
  SIGNAL tmp_42                           : std_logic;
  SIGNAL tmp_43                           : std_logic;
  SIGNAL tmp_44                           : std_logic;
  SIGNAL tmp_45                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_strtRd1Reg : std_logic;
  SIGNAL tmp_46                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_strtRd1Reg_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_strtRd1Reg1 : std_logic;
  SIGNAL tmp_47                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_strtRd1Reg1_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_strtRd2Reg : std_logic;
  SIGNAL tmp_48                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_strtRd2Reg_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_strtRd2Reg1 : std_logic;
  SIGNAL tmp_49                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_strtRd2Reg1_1 : std_logic;
  SIGNAL s_5                              : std_logic;
  SIGNAL s_6                              : std_logic;
  SIGNAL obj_SamplesRepetitionObj_dataOutReg_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL varargin_1_re_signed             : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL varargin_1_im_signed             : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataInReg_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataInReg_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re                           : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im                           : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataInReg_re_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataInReg_im_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataInReg1_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataInReg1_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re_1                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im_1                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataInReg1_re_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataInReg1_im_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_wrAddr2 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_wrAddr2_1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_wrAddr2_2 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_50                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_51                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_52                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_53                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_54                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL s_7                              : std_logic;
  SIGNAL out_rsvd                         : std_logic;
  SIGNAL out_rsvd_1                       : std_logic;
  SIGNAL tmp_55                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_wrEn2   : std_logic;
  SIGNAL tmp_56                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_wrEn2_1 : std_logic;
  SIGNAL s_8                              : std_logic;
  SIGNAL tmp_57                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_prevFFTLength : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_prevFFTLength_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_58                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_59                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_60                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_rdAddr2 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_rdAddr2_1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_rdAddr2_2 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_61                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_62                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_rdAddr2_3 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_63                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL s_9                              : std_logic;
  SIGNAL tmp_64                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_65                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_66                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_67                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL varargout_1_re_1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_im_1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_re_signed            : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL varargout_1_im_signed            : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re_2                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im_2                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_wrAddr1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_wrAddr1_1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_wrAddr1_2 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_68                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_69                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_70                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_71                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_72                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL s_10                             : std_logic;
  SIGNAL out_rsvd_2                       : std_logic;
  SIGNAL out_rsvd_3                       : std_logic;
  SIGNAL tmp_73                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_wrEn1   : std_logic;
  SIGNAL tmp_74                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_wrEn1_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_rdAddr1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_rdAddr1_1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_rdAddr1_2 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_75                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_76                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_SamplesRepetitionObj_rdAddr1_3 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_77                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL s_11                             : std_logic;
  SIGNAL tmp_78                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_79                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_80                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL varargout_1_re_2                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_im_2                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_re_signed_1          : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL varargout_1_im_signed_1          : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re_3                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im_3                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg_re_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg_im_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re_4                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im_4                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg_re_2 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg_im_2 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg1_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg1_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re_5                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im_5                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg1_re_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOutReg1_im_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOut_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOut_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re_6                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im_6                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOut_re_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_dataOut_im_1 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_SamplesRepetitionObj_validOutReg : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg_1 : std_logic;
  SIGNAL tmp_81                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg_2 : std_logic;
  SIGNAL tmp_82                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg_3 : std_logic;
  SIGNAL tmp_83                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg_4 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg1 : std_logic;
  SIGNAL tmp_84                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg1_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg2 : std_logic;
  SIGNAL tmp_85                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg2_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg3 : std_logic;
  SIGNAL tmp_86                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOutReg3_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOut : std_logic;
  SIGNAL tmp_87                           : std_logic;
  SIGNAL obj_SamplesRepetitionObj_validOut_1 : std_logic;
  SIGNAL obj_SamplesRepetitionObj_FFTLengthReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_88                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_89                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthReg1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthReg1_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_90                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_91                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_92                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthReg2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_93                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthReg2_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthReg3 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_94                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthReg3_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthRegOut : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_95                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_FFTLengthRegOut_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL varargin_4_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_SamplesRepetitionObj_LGaurdReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_96                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdReg_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_97                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_98                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubReg1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubReg1_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_99                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_100                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_101                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubReg2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_102                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubReg2_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubReg3 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_103                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubReg3_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubRegOut : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_104                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_LGaurdSubRegOut_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL varargin_5_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_SamplesRepetitionObj_RGaurdReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_105                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdReg_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_106                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_107                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubReg1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubReg1_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_108                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_109                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_110                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubReg2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_111                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubReg2_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubReg3 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_112                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubReg3_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubRegOut : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_113                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_SamplesRepetitionObj_RGaurdSubRegOut_1 : unsigned(8 DOWNTO 0);  -- ufix9

BEGIN
  u_simpleDualPortRam : full_rx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC MAP( AddrWidth => 8,
                 DataWidth => 16
                 )
    PORT MAP( clk => clk,
              enb_1_4_0 => enb_1_4_0,
              wr_din_re => std_logic_vector(obj_SamplesRepetitionObj_dataInReg1_re_1),
              wr_din_im => std_logic_vector(obj_SamplesRepetitionObj_dataInReg1_im_1),
              wr_addr => std_logic_vector(obj_SamplesRepetitionObj_wrAddr2_2),
              wr_en => obj_SamplesRepetitionObj_wrEn2_1,
              rd_addr => std_logic_vector(obj_SamplesRepetitionObj_rdAddr2_3),
              dout_re => varargout_1_re_1,
              dout_im => varargout_1_im_1
              );

  u_simpleDualPortRam_1 : full_rx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC MAP( AddrWidth => 8,
                 DataWidth => 16
                 )
    PORT MAP( clk => clk,
              enb_1_4_0 => enb_1_4_0,
              wr_din_re => std_logic_vector(obj_SamplesRepetitionObj_dataInReg1_re_1),
              wr_din_im => std_logic_vector(obj_SamplesRepetitionObj_dataInReg1_im_1),
              wr_addr => std_logic_vector(obj_SamplesRepetitionObj_wrAddr1_2),
              wr_en => obj_SamplesRepetitionObj_wrEn1_1,
              rd_addr => std_logic_vector(obj_SamplesRepetitionObj_rdAddr1_3),
              dout_re => varargout_1_re_2,
              dout_im => varargout_1_im_2
              );

  varargout_2_1 <= varargin_2;

  obj_SamplesRepetitionObj_resetSig <= '0';

  
  tmp <= obj_SamplesRepetitionObj_resetSig_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_resetSig;

  obj_SamplesRepetitionObj_resetSig_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_resetSig_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_resetSig_1 <= tmp;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_resetSig_reg_process;


  obj_SamplesRepetitionObj_validInReg <= '0';

  
  tmp_1 <= varargout_2_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_validInReg;

  obj_SamplesRepetitionObj_validInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_validInReg_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_validInReg_1 <= tmp_1;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_validInReg_reg_process;


  obj_SamplesRepetitionObj_currFFTLength <= to_unsigned(16#100#, 9);

  varargin_3_unsigned <= unsigned(varargin_3);

  obj_SamplesRepetitionObj_FFTLenReg <= varargin_3_unsigned(8 DOWNTO 0);

  obj_SamplesRepetitionObj_FFTLenReg_1 <= to_unsigned(16#100#, 9);

  
  tmp_2 <= obj_SamplesRepetitionObj_FFTLenReg WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_FFTLenReg_1;

  obj_SamplesRepetitionObj_FFTLenReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_FFTLenReg_2 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_FFTLenReg_2 <= tmp_2;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_FFTLenReg_reg_process;


  tmp_3 <= obj_SamplesRepetitionObj_FFTLenReg_2 - to_unsigned(16#001#, 9);

  obj_SamplesRepetitionObj_inCount <= to_unsigned(16#000#, 9);

  obj_SamplesRepetitionObj_inCount_1 <= to_unsigned(16#000#, 9);

  tmp_4 <= obj_SamplesRepetitionObj_inCount_2 + to_unsigned(16#001#, 9);

  
  tmp_6 <= tmp_5 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_currFFTLength;

  obj_SamplesRepetitionObj_currFFTLength_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_currFFTLength_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_currFFTLength_1 <= tmp_6;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_currFFTLength_reg_process;


  s <= hdlcoder_to_stdlogic(obj_SamplesRepetitionObj_inCount_2 = to_unsigned(16#000#, 9)) AND obj_SamplesRepetitionObj_validInReg_1;

  
  tmp_5 <= obj_SamplesRepetitionObj_currFFTLength_1 WHEN s = '0' ELSE
      tmp_3;

  
  a0 <= '1' WHEN obj_SamplesRepetitionObj_inCount_2 = tmp_5 ELSE
      '0';

  
  tmp_7 <= tmp_4 WHEN a0 = '0' ELSE
      obj_SamplesRepetitionObj_inCount;

  
  tmp_8 <= obj_SamplesRepetitionObj_inCount_2 WHEN obj_SamplesRepetitionObj_validInReg_1 = '0' ELSE
      tmp_7;

  
  tmp_9 <= tmp_8 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_inCount_1;

  obj_SamplesRepetitionObj_inCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_inCount_2 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_inCount_2 <= tmp_9;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_inCount_reg_process;


  
  a0_1 <= '1' WHEN obj_SamplesRepetitionObj_inCount_2 = tmp_5 ELSE
      '0';

  obj_SamplesRepetitionObj_flag <= '1';

  
  a0_2 <= '1' WHEN obj_SamplesRepetitionObj_inCount_2 = tmp_5 ELSE
      '0';

  obj_SamplesRepetitionObj_flag_1 <= '0';

  obj_SamplesRepetitionObj_flag_2 <= '0';

  
  tmp_10 <= obj_SamplesRepetitionObj_flag_3 WHEN a0_2 = '0' ELSE
      obj_SamplesRepetitionObj_flag_1;

  
  tmp_11 <= obj_SamplesRepetitionObj_flag_3 WHEN obj_SamplesRepetitionObj_validInReg_1 = '0' ELSE
      tmp_10;

  
  tmp_12 <= obj_SamplesRepetitionObj_flag_3 WHEN a0_1 = '0' ELSE
      obj_SamplesRepetitionObj_flag;

  
  tmp_13 <= obj_SamplesRepetitionObj_flag_3 WHEN obj_SamplesRepetitionObj_validInReg_1 = '0' ELSE
      tmp_12;

  
  tmp_14 <= tmp_13 WHEN obj_SamplesRepetitionObj_flag_3 = '0' ELSE
      tmp_11;

  
  tmp_15 <= tmp_14 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_flag_2;

  obj_SamplesRepetitionObj_flag_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_flag_3 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_flag_3 <= tmp_15;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_flag_reg_process;


  obj_SamplesRepetitionObj_sym2Done <= '0';

  obj_SamplesRepetitionObj_sym2Done_1 <= '1';

  obj_SamplesRepetitionObj_sym2Done_2 <= '0';

  obj_SamplesRepetitionObj_startRead2 <= '1';

  obj_SamplesRepetitionObj_startRead2_1 <= '0';

  obj_SamplesRepetitionObj_startRead2_2 <= '0';

  obj_SamplesRepetitionObj_outCount <= to_unsigned(16#000#, 9);

  obj_SamplesRepetitionObj_outCount_1 <= to_unsigned(16#000#, 9);

  obj_SamplesRepetitionObj_outCount_2 <= to_unsigned(16#000#, 9);

  obj_SamplesRepetitionObj_startRead2_3 <= '0';

  obj_SamplesRepetitionObj_sym1Done <= '0';

  obj_SamplesRepetitionObj_sym1Done_1 <= '1';

  obj_SamplesRepetitionObj_sym1Done_2 <= '0';

  obj_SamplesRepetitionObj_startRead1 <= '0';

  obj_SamplesRepetitionObj_startRead1_1 <= '1';

  obj_SamplesRepetitionObj_startRead1_2 <= '0';

  obj_SamplesRepetitionObj_startRead1_3 <= '0';

  
  tmp_17 <= obj_SamplesRepetitionObj_startRead1_1 WHEN tmp_16 = '0' ELSE
      obj_SamplesRepetitionObj_startRead1_2;

  
  tmp_18 <= obj_SamplesRepetitionObj_startRead1_4 WHEN s_1 = '0' ELSE
      obj_SamplesRepetitionObj_startRead1;

  
  tmp_19 <= obj_SamplesRepetitionObj_startRead1_4 WHEN s_2 = '0' ELSE
      tmp_18;

  
  tmp_21 <= tmp_20 WHEN a0_1 = '0' ELSE
      obj_SamplesRepetitionObj_sym1Done_1;

  tmp_22 <= obj_SamplesRepetitionObj_outCount_3 + to_unsigned(16#001#, 9);

  
  s_1 <= '1' WHEN resize(obj_SamplesRepetitionObj_outCount_3, 10) = to_unsigned(16#0FF#, 10) ELSE
      '0';

  
  tmp_23 <= tmp_22 WHEN s_1 = '0' ELSE
      obj_SamplesRepetitionObj_outCount_1;

  tmp_24 <= obj_SamplesRepetitionObj_outCount_3 + to_unsigned(16#001#, 9);

  
  tmp_25 <= tmp_24 WHEN s_3 = '0' ELSE
      obj_SamplesRepetitionObj_outCount;

  
  tmp_26 <= obj_SamplesRepetitionObj_outCount_3 WHEN s_4 = '0' ELSE
      tmp_25;

  
  tmp_27 <= tmp_26 WHEN s_2 = '0' ELSE
      tmp_23;

  
  tmp_28 <= tmp_27 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_outCount_2;

  obj_SamplesRepetitionObj_outCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_outCount_3 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_outCount_3 <= tmp_28;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_outCount_reg_process;


  
  s_3 <= '1' WHEN resize(obj_SamplesRepetitionObj_outCount_3, 10) = to_unsigned(16#0FF#, 10) ELSE
      '0';

  
  tmp_29 <= obj_SamplesRepetitionObj_startRead2_4 WHEN s_3 = '0' ELSE
      obj_SamplesRepetitionObj_startRead2_3;

  s_4 <= obj_SamplesRepetitionObj_startRead2_4 AND ( NOT obj_SamplesRepetitionObj_startRead1_4);

  
  tmp_30 <= obj_SamplesRepetitionObj_startRead2_4 WHEN s_4 = '0' ELSE
      tmp_29;

  
  tmp_32 <= obj_SamplesRepetitionObj_startRead2 WHEN tmp_31 = '0' ELSE
      obj_SamplesRepetitionObj_startRead2_1;

  
  tmp_34 <= tmp_33 WHEN a0_2 = '0' ELSE
      obj_SamplesRepetitionObj_sym2Done_1;

  
  tmp_35 <= tmp_33 WHEN obj_SamplesRepetitionObj_validInReg_1 = '0' ELSE
      tmp_34;

  
  tmp_36 <= obj_SamplesRepetitionObj_sym2Done WHEN tmp_31 = '0' ELSE
      obj_SamplesRepetitionObj_sym2Done_3;

  
  tmp_33 <= obj_SamplesRepetitionObj_sym2Done_3 WHEN obj_SamplesRepetitionObj_sym2Done_3 = '0' ELSE
      tmp_36;

  
  tmp_37 <= tmp_33 WHEN obj_SamplesRepetitionObj_flag_3 = '0' ELSE
      tmp_35;

  
  tmp_38 <= tmp_37 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_sym2Done_2;

  obj_SamplesRepetitionObj_sym2Done_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_sym2Done_3 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_sym2Done_3 <= tmp_38;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_sym2Done_reg_process;


  
  tmp_39 <= tmp_16 WHEN obj_SamplesRepetitionObj_sym2Done_3 = '0' ELSE
      tmp_32;

  
  tmp_40 <= tmp_39 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_startRead2_2;

  obj_SamplesRepetitionObj_startRead2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_startRead2_4 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_startRead2_4 <= tmp_40;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_startRead2_reg_process;


  s_2 <= obj_SamplesRepetitionObj_startRead1_4 AND ( NOT obj_SamplesRepetitionObj_startRead2_4);

  
  tmp_16 <= tmp_30 WHEN s_2 = '0' ELSE
      obj_SamplesRepetitionObj_startRead2_4;

  
  tmp_41 <= obj_SamplesRepetitionObj_sym1Done WHEN tmp_16 = '0' ELSE
      obj_SamplesRepetitionObj_sym1Done_3;

  
  tmp_20 <= obj_SamplesRepetitionObj_sym1Done_3 WHEN obj_SamplesRepetitionObj_sym1Done_3 = '0' ELSE
      tmp_41;

  
  tmp_42 <= tmp_20 WHEN obj_SamplesRepetitionObj_validInReg_1 = '0' ELSE
      tmp_21;

  
  tmp_43 <= tmp_42 WHEN obj_SamplesRepetitionObj_flag_3 = '0' ELSE
      tmp_20;

  
  tmp_44 <= tmp_43 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_sym1Done_2;

  obj_SamplesRepetitionObj_sym1Done_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_sym1Done_3 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_sym1Done_3 <= tmp_44;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_sym1Done_reg_process;


  
  tmp_31 <= tmp_19 WHEN obj_SamplesRepetitionObj_sym1Done_3 = '0' ELSE
      tmp_17;

  
  tmp_45 <= tmp_31 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_startRead1_3;

  obj_SamplesRepetitionObj_startRead1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_startRead1_4 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_startRead1_4 <= tmp_45;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_startRead1_reg_process;


  obj_SamplesRepetitionObj_strtRd1Reg <= '0';

  
  tmp_46 <= obj_SamplesRepetitionObj_startRead1_4 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_strtRd1Reg;

  obj_SamplesRepetitionObj_strtRd1Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_strtRd1Reg_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_strtRd1Reg_1 <= tmp_46;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_strtRd1Reg_reg_process;


  obj_SamplesRepetitionObj_strtRd1Reg1 <= '0';

  
  tmp_47 <= obj_SamplesRepetitionObj_strtRd1Reg_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_strtRd1Reg1;

  obj_SamplesRepetitionObj_strtRd1Reg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_strtRd1Reg1_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_strtRd1Reg1_1 <= tmp_47;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_strtRd1Reg1_reg_process;


  obj_SamplesRepetitionObj_strtRd2Reg <= '0';

  
  tmp_48 <= obj_SamplesRepetitionObj_startRead2_4 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_strtRd2Reg;

  obj_SamplesRepetitionObj_strtRd2Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_strtRd2Reg_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_strtRd2Reg_1 <= tmp_48;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_strtRd2Reg_reg_process;


  obj_SamplesRepetitionObj_strtRd2Reg1 <= '0';

  
  tmp_49 <= obj_SamplesRepetitionObj_strtRd2Reg_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_strtRd2Reg1;

  obj_SamplesRepetitionObj_strtRd2Reg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_strtRd2Reg1_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_strtRd2Reg1_1 <= tmp_49;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_strtRd2Reg1_reg_process;


  s_5 <= obj_SamplesRepetitionObj_strtRd1Reg1_1 AND ( NOT obj_SamplesRepetitionObj_strtRd2Reg1_1);

  s_6 <= ( NOT obj_SamplesRepetitionObj_strtRd1Reg1_1) AND obj_SamplesRepetitionObj_strtRd2Reg1_1;

  obj_SamplesRepetitionObj_dataOutReg_re <= to_signed(16#0000#, 16);
  obj_SamplesRepetitionObj_dataOutReg_im <= to_signed(16#0000#, 16);

  varargin_1_re_signed <= signed(varargin_1_re);

  varargin_1_im_signed <= signed(varargin_1_im);

  obj_SamplesRepetitionObj_dataInReg_re <= to_signed(16#0000#, 16);
  obj_SamplesRepetitionObj_dataInReg_im <= to_signed(16#0000#, 16);

  
  tmp_re <= varargin_1_re_signed WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataInReg_re;
  
  tmp_im <= varargin_1_im_signed WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataInReg_im;

  obj_SamplesRepetitionObj_dataInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_dataInReg_re_1 <= to_signed(16#0000#, 16);
        obj_SamplesRepetitionObj_dataInReg_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_dataInReg_re_1 <= tmp_re;
        obj_SamplesRepetitionObj_dataInReg_im_1 <= tmp_im;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_dataInReg_reg_process;


  obj_SamplesRepetitionObj_dataInReg1_re <= to_signed(16#0000#, 16);
  obj_SamplesRepetitionObj_dataInReg1_im <= to_signed(16#0000#, 16);

  
  tmp_re_1 <= obj_SamplesRepetitionObj_dataInReg_re_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataInReg1_re;
  
  tmp_im_1 <= obj_SamplesRepetitionObj_dataInReg_im_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataInReg1_im;

  obj_SamplesRepetitionObj_dataInReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_dataInReg1_re_1 <= to_signed(16#0000#, 16);
        obj_SamplesRepetitionObj_dataInReg1_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_dataInReg1_re_1 <= tmp_re_1;
        obj_SamplesRepetitionObj_dataInReg1_im_1 <= tmp_im_1;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_dataInReg1_reg_process;


  obj_SamplesRepetitionObj_wrAddr2 <= to_unsigned(16#00#, 8);

  obj_SamplesRepetitionObj_wrAddr2_1 <= to_unsigned(16#00#, 8);

  tmp_50 <= obj_SamplesRepetitionObj_wrAddr2_2 + to_unsigned(16#01#, 8);

  
  tmp_51 <= tmp_50 WHEN a0_2 = '0' ELSE
      obj_SamplesRepetitionObj_wrAddr2;

  
  tmp_52 <= obj_SamplesRepetitionObj_wrAddr2_2 WHEN obj_SamplesRepetitionObj_validInReg_1 = '0' ELSE
      tmp_51;

  
  tmp_53 <= obj_SamplesRepetitionObj_wrAddr2_2 WHEN obj_SamplesRepetitionObj_flag_3 = '0' ELSE
      tmp_52;

  
  tmp_54 <= tmp_53 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_wrAddr2_1;

  obj_SamplesRepetitionObj_wrAddr2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_wrAddr2_2 <= to_unsigned(16#00#, 8);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_wrAddr2_2 <= tmp_54;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_wrAddr2_reg_process;


  s_7 <= obj_SamplesRepetitionObj_validInReg_1 AND obj_SamplesRepetitionObj_flag_3;

  out_rsvd <= '0';

  out_rsvd_1 <= '1';

  
  tmp_55 <= out_rsvd WHEN s_7 = '0' ELSE
      out_rsvd_1;

  obj_SamplesRepetitionObj_wrEn2 <= '0';

  
  tmp_56 <= tmp_55 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_wrEn2;

  obj_SamplesRepetitionObj_wrEn2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_wrEn2_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_wrEn2_1 <= tmp_56;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_wrEn2_reg_process;


  
  s_8 <= '1' WHEN obj_SamplesRepetitionObj_inCount_2 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  tmp_57 <= '1' WHEN tmp_27 = to_unsigned(16#000#, 9) ELSE
      '0';

  obj_SamplesRepetitionObj_prevFFTLength <= to_unsigned(16#100#, 9);

  
  tmp_58 <= obj_SamplesRepetitionObj_prevFFTLength_1 WHEN tmp_57 = '0' ELSE
      obj_SamplesRepetitionObj_currFFTLength_1;

  
  tmp_59 <= obj_SamplesRepetitionObj_prevFFTLength_1 WHEN s_8 = '0' ELSE
      tmp_58;

  
  tmp_60 <= tmp_59 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_prevFFTLength;

  obj_SamplesRepetitionObj_prevFFTLength_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_prevFFTLength_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_prevFFTLength_1 <= tmp_60;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_prevFFTLength_reg_process;


  obj_SamplesRepetitionObj_rdAddr2 <= to_unsigned(16#00#, 8);

  obj_SamplesRepetitionObj_rdAddr2_1 <= to_unsigned(16#00#, 8);

  obj_SamplesRepetitionObj_rdAddr2_2 <= to_unsigned(16#00#, 8);

  
  tmp_62 <= tmp_61 WHEN tmp_57 = '0' ELSE
      obj_SamplesRepetitionObj_rdAddr2_1;

  tmp_63 <= obj_SamplesRepetitionObj_rdAddr2_3 + to_unsigned(16#01#, 8);

  
  s_9 <= '1' WHEN resize(obj_SamplesRepetitionObj_rdAddr2_3, 9) = obj_SamplesRepetitionObj_prevFFTLength_1 ELSE
      '0';

  
  tmp_64 <= tmp_63 WHEN s_9 = '0' ELSE
      obj_SamplesRepetitionObj_rdAddr2;

  
  tmp_65 <= obj_SamplesRepetitionObj_rdAddr2_3 WHEN s_4 = '0' ELSE
      tmp_64;

  
  tmp_61 <= tmp_65 WHEN s_2 = '0' ELSE
      obj_SamplesRepetitionObj_rdAddr2_3;

  
  tmp_66 <= tmp_61 WHEN s_8 = '0' ELSE
      tmp_62;

  
  tmp_67 <= tmp_66 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_rdAddr2_2;

  obj_SamplesRepetitionObj_rdAddr2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_rdAddr2_3 <= to_unsigned(16#00#, 8);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_rdAddr2_3 <= tmp_67;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_rdAddr2_reg_process;


  varargout_1_re_signed <= signed(varargout_1_re_1);

  varargout_1_im_signed <= signed(varargout_1_im_1);

  
  tmp_re_2 <= obj_SamplesRepetitionObj_dataOutReg_re WHEN s_6 = '0' ELSE
      varargout_1_re_signed;
  
  tmp_im_2 <= obj_SamplesRepetitionObj_dataOutReg_im WHEN s_6 = '0' ELSE
      varargout_1_im_signed;

  obj_SamplesRepetitionObj_wrAddr1 <= to_unsigned(16#00#, 8);

  obj_SamplesRepetitionObj_wrAddr1_1 <= to_unsigned(16#00#, 8);

  tmp_68 <= obj_SamplesRepetitionObj_wrAddr1_2 + to_unsigned(16#01#, 8);

  
  tmp_69 <= tmp_68 WHEN a0_1 = '0' ELSE
      obj_SamplesRepetitionObj_wrAddr1;

  
  tmp_70 <= obj_SamplesRepetitionObj_wrAddr1_2 WHEN obj_SamplesRepetitionObj_validInReg_1 = '0' ELSE
      tmp_69;

  
  tmp_71 <= tmp_70 WHEN obj_SamplesRepetitionObj_flag_3 = '0' ELSE
      obj_SamplesRepetitionObj_wrAddr1_2;

  
  tmp_72 <= tmp_71 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_wrAddr1_1;

  obj_SamplesRepetitionObj_wrAddr1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_wrAddr1_2 <= to_unsigned(16#00#, 8);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_wrAddr1_2 <= tmp_72;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_wrAddr1_reg_process;


  s_10 <= obj_SamplesRepetitionObj_validInReg_1 AND ( NOT obj_SamplesRepetitionObj_flag_3);

  out_rsvd_2 <= '0';

  out_rsvd_3 <= '1';

  
  tmp_73 <= out_rsvd_2 WHEN s_10 = '0' ELSE
      out_rsvd_3;

  obj_SamplesRepetitionObj_wrEn1 <= '0';

  
  tmp_74 <= tmp_73 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_wrEn1;

  obj_SamplesRepetitionObj_wrEn1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_wrEn1_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_wrEn1_1 <= tmp_74;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_wrEn1_reg_process;


  obj_SamplesRepetitionObj_rdAddr1 <= to_unsigned(16#00#, 8);

  obj_SamplesRepetitionObj_rdAddr1_1 <= to_unsigned(16#00#, 8);

  obj_SamplesRepetitionObj_rdAddr1_2 <= to_unsigned(16#00#, 8);

  
  tmp_76 <= tmp_75 WHEN tmp_57 = '0' ELSE
      obj_SamplesRepetitionObj_rdAddr1_1;

  tmp_77 <= obj_SamplesRepetitionObj_rdAddr1_3 + to_unsigned(16#01#, 8);

  
  s_11 <= '1' WHEN resize(obj_SamplesRepetitionObj_rdAddr1_3, 9) = obj_SamplesRepetitionObj_prevFFTLength_1 ELSE
      '0';

  
  tmp_78 <= tmp_77 WHEN s_11 = '0' ELSE
      obj_SamplesRepetitionObj_rdAddr1;

  
  tmp_75 <= obj_SamplesRepetitionObj_rdAddr1_3 WHEN s_2 = '0' ELSE
      tmp_78;

  
  tmp_79 <= tmp_75 WHEN s_8 = '0' ELSE
      tmp_76;

  
  tmp_80 <= tmp_79 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_rdAddr1_2;

  obj_SamplesRepetitionObj_rdAddr1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_rdAddr1_3 <= to_unsigned(16#00#, 8);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_rdAddr1_3 <= tmp_80;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_rdAddr1_reg_process;


  varargout_1_re_signed_1 <= signed(varargout_1_re_2);

  varargout_1_im_signed_1 <= signed(varargout_1_im_2);

  
  tmp_re_3 <= tmp_re_2 WHEN s_5 = '0' ELSE
      varargout_1_re_signed_1;
  
  tmp_im_3 <= tmp_im_2 WHEN s_5 = '0' ELSE
      varargout_1_im_signed_1;

  obj_SamplesRepetitionObj_dataOutReg_re_1 <= to_signed(16#0000#, 16);
  obj_SamplesRepetitionObj_dataOutReg_im_1 <= to_signed(16#0000#, 16);

  
  tmp_re_4 <= tmp_re_3 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataOutReg_re_1;
  
  tmp_im_4 <= tmp_im_3 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataOutReg_im_1;

  obj_SamplesRepetitionObj_dataOutReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_dataOutReg_re_2 <= to_signed(16#0000#, 16);
        obj_SamplesRepetitionObj_dataOutReg_im_2 <= to_signed(16#0000#, 16);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_dataOutReg_re_2 <= tmp_re_4;
        obj_SamplesRepetitionObj_dataOutReg_im_2 <= tmp_im_4;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_dataOutReg_reg_process;


  obj_SamplesRepetitionObj_dataOutReg1_re <= to_signed(16#0000#, 16);
  obj_SamplesRepetitionObj_dataOutReg1_im <= to_signed(16#0000#, 16);

  
  tmp_re_5 <= obj_SamplesRepetitionObj_dataOutReg_re_2 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataOutReg1_re;
  
  tmp_im_5 <= obj_SamplesRepetitionObj_dataOutReg_im_2 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataOutReg1_im;

  obj_SamplesRepetitionObj_dataOutReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_dataOutReg1_re_1 <= to_signed(16#0000#, 16);
        obj_SamplesRepetitionObj_dataOutReg1_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_dataOutReg1_re_1 <= tmp_re_5;
        obj_SamplesRepetitionObj_dataOutReg1_im_1 <= tmp_im_5;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_dataOutReg1_reg_process;


  obj_SamplesRepetitionObj_dataOut_re <= to_signed(16#0000#, 16);
  obj_SamplesRepetitionObj_dataOut_im <= to_signed(16#0000#, 16);

  
  tmp_re_6 <= obj_SamplesRepetitionObj_dataOutReg1_re_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataOut_re;
  
  tmp_im_6 <= obj_SamplesRepetitionObj_dataOutReg1_im_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_dataOut_im;

  obj_SamplesRepetitionObj_dataOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_dataOut_re_1 <= to_signed(16#0000#, 16);
        obj_SamplesRepetitionObj_dataOut_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_dataOut_re_1 <= tmp_re_6;
        obj_SamplesRepetitionObj_dataOut_im_1 <= tmp_im_6;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_dataOut_reg_process;


  varargout_1_re <= std_logic_vector(obj_SamplesRepetitionObj_dataOut_re_1);

  varargout_1_im <= std_logic_vector(obj_SamplesRepetitionObj_dataOut_im_1);

  obj_SamplesRepetitionObj_validOutReg <= '0';

  obj_SamplesRepetitionObj_validOutReg_1 <= '1';

  
  tmp_81 <= obj_SamplesRepetitionObj_validOutReg WHEN s_4 = '0' ELSE
      obj_SamplesRepetitionObj_validOutReg_1;

  obj_SamplesRepetitionObj_validOutReg_2 <= '1';

  
  tmp_82 <= tmp_81 WHEN s_2 = '0' ELSE
      obj_SamplesRepetitionObj_validOutReg_2;

  obj_SamplesRepetitionObj_validOutReg_3 <= '0';

  
  tmp_83 <= tmp_82 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_validOutReg_3;

  obj_SamplesRepetitionObj_validOutReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_validOutReg_4 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_validOutReg_4 <= tmp_83;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_validOutReg_reg_process;


  obj_SamplesRepetitionObj_validOutReg1 <= '0';

  
  tmp_84 <= obj_SamplesRepetitionObj_validOutReg_4 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_validOutReg1;

  obj_SamplesRepetitionObj_validOutReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_validOutReg1_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_validOutReg1_1 <= tmp_84;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_validOutReg1_reg_process;


  obj_SamplesRepetitionObj_validOutReg2 <= '0';

  
  tmp_85 <= obj_SamplesRepetitionObj_validOutReg1_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_validOutReg2;

  obj_SamplesRepetitionObj_validOutReg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_validOutReg2_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_validOutReg2_1 <= tmp_85;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_validOutReg2_reg_process;


  obj_SamplesRepetitionObj_validOutReg3 <= '0';

  
  tmp_86 <= obj_SamplesRepetitionObj_validOutReg2_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_validOutReg3;

  obj_SamplesRepetitionObj_validOutReg3_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_validOutReg3_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_validOutReg3_1 <= tmp_86;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_validOutReg3_reg_process;


  obj_SamplesRepetitionObj_validOut <= '0';

  
  tmp_87 <= obj_SamplesRepetitionObj_validOutReg3_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_validOut;

  obj_SamplesRepetitionObj_validOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_validOut_1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_validOut_1 <= tmp_87;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_validOut_reg_process;


  obj_SamplesRepetitionObj_FFTLengthReg <= to_unsigned(16#100#, 9);

  
  tmp_88 <= obj_SamplesRepetitionObj_FFTLengthReg_1 WHEN s = '0' ELSE
      obj_SamplesRepetitionObj_FFTLenReg_2;

  
  tmp_89 <= tmp_88 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_FFTLengthReg;

  obj_SamplesRepetitionObj_FFTLengthReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthReg_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthReg_1 <= tmp_89;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_FFTLengthReg_reg_process;


  obj_SamplesRepetitionObj_FFTLengthReg1 <= to_unsigned(16#100#, 9);

  
  tmp_90 <= obj_SamplesRepetitionObj_FFTLengthReg1_1 WHEN tmp_57 = '0' ELSE
      obj_SamplesRepetitionObj_FFTLengthReg_1;

  
  tmp_91 <= obj_SamplesRepetitionObj_FFTLengthReg1_1 WHEN s_8 = '0' ELSE
      tmp_90;

  
  tmp_92 <= tmp_91 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_FFTLengthReg1;

  obj_SamplesRepetitionObj_FFTLengthReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthReg1_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthReg1_1 <= tmp_92;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_FFTLengthReg1_reg_process;


  obj_SamplesRepetitionObj_FFTLengthReg2 <= to_unsigned(16#100#, 9);

  
  tmp_93 <= obj_SamplesRepetitionObj_FFTLengthReg1_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_FFTLengthReg2;

  obj_SamplesRepetitionObj_FFTLengthReg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthReg2_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthReg2_1 <= tmp_93;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_FFTLengthReg2_reg_process;


  obj_SamplesRepetitionObj_FFTLengthReg3 <= to_unsigned(16#100#, 9);

  
  tmp_94 <= obj_SamplesRepetitionObj_FFTLengthReg2_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_FFTLengthReg3;

  obj_SamplesRepetitionObj_FFTLengthReg3_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthReg3_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthReg3_1 <= tmp_94;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_FFTLengthReg3_reg_process;


  obj_SamplesRepetitionObj_FFTLengthRegOut <= to_unsigned(16#100#, 9);

  
  tmp_95 <= obj_SamplesRepetitionObj_FFTLengthReg3_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_FFTLengthRegOut;

  obj_SamplesRepetitionObj_FFTLengthRegOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthRegOut_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_FFTLengthRegOut_1 <= tmp_95;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_FFTLengthRegOut_reg_process;


  varargout_3 <= std_logic_vector(obj_SamplesRepetitionObj_FFTLengthRegOut_1);

  varargin_4_unsigned <= unsigned(varargin_4);

  obj_SamplesRepetitionObj_LGaurdReg <= varargin_4_unsigned(8 DOWNTO 0);

  obj_SamplesRepetitionObj_LGaurdReg_1 <= to_unsigned(16#006#, 9);

  
  tmp_96 <= obj_SamplesRepetitionObj_LGaurdReg WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_LGaurdReg_1;

  obj_SamplesRepetitionObj_LGaurdReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_LGaurdReg_2 <= to_unsigned(16#006#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_LGaurdReg_2 <= tmp_96;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_LGaurdReg_reg_process;


  obj_SamplesRepetitionObj_LGaurdSubReg <= to_unsigned(16#006#, 9);

  
  tmp_97 <= obj_SamplesRepetitionObj_LGaurdSubReg_1 WHEN s = '0' ELSE
      obj_SamplesRepetitionObj_LGaurdReg_2;

  
  tmp_98 <= tmp_97 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_LGaurdSubReg;

  obj_SamplesRepetitionObj_LGaurdSubReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubReg_1 <= to_unsigned(16#006#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubReg_1 <= tmp_98;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_LGaurdSubReg_reg_process;


  obj_SamplesRepetitionObj_LGaurdSubReg1 <= to_unsigned(16#006#, 9);

  
  tmp_99 <= obj_SamplesRepetitionObj_LGaurdSubReg1_1 WHEN tmp_57 = '0' ELSE
      obj_SamplesRepetitionObj_LGaurdSubReg_1;

  
  tmp_100 <= obj_SamplesRepetitionObj_LGaurdSubReg1_1 WHEN s_8 = '0' ELSE
      tmp_99;

  
  tmp_101 <= tmp_100 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_LGaurdSubReg1;

  obj_SamplesRepetitionObj_LGaurdSubReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubReg1_1 <= to_unsigned(16#006#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubReg1_1 <= tmp_101;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_LGaurdSubReg1_reg_process;


  obj_SamplesRepetitionObj_LGaurdSubReg2 <= to_unsigned(16#006#, 9);

  
  tmp_102 <= obj_SamplesRepetitionObj_LGaurdSubReg1_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_LGaurdSubReg2;

  obj_SamplesRepetitionObj_LGaurdSubReg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubReg2_1 <= to_unsigned(16#006#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubReg2_1 <= tmp_102;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_LGaurdSubReg2_reg_process;


  obj_SamplesRepetitionObj_LGaurdSubReg3 <= to_unsigned(16#006#, 9);

  
  tmp_103 <= obj_SamplesRepetitionObj_LGaurdSubReg2_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_LGaurdSubReg3;

  obj_SamplesRepetitionObj_LGaurdSubReg3_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubReg3_1 <= to_unsigned(16#006#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubReg3_1 <= tmp_103;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_LGaurdSubReg3_reg_process;


  obj_SamplesRepetitionObj_LGaurdSubRegOut <= to_unsigned(16#006#, 9);

  
  tmp_104 <= obj_SamplesRepetitionObj_LGaurdSubReg3_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_LGaurdSubRegOut;

  obj_SamplesRepetitionObj_LGaurdSubRegOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubRegOut_1 <= to_unsigned(16#006#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_LGaurdSubRegOut_1 <= tmp_104;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_LGaurdSubRegOut_reg_process;


  varargout_4 <= std_logic_vector(obj_SamplesRepetitionObj_LGaurdSubRegOut_1);

  varargin_5_unsigned <= unsigned(varargin_5);

  obj_SamplesRepetitionObj_RGaurdReg <= varargin_5_unsigned(8 DOWNTO 0);

  obj_SamplesRepetitionObj_RGaurdReg_1 <= to_unsigned(16#005#, 9);

  
  tmp_105 <= obj_SamplesRepetitionObj_RGaurdReg WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_RGaurdReg_1;

  obj_SamplesRepetitionObj_RGaurdReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_RGaurdReg_2 <= to_unsigned(16#005#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_RGaurdReg_2 <= tmp_105;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_RGaurdReg_reg_process;


  obj_SamplesRepetitionObj_RGaurdSubReg <= to_unsigned(16#005#, 9);

  
  tmp_106 <= obj_SamplesRepetitionObj_RGaurdSubReg_1 WHEN s = '0' ELSE
      obj_SamplesRepetitionObj_RGaurdReg_2;

  
  tmp_107 <= tmp_106 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_RGaurdSubReg;

  obj_SamplesRepetitionObj_RGaurdSubReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubReg_1 <= to_unsigned(16#005#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubReg_1 <= tmp_107;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_RGaurdSubReg_reg_process;


  obj_SamplesRepetitionObj_RGaurdSubReg1 <= to_unsigned(16#005#, 9);

  
  tmp_108 <= obj_SamplesRepetitionObj_RGaurdSubReg1_1 WHEN tmp_57 = '0' ELSE
      obj_SamplesRepetitionObj_RGaurdSubReg_1;

  
  tmp_109 <= obj_SamplesRepetitionObj_RGaurdSubReg1_1 WHEN s_8 = '0' ELSE
      tmp_108;

  
  tmp_110 <= tmp_109 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_RGaurdSubReg1;

  obj_SamplesRepetitionObj_RGaurdSubReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubReg1_1 <= to_unsigned(16#005#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubReg1_1 <= tmp_110;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_RGaurdSubReg1_reg_process;


  obj_SamplesRepetitionObj_RGaurdSubReg2 <= to_unsigned(16#005#, 9);

  
  tmp_111 <= obj_SamplesRepetitionObj_RGaurdSubReg1_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_RGaurdSubReg2;

  obj_SamplesRepetitionObj_RGaurdSubReg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubReg2_1 <= to_unsigned(16#005#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubReg2_1 <= tmp_111;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_RGaurdSubReg2_reg_process;


  obj_SamplesRepetitionObj_RGaurdSubReg3 <= to_unsigned(16#005#, 9);

  
  tmp_112 <= obj_SamplesRepetitionObj_RGaurdSubReg2_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_RGaurdSubReg3;

  obj_SamplesRepetitionObj_RGaurdSubReg3_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubReg3_1 <= to_unsigned(16#005#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubReg3_1 <= tmp_112;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_RGaurdSubReg3_reg_process;


  obj_SamplesRepetitionObj_RGaurdSubRegOut <= to_unsigned(16#005#, 9);

  
  tmp_113 <= obj_SamplesRepetitionObj_RGaurdSubReg3_1 WHEN obj_SamplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_SamplesRepetitionObj_RGaurdSubRegOut;

  obj_SamplesRepetitionObj_RGaurdSubRegOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubRegOut_1 <= to_unsigned(16#005#, 9);
      ELSIF enb_1_4_0 = '1' THEN
        obj_SamplesRepetitionObj_RGaurdSubRegOut_1 <= tmp_113;
      END IF;
    END IF;
  END PROCESS obj_SamplesRepetitionObj_RGaurdSubRegOut_reg_process;


  varargout_5 <= std_logic_vector(obj_SamplesRepetitionObj_RGaurdSubRegOut_1);

  varargout_2 <= obj_SamplesRepetitionObj_validOut_1;

END rtl;

