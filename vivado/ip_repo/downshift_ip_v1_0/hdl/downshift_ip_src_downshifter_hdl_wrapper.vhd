-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLDownshifter/downshift_ip_src_downshifter_hdl_wrapper.vhd
-- Created: 2024-09-23 00:12:24
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 8e-09
-- Target subsystem base rate: 8e-09
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        8e-09
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- data_out_real                 ce_out        8e-09
-- data_out_imag                 ce_out        8e-09
-- valid_out                     ce_out        8e-09
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: downshift_ip_src_downshifter_hdl_wrapper
-- Source Path: HDLDownshifter/downshifter_hdl_wrapper
-- Hierarchy Level: 0
-- Model version: 1.38
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY downshift_ip_src_downshifter_hdl_wrapper IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        data_in                           :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En13
        valid_in                          :   IN    std_logic;
        phase_offset                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        ce_out                            :   OUT   std_logic;
        data_out_real                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        data_out_imag                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        valid_out                         :   OUT   std_logic
        );
END downshift_ip_src_downshifter_hdl_wrapper;


ARCHITECTURE rtl OF downshift_ip_src_downshifter_hdl_wrapper IS

  -- Component Declarations
  COMPONENT downshift_ip_src_downshifter
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          data_in                         :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En13
          valid_in                        :   IN    std_logic;
          phase_offset                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          data_out_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          data_out_im                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          valid_out                       :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : downshift_ip_src_downshifter
    USE ENTITY work.downshift_ip_src_downshifter(rtl);

  -- Signals
  SIGNAL downshifter_out1_re              : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL downshifter_out1_im              : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL downshifter_out2                 : std_logic;

BEGIN
  u_downshifter : downshift_ip_src_downshifter
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => clk_enable,
              data_in => data_in,  -- sfix14_En13
              valid_in => valid_in,
              phase_offset => phase_offset,  -- sfix16_En15
              data_out_re => downshifter_out1_re,  -- sfix16_En14
              data_out_im => downshifter_out1_im,  -- sfix16_En14
              valid_out => downshifter_out2
              );

  ce_out <= clk_enable;

  data_out_real <= downshifter_out1_re;

  data_out_imag <= downshifter_out1_im;

  valid_out <= downshifter_out2;

END rtl;

