-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/IEEE_8021513_TX_src_CPAddition.vhd
-- Created: 2024-11-21 09:59:26
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_TX_src_CPAddition
-- Source Path: 
-- Hierarchy Level: 4
-- Model version: 4.222
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY IEEE_8021513_TX_src_CPAddition IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        varargin_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargin_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargin_2                        :   IN    std_logic;
        varargin_3                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargin_4                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargin_5                        :   IN    std_logic;
        varargout_1_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargout_1_im                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargout_2                       :   OUT   std_logic
        );
END IEEE_8021513_TX_src_CPAddition;


ARCHITECTURE rtl OF IEEE_8021513_TX_src_CPAddition IS

  -- Component Declarations
  COMPONENT IEEE_8021513_TX_src_SimpleDualPortRAM_generic_block1
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          wr_din_re                       :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_din_im                       :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          dout_re                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          dout_im                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : IEEE_8021513_TX_src_SimpleDualPortRAM_generic_block1
    USE ENTITY work.IEEE_8021513_TX_src_SimpleDualPortRAM_generic_block1(rtl);

  -- Signals
  SIGNAL varargout_2_1                    : std_logic;
  SIGNAL reset                            : std_logic;
  SIGNAL obj_CPAdditionObj_validInReg     : std_logic;
  SIGNAL tmp                              : std_logic;
  SIGNAL obj_CPAdditionObj_validInReg_1   : std_logic;
  SIGNAL obj_CPAdditionObj_inCount        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_inCount_1      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenMinusVecLen : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL varargin_3_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_FFTLenInReg    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenInReg_1  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_1                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenInReg_2  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_2                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_inCount_2      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s                                : std_logic;
  SIGNAL obj_CPAdditionObj_FFTLenMinusVecLen_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_3                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_4                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_5                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_6                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0                               : std_logic;
  SIGNAL tmp_7                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_8                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_9                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_RAM2WriteSelect : std_logic;
  SIGNAL obj_CPAdditionObj_RAM2WriteSelect_1 : std_logic;
  SIGNAL tmp_10                           : std_logic;
  SIGNAL tmp_11                           : std_logic;
  SIGNAL tmp_12                           : std_logic;
  SIGNAL tmp_13                           : std_logic;
  SIGNAL s_1                              : std_logic;
  SIGNAL out_rsvd                         : std_logic;
  SIGNAL out_rsvd_1                       : std_logic;
  SIGNAL tmp_14                           : std_logic;
  SIGNAL obj_CPAdditionObj_writeEnbRAM1   : std_logic;
  SIGNAL tmp_15                           : std_logic;
  SIGNAL obj_CPAdditionObj_writeEnbRAM1_1 : std_logic;
  SIGNAL s_2                              : std_logic;
  SIGNAL out_rsvd_2                       : std_logic;
  SIGNAL out_rsvd_3                       : std_logic;
  SIGNAL tmp_16                           : std_logic;
  SIGNAL obj_CPAdditionObj_writeEnbRAM2   : std_logic;
  SIGNAL tmp_17                           : std_logic;
  SIGNAL obj_CPAdditionObj_writeEnbRAM2_1 : std_logic;
  SIGNAL obj_CPAdditionObj_sym2Done       : std_logic;
  SIGNAL obj_CPAdditionObj_inCountReg     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_18                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_inCountReg_1   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0_1                             : std_logic;
  SIGNAL obj_CPAdditionObj_sym2Done_1     : std_logic;
  SIGNAL obj_CPAdditionObj_sym2Done_2     : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2     : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2_1   : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2_2   : std_logic;
  SIGNAL obj_CPAdditionObj_outCount       : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTSampledAtIn : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTSampledAtIn_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_19                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_20                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_21                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL varargin_4_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_CPLenInReg     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_CPLenInReg_1   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_22                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_CPLenInReg_2   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_CPSampledAtIn  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_CPSampledAtIn_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_23                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_24                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_25                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_26                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCount_1     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCount_2     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_startRead2_3   : std_logic;
  SIGNAL obj_CPAdditionObj_sym1Done       : std_logic;
  SIGNAL a0_2                             : std_logic;
  SIGNAL obj_CPAdditionObj_sym1Done_1     : std_logic;
  SIGNAL obj_CPAdditionObj_sym1Done_2     : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1     : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1_1   : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1_2   : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1_3   : std_logic;
  SIGNAL tmp_27                           : std_logic;
  SIGNAL tmp_28                           : std_logic;
  SIGNAL a0_3                             : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1_4   : std_logic;
  SIGNAL tmp_29                           : std_logic;
  SIGNAL s_3                              : std_logic;
  SIGNAL tmp_30                           : std_logic;
  SIGNAL tmp_31                           : std_logic;
  SIGNAL tmp_32                           : std_logic;
  SIGNAL obj_CPAdditionObj_outCount_3     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_33                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_34                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_35                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_4                              : std_logic;
  SIGNAL tmp_36                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_37                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0_4                             : std_logic;
  SIGNAL tmp_38                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_5                              : std_logic;
  SIGNAL tmp_39                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_40                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_41                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_startRead2_4   : std_logic;
  SIGNAL tmp_42                           : std_logic;
  SIGNAL tmp_43                           : std_logic;
  SIGNAL tmp_44                           : std_logic;
  SIGNAL tmp_45                           : std_logic;
  SIGNAL tmp_46                           : std_logic;
  SIGNAL tmp_47                           : std_logic;
  SIGNAL obj_CPAdditionObj_sym2Done_3     : std_logic;
  SIGNAL tmp_48                           : std_logic;
  SIGNAL tmp_49                           : std_logic;
  SIGNAL tmp_50                           : std_logic;
  SIGNAL tmp_51                           : std_logic;
  SIGNAL tmp_52                           : std_logic;
  SIGNAL tmp_53                           : std_logic;
  SIGNAL obj_CPAdditionObj_sym1Done_3     : std_logic;
  SIGNAL tmp_54                           : std_logic;
  SIGNAL tmp_55                           : std_logic;
  SIGNAL tmp_56                           : std_logic;
  SIGNAL tmp_57                           : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1Reg  : std_logic;
  SIGNAL tmp_58                           : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1Reg_1 : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2Reg  : std_logic;
  SIGNAL tmp_59                           : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2Reg_1 : std_logic;
  SIGNAL obj_CPAdditionObj_startOutput    : std_logic;
  SIGNAL obj_CPAdditionObj_startOutput_1  : std_logic;
  SIGNAL tmp_60                           : std_logic;
  SIGNAL obj_CPAdditionObj_startOutput_2  : std_logic;
  SIGNAL obj_CPAdditionObj_startOutputReg : std_logic;
  SIGNAL tmp_61                           : std_logic;
  SIGNAL obj_CPAdditionObj_startOutputReg_1 : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput     : std_logic;
  SIGNAL obj_CPAdditionObj_outCountReg    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_62                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCountReg_1  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCountReg2   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_63                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCountReg2_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCountReg3   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_64                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCountReg3_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_65                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_66                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_67                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_6                              : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1Reg2 : std_logic;
  SIGNAL tmp_68                           : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1Reg2_1 : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2Reg2 : std_logic;
  SIGNAL tmp_69                           : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2Reg2_1 : std_logic;
  SIGNAL s_7                              : std_logic;
  SIGNAL s_8                              : std_logic;
  SIGNAL a0_5                             : std_logic;
  SIGNAL s_9                              : std_logic;
  SIGNAL s_10                             : std_logic;
  SIGNAL obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_70                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_71                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_72                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_11                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1 : std_logic;
  SIGNAL s_12                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_1 : std_logic;
  SIGNAL s_13                             : std_logic;
  SIGNAL s_14                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_2 : std_logic;
  SIGNAL s_15                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_3 : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_4 : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_5 : std_logic;
  SIGNAL tmp_73                           : std_logic;
  SIGNAL tmp_74                           : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_6 : std_logic;
  SIGNAL tmp_75                           : std_logic;
  SIGNAL tmp_76                           : std_logic;
  SIGNAL tmp_77                           : std_logic;
  SIGNAL tmp_78                           : std_logic;
  SIGNAL tmp_79                           : std_logic;
  SIGNAL tmp_80                           : std_logic;
  SIGNAL tmp_81                           : std_logic;
  SIGNAL s_16                             : std_logic;
  SIGNAL tmp_82                           : std_logic;
  SIGNAL tmp_83                           : std_logic;
  SIGNAL s_17                             : std_logic;
  SIGNAL s_18                             : std_logic;
  SIGNAL s_19                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2 : std_logic;
  SIGNAL s_20                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_1 : std_logic;
  SIGNAL s_21                             : std_logic;
  SIGNAL s_22                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_2 : std_logic;
  SIGNAL s_23                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_3 : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_4 : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_5 : std_logic;
  SIGNAL tmp_84                           : std_logic;
  SIGNAL tmp_85                           : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_6 : std_logic;
  SIGNAL tmp_86                           : std_logic;
  SIGNAL tmp_87                           : std_logic;
  SIGNAL tmp_88                           : std_logic;
  SIGNAL tmp_89                           : std_logic;
  SIGNAL tmp_90                           : std_logic;
  SIGNAL tmp_91                           : std_logic;
  SIGNAL tmp_92                           : std_logic;
  SIGNAL s_24                             : std_logic;
  SIGNAL tmp_93                           : std_logic;
  SIGNAL tmp_94                           : std_logic;
  SIGNAL tmp_95                           : std_logic;
  SIGNAL tmp_96                           : std_logic;
  SIGNAL tmp_97                           : std_logic;  -- ufix1
  SIGNAL p651tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_98                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_99                           : std_logic;  -- ufix1
  SIGNAL p663tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_100                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_numSamp        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_101                          : std_logic;  -- ufix1
  SIGNAL p709tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_102                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_103                          : std_logic;  -- ufix1
  SIGNAL p721tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_104                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_numSamp_1      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_numSamp_2      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_numSamp_3      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_105                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_106                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_107                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_108                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_109                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_110                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_111                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_112                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_113                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_114                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_115                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_116                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_117                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_118                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_119                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_120                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_121                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0_6                             : std_logic;
  SIGNAL obj_CPAdditionObj_numCurrVecSamples : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_numCurrVecSamples_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_122                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_123                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_124                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_125                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_126                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_prevSymbStartIndex : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos         : std_logic;  -- ufix1
  SIGNAL tmp_127                          : std_logic;  -- ufix1
  SIGNAL p648tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p648tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_128                          : std_logic;  -- ufix1
  SIGNAL p660tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p660tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_idxpos2Reg     : std_logic;  -- ufix1
  SIGNAL tmp_129                          : std_logic;  -- ufix1
  SIGNAL p689tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_idxpos2Reg_1   : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos2Reg_2   : std_logic;  -- ufix1
  SIGNAL tmp_130                          : std_logic;  -- ufix1
  SIGNAL tmp_131                          : std_logic;  -- ufix1
  SIGNAL tmp_132                          : std_logic;  -- ufix1
  SIGNAL tmp_133                          : std_logic;  -- ufix1
  SIGNAL tmp_134                          : std_logic;  -- ufix1
  SIGNAL tmp_135                          : std_logic;  -- ufix1
  SIGNAL tmp_136                          : std_logic;  -- ufix1
  SIGNAL tmp_137                          : std_logic;  -- ufix1
  SIGNAL tmp_138                          : std_logic;  -- ufix1
  SIGNAL tmp_139                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos2Reg2    : std_logic;  -- ufix1
  SIGNAL tmp_140                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos2Reg2_1  : std_logic;  -- ufix1
  SIGNAL tmp_141                          : std_logic;  -- ufix1
  SIGNAL p706tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p706tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_142                          : std_logic;  -- ufix1
  SIGNAL p718tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p718tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_idxpos1Reg     : std_logic;  -- ufix1
  SIGNAL tmp_143                          : std_logic;  -- ufix1
  SIGNAL p747tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_idxpos1Reg_1   : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos1Reg_2   : std_logic;  -- ufix1
  SIGNAL tmp_144                          : std_logic;  -- ufix1
  SIGNAL tmp_145                          : std_logic;  -- ufix1
  SIGNAL tmp_146                          : std_logic;  -- ufix1
  SIGNAL tmp_147                          : std_logic;  -- ufix1
  SIGNAL tmp_148                          : std_logic;  -- ufix1
  SIGNAL tmp_149                          : std_logic;  -- ufix1
  SIGNAL tmp_150                          : std_logic;  -- ufix1
  SIGNAL tmp_151                          : std_logic;  -- ufix1
  SIGNAL tmp_152                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos1Reg2    : std_logic;  -- ufix1
  SIGNAL tmp_153                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos1Reg2_1  : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos_1       : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_numPrevVecSamples : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_carryForward   : std_logic;
  SIGNAL obj_CPAdditionObj_carryForward_1 : std_logic;
  SIGNAL obj_CPAdditionObj_carryForward_2 : std_logic;
  SIGNAL obj_CPAdditionObj_carryForward_3 : std_logic;
  SIGNAL obj_CPAdditionObj_carryForward_4 : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_1 : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_2 : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_3 : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_4 : std_logic;
  SIGNAL s_25                             : std_logic;
  SIGNAL tmp_154                          : std_logic;
  SIGNAL obj_CPAdditionObj_idxpos_2       : std_logic;
  SIGNAL tmp_155                          : std_logic;
  SIGNAL obj_CPAdditionObj_idxpos_3       : std_logic;  -- ufix1
  SIGNAL tmp_156                          : std_logic;  -- ufix1
  SIGNAL p616tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p616tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_157                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_158                          : std_logic;  -- ufix1
  SIGNAL p615tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p615tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_159                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_160                          : std_logic;  -- ufix1
  SIGNAL tmp_161                          : std_logic;  -- ufix1
  SIGNAL tmp_162                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_prevSymbStartIndex_1 : std_logic;  -- ufix1
  SIGNAL tmp_163                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_carryForward_5 : std_logic;
  SIGNAL tmp_164                          : std_logic;  -- ufix1
  SIGNAL tmp_165                          : std_logic;  -- ufix1
  SIGNAL tmp_166                          : std_logic;  -- ufix1
  SIGNAL tmp_167                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos_4       : std_logic;  -- ufix1
  SIGNAL p581obj_CPAdditionObj_idxpos_cast : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_168                          : std_logic;  -- ufix1
  SIGNAL tmp_169                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_170                          : std_logic;  -- ufix1
  SIGNAL p565tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_171                          : std_logic;
  SIGNAL tmp_172                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_5 : std_logic;
  SIGNAL tmp_173                          : std_logic;  -- ufix1
  SIGNAL tmp_174                          : std_logic;  -- ufix1
  SIGNAL tmp_175                          : std_logic;  -- ufix1
  SIGNAL tmp_176                          : std_logic;  -- ufix1
  SIGNAL tmp_177                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_numPrevVecSamples_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_178                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_179                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_180                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_181                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_182                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_183                          : std_logic;
  SIGNAL tmp_184                          : std_logic;
  SIGNAL tmp_185                          : std_logic;
  SIGNAL tmp_186                          : std_logic;
  SIGNAL tmp_187                          : std_logic;
  SIGNAL tmp_188                          : std_logic;
  SIGNAL tmp_189                          : std_logic;
  SIGNAL tmp_190                          : std_logic;
  SIGNAL tmp_191                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_1   : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_2   : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_3   : std_logic;
  SIGNAL tmp_192                          : std_logic;
  SIGNAL tmp_193                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_4   : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_5   : std_logic;
  SIGNAL tmp_194                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_6   : std_logic;
  SIGNAL tmp_195                          : std_logic;
  SIGNAL tmp_196                          : std_logic;
  SIGNAL tmp_197                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_7   : std_logic;
  SIGNAL tmp_198                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_8   : std_logic;
  SIGNAL obj_CPAdditionObj_dataOutReg_re  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOutReg_im  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_199                          : std_logic;  -- ufix1
  SIGNAL p571tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p571tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_200                          : std_logic;  -- ufix1
  SIGNAL tmp_201                          : std_logic;  -- ufix1
  SIGNAL p573tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p573tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_202                          : std_logic;  -- ufix1
  SIGNAL tmp_203                          : std_logic;  -- ufix1
  SIGNAL tmp_204                          : std_logic;  -- ufix1
  SIGNAL tmp_205                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_dataVec1Samples : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_dataVec1Samples_1 : std_logic;  -- ufix1
  SIGNAL tmp_206                          : std_logic;  -- ufix1
  SIGNAL tmp_207                          : std_logic;  -- ufix1
  SIGNAL s_26                             : std_logic;
  SIGNAL p520_cast                        : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_27                             : std_logic;
  SIGNAL s_28                             : std_logic;
  SIGNAL obj_CPAdditionObj_currVecData_re : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_currVecData_im : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargin_1_re_signed             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargin_1_im_signed             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg_re   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg_im   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg1_re  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg1_im  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_1                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_1                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg1_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg1_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_writeAddrRAM2  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_writeAddrRAM2_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_writeAddrRAM2_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_208                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_209                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_210                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_211                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_212                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_FFTLengthAtOutMinusVecLen : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_213                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_214                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLengthAtOutMinusVecLen_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_readAddrRAM2   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2Reg : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2Reg_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2Reg_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2Reg_3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_215                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_216                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_217                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_218                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_219                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_220                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_221                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_222                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_223                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_224                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_225                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_226                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_227                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL a0_7                             : std_logic;
  SIGNAL tmp_228                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_229                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_230                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_231                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargout_1_re_1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_im_1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_re_signed            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargout_1_im_signed            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_writeAddrRAM1  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_writeAddrRAM1_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_writeAddrRAM1_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_232                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_233                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_234                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_235                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1Reg : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1Reg_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1Reg_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1Reg_3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_236                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_237                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_238                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_239                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_240                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_241                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_242                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_243                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_244                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_245                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_246                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_247                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL a0_8                             : std_logic;
  SIGNAL tmp_248                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_249                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_250                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargout_1_re_2                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_im_2                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_re_signed_1          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargout_1_im_signed_1          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_2                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_2                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_3                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_3                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_currVecData_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_currVecData_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_4                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_4                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec_re     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec_im     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_5                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_5                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec_re_1   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec_im_1   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVecReg_re  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVecReg_im  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_6                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_6                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVecReg_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVecReg_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_7                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_7                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_8                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_8                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_9                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_9                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_10                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_10                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_11                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_11                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec2_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec2_im    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec2_re_1  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec2_im_1  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_12                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_12                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_13                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_13                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL s_29                             : std_logic;
  SIGNAL p568_cast                        : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_251                          : std_logic;
  SIGNAL p570tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p570tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p570tmp_cast                     : std_logic;  -- ufix1
  SIGNAL p570tmp_cast_1                   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_prevSymb_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevSymb_im    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevSymb_re_1  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevSymb_im_1  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_14                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_14                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_15                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_15                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_16                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_16                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_17                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_17                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_18                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_18                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevVecData_re : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevVecData_im : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevVecData_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevVecData_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_19                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_19                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_20                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_20                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_21                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_21                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_22                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_22                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_23                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_23                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_24                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_24                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_25                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_25                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_26                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_26                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_27                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_27                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_28                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_28                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_29                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_29                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_30                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_30                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_31                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_31                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec1_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec1_im    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec1_re_1  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec1_im_1  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_32                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_32                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_33                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_33                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_34                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_34                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_35                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_35                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOutReg_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOutReg_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_36                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_36                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOutReg_re_2 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOutReg_im_2 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOut_re     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOut_im     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_37                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_37                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOut_re_1   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOut_im_1   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_validOutReg    : std_logic;
  SIGNAL obj_CPAdditionObj_validOutReg_1  : std_logic;
  SIGNAL tmp_252                          : std_logic;
  SIGNAL obj_CPAdditionObj_validOutReg_2  : std_logic;
  SIGNAL tmp_253                          : std_logic;
  SIGNAL obj_CPAdditionObj_validOutReg_3  : std_logic;
  SIGNAL obj_CPAdditionObj_validOut       : std_logic;
  SIGNAL tmp_254                          : std_logic;
  SIGNAL obj_CPAdditionObj_validOut_1     : std_logic;

BEGIN
  u_simpleDualPortRam : IEEE_8021513_TX_src_SimpleDualPortRAM_generic_block1
    GENERIC MAP( AddrWidth => 10,
                 DataWidth => 16
                 )
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              wr_din_re => std_logic_vector(obj_CPAdditionObj_dataInReg1_re_1),
              wr_din_im => std_logic_vector(obj_CPAdditionObj_dataInReg1_im_1),
              wr_addr => std_logic_vector(obj_CPAdditionObj_writeAddrRAM2_2),
              wr_en => obj_CPAdditionObj_writeEnbRAM2_1,
              rd_addr => std_logic_vector(obj_CPAdditionObj_readAddrRAM2_2),
              dout_re => varargout_1_re_1,
              dout_im => varargout_1_im_1
              );

  u_simpleDualPortRam_1 : IEEE_8021513_TX_src_SimpleDualPortRAM_generic_block1
    GENERIC MAP( AddrWidth => 10,
                 DataWidth => 16
                 )
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              wr_din_re => std_logic_vector(obj_CPAdditionObj_dataInReg1_re_1),
              wr_din_im => std_logic_vector(obj_CPAdditionObj_dataInReg1_im_1),
              wr_addr => std_logic_vector(obj_CPAdditionObj_writeAddrRAM1_2),
              wr_en => obj_CPAdditionObj_writeEnbRAM1_1,
              rd_addr => std_logic_vector(obj_CPAdditionObj_readAddrRAM1_2),
              dout_re => varargout_1_re_2,
              dout_im => varargout_1_im_2
              );

  varargout_2_1 <= varargin_2;

  reset <= varargin_5;

  obj_CPAdditionObj_validInReg <= '0';

  
  tmp <= varargout_2_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_validInReg;

  obj_CPAdditionObj_validInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_validInReg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_validInReg_1 <= tmp;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_validInReg_reg_process;


  obj_CPAdditionObj_inCount <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_inCount_1 <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_FFTLenMinusVecLen <= to_unsigned(16#000#, 9);

  varargin_3_unsigned <= unsigned(varargin_3);

  obj_CPAdditionObj_FFTLenInReg <= varargin_3_unsigned(8 DOWNTO 0);

  obj_CPAdditionObj_FFTLenInReg_1 <= to_unsigned(16#040#, 9);

  
  tmp_1 <= obj_CPAdditionObj_FFTLenInReg WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTLenInReg_1;

  obj_CPAdditionObj_FFTLenInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenInReg_2 <= to_unsigned(16#040#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenInReg_2 <= tmp_1;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenInReg_reg_process;


  tmp_2 <= obj_CPAdditionObj_FFTLenInReg_2 - to_unsigned(16#001#, 9);

  
  s <= '1' WHEN obj_CPAdditionObj_inCount_2 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  tmp_3 <= obj_CPAdditionObj_FFTLenMinusVecLen_1 WHEN s = '0' ELSE
      tmp_2;

  
  tmp_5 <= tmp_4 WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTLenMinusVecLen;

  obj_CPAdditionObj_FFTLenMinusVecLen_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenMinusVecLen_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenMinusVecLen_1 <= tmp_5;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenMinusVecLen_reg_process;


  
  tmp_4 <= obj_CPAdditionObj_FFTLenMinusVecLen_1 WHEN obj_CPAdditionObj_validInReg_1 = '0' ELSE
      tmp_3;

  tmp_6 <= obj_CPAdditionObj_inCount_2 + to_unsigned(16#001#, 9);

  
  tmp_7 <= tmp_6 WHEN a0 = '0' ELSE
      obj_CPAdditionObj_inCount;

  
  tmp_8 <= obj_CPAdditionObj_inCount_2 WHEN obj_CPAdditionObj_validInReg_1 = '0' ELSE
      tmp_7;

  
  tmp_9 <= tmp_8 WHEN reset = '0' ELSE
      obj_CPAdditionObj_inCount_1;

  obj_CPAdditionObj_inCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_inCount_2 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_inCount_2 <= tmp_9;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_inCount_reg_process;


  
  a0 <= '1' WHEN obj_CPAdditionObj_inCount_2 = tmp_4 ELSE
      '0';

  obj_CPAdditionObj_RAM2WriteSelect <= '0';

  tmp_10 <=  NOT obj_CPAdditionObj_RAM2WriteSelect_1;

  
  tmp_11 <= obj_CPAdditionObj_RAM2WriteSelect_1 WHEN a0 = '0' ELSE
      tmp_10;

  
  tmp_12 <= obj_CPAdditionObj_RAM2WriteSelect_1 WHEN obj_CPAdditionObj_validInReg_1 = '0' ELSE
      tmp_11;

  
  tmp_13 <= tmp_12 WHEN reset = '0' ELSE
      obj_CPAdditionObj_RAM2WriteSelect;

  obj_CPAdditionObj_RAM2WriteSelect_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_RAM2WriteSelect_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_RAM2WriteSelect_1 <= tmp_13;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_RAM2WriteSelect_reg_process;


  s_1 <= obj_CPAdditionObj_validInReg_1 AND ( NOT obj_CPAdditionObj_RAM2WriteSelect_1);

  out_rsvd <= '0';

  out_rsvd_1 <= '1';

  
  tmp_14 <= out_rsvd WHEN s_1 = '0' ELSE
      out_rsvd_1;

  obj_CPAdditionObj_writeEnbRAM1 <= '0';

  
  tmp_15 <= tmp_14 WHEN reset = '0' ELSE
      obj_CPAdditionObj_writeEnbRAM1;

  obj_CPAdditionObj_writeEnbRAM1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_writeEnbRAM1_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_writeEnbRAM1_1 <= tmp_15;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_writeEnbRAM1_reg_process;


  s_2 <= obj_CPAdditionObj_validInReg_1 AND obj_CPAdditionObj_RAM2WriteSelect_1;

  out_rsvd_2 <= '0';

  out_rsvd_3 <= '1';

  
  tmp_16 <= out_rsvd_2 WHEN s_2 = '0' ELSE
      out_rsvd_3;

  obj_CPAdditionObj_writeEnbRAM2 <= '0';

  
  tmp_17 <= tmp_16 WHEN reset = '0' ELSE
      obj_CPAdditionObj_writeEnbRAM2;

  obj_CPAdditionObj_writeEnbRAM2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_writeEnbRAM2_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_writeEnbRAM2_1 <= tmp_17;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_writeEnbRAM2_reg_process;


  obj_CPAdditionObj_sym2Done <= '0';

  obj_CPAdditionObj_inCountReg <= to_unsigned(16#000#, 9);

  
  tmp_18 <= obj_CPAdditionObj_inCount_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_inCountReg;

  obj_CPAdditionObj_inCountReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_inCountReg_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_inCountReg_1 <= tmp_18;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_inCountReg_reg_process;


  
  a0_1 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 = obj_CPAdditionObj_FFTLenMinusVecLen_1 ELSE
      '0';

  obj_CPAdditionObj_sym2Done_1 <= '1';

  obj_CPAdditionObj_sym2Done_2 <= '0';

  obj_CPAdditionObj_startRead2 <= '1';

  obj_CPAdditionObj_startRead2_1 <= '0';

  obj_CPAdditionObj_startRead2_2 <= '0';

  obj_CPAdditionObj_outCount <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_FFTSampledAtIn <= to_unsigned(16#040#, 9);

  
  tmp_19 <= obj_CPAdditionObj_FFTSampledAtIn_1 WHEN s = '0' ELSE
      obj_CPAdditionObj_FFTLenInReg_2;

  
  tmp_20 <= obj_CPAdditionObj_FFTSampledAtIn_1 WHEN obj_CPAdditionObj_validInReg_1 = '0' ELSE
      tmp_19;

  
  tmp_21 <= tmp_20 WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTSampledAtIn;

  obj_CPAdditionObj_FFTSampledAtIn_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTSampledAtIn_1 <= to_unsigned(16#040#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTSampledAtIn_1 <= tmp_21;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTSampledAtIn_reg_process;


  varargin_4_unsigned <= unsigned(varargin_4);

  obj_CPAdditionObj_CPLenInReg <= varargin_4_unsigned(8 DOWNTO 0);

  obj_CPAdditionObj_CPLenInReg_1 <= to_unsigned(16#010#, 9);

  
  tmp_22 <= obj_CPAdditionObj_CPLenInReg WHEN reset = '0' ELSE
      obj_CPAdditionObj_CPLenInReg_1;

  obj_CPAdditionObj_CPLenInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_CPLenInReg_2 <= to_unsigned(16#010#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_CPLenInReg_2 <= tmp_22;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_CPLenInReg_reg_process;


  obj_CPAdditionObj_CPSampledAtIn <= to_unsigned(16#010#, 9);

  
  tmp_23 <= obj_CPAdditionObj_CPSampledAtIn_1 WHEN s = '0' ELSE
      obj_CPAdditionObj_CPLenInReg_2;

  
  tmp_24 <= obj_CPAdditionObj_CPSampledAtIn_1 WHEN obj_CPAdditionObj_validInReg_1 = '0' ELSE
      tmp_23;

  
  tmp_25 <= tmp_24 WHEN reset = '0' ELSE
      obj_CPAdditionObj_CPSampledAtIn;

  obj_CPAdditionObj_CPSampledAtIn_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_CPSampledAtIn_1 <= to_unsigned(16#010#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_CPSampledAtIn_1 <= tmp_25;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_CPSampledAtIn_reg_process;


  tmp_26 <= obj_CPAdditionObj_FFTSampledAtIn_1 + obj_CPAdditionObj_CPSampledAtIn_1;

  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_1 <= tmp_26 - to_unsigned(16#001#, 9);

  obj_CPAdditionObj_outCount_1 <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_outCount_2 <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_startRead2_3 <= '0';

  obj_CPAdditionObj_sym1Done <= '0';

  
  a0_2 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 = obj_CPAdditionObj_FFTLenMinusVecLen_1 ELSE
      '0';

  obj_CPAdditionObj_sym1Done_1 <= '1';

  obj_CPAdditionObj_sym1Done_2 <= '0';

  obj_CPAdditionObj_startRead1 <= '0';

  obj_CPAdditionObj_startRead1_1 <= '1';

  obj_CPAdditionObj_startRead1_2 <= '0';

  obj_CPAdditionObj_startRead1_3 <= '0';

  
  tmp_28 <= obj_CPAdditionObj_startRead1_1 WHEN tmp_27 = '0' ELSE
      obj_CPAdditionObj_startRead1_2;

  
  tmp_29 <= obj_CPAdditionObj_startRead1_4 WHEN a0_3 = '0' ELSE
      obj_CPAdditionObj_startRead1;

  
  tmp_30 <= obj_CPAdditionObj_startRead1_4 WHEN s_3 = '0' ELSE
      tmp_29;

  
  tmp_32 <= tmp_31 WHEN a0_2 = '0' ELSE
      obj_CPAdditionObj_sym1Done_1;

  tmp_33 <= obj_CPAdditionObj_outCount_3 + to_unsigned(16#001#, 9);

  
  tmp_35 <= tmp_34 WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen;

  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_2 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_2 <= tmp_35;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_reg_process;


  
  s_4 <= '1' WHEN obj_CPAdditionObj_outCount_3 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  tmp_34 <= obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_2 WHEN s_4 = '0' ELSE
      obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen_1;

  
  a0_3 <= '1' WHEN obj_CPAdditionObj_outCount_3 >= tmp_34 ELSE
      '0';

  
  tmp_36 <= tmp_33 WHEN a0_3 = '0' ELSE
      obj_CPAdditionObj_outCount_1;

  tmp_37 <= obj_CPAdditionObj_outCount_3 + to_unsigned(16#001#, 9);

  
  tmp_38 <= tmp_37 WHEN a0_4 = '0' ELSE
      obj_CPAdditionObj_outCount;

  
  tmp_39 <= obj_CPAdditionObj_outCount_3 WHEN s_5 = '0' ELSE
      tmp_38;

  
  tmp_40 <= tmp_39 WHEN s_3 = '0' ELSE
      tmp_36;

  
  tmp_41 <= tmp_40 WHEN reset = '0' ELSE
      obj_CPAdditionObj_outCount_2;

  obj_CPAdditionObj_outCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_outCount_3 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_outCount_3 <= tmp_41;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_outCount_reg_process;


  
  a0_4 <= '1' WHEN obj_CPAdditionObj_outCount_3 >= tmp_34 ELSE
      '0';

  
  tmp_42 <= obj_CPAdditionObj_startRead2_4 WHEN a0_4 = '0' ELSE
      obj_CPAdditionObj_startRead2_3;

  s_5 <= obj_CPAdditionObj_startRead2_4 AND ( NOT obj_CPAdditionObj_startRead1_4);

  
  tmp_43 <= obj_CPAdditionObj_startRead2_4 WHEN s_5 = '0' ELSE
      tmp_42;

  
  tmp_45 <= obj_CPAdditionObj_startRead2 WHEN tmp_44 = '0' ELSE
      obj_CPAdditionObj_startRead2_1;

  
  tmp_47 <= tmp_46 WHEN a0_1 = '0' ELSE
      obj_CPAdditionObj_sym2Done_1;

  
  tmp_48 <= obj_CPAdditionObj_sym2Done WHEN tmp_44 = '0' ELSE
      obj_CPAdditionObj_sym2Done_3;

  
  tmp_46 <= obj_CPAdditionObj_sym2Done_3 WHEN obj_CPAdditionObj_sym2Done_3 = '0' ELSE
      tmp_48;

  
  tmp_49 <= tmp_46 WHEN obj_CPAdditionObj_writeEnbRAM2_1 = '0' ELSE
      tmp_47;

  
  tmp_50 <= tmp_49 WHEN obj_CPAdditionObj_writeEnbRAM1_1 = '0' ELSE
      tmp_46;

  
  tmp_51 <= tmp_50 WHEN reset = '0' ELSE
      obj_CPAdditionObj_sym2Done_2;

  obj_CPAdditionObj_sym2Done_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_sym2Done_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_sym2Done_3 <= tmp_51;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_sym2Done_reg_process;


  
  tmp_52 <= tmp_27 WHEN obj_CPAdditionObj_sym2Done_3 = '0' ELSE
      tmp_45;

  
  tmp_53 <= tmp_52 WHEN reset = '0' ELSE
      obj_CPAdditionObj_startRead2_2;

  obj_CPAdditionObj_startRead2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead2_4 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead2_4 <= tmp_53;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead2_reg_process;


  s_3 <= obj_CPAdditionObj_startRead1_4 AND ( NOT obj_CPAdditionObj_startRead2_4);

  
  tmp_27 <= tmp_43 WHEN s_3 = '0' ELSE
      obj_CPAdditionObj_startRead2_4;

  
  tmp_54 <= obj_CPAdditionObj_sym1Done WHEN tmp_27 = '0' ELSE
      obj_CPAdditionObj_sym1Done_3;

  
  tmp_31 <= obj_CPAdditionObj_sym1Done_3 WHEN obj_CPAdditionObj_sym1Done_3 = '0' ELSE
      tmp_54;

  
  tmp_55 <= tmp_31 WHEN obj_CPAdditionObj_writeEnbRAM1_1 = '0' ELSE
      tmp_32;

  
  tmp_56 <= tmp_55 WHEN reset = '0' ELSE
      obj_CPAdditionObj_sym1Done_2;

  obj_CPAdditionObj_sym1Done_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_sym1Done_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_sym1Done_3 <= tmp_56;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_sym1Done_reg_process;


  
  tmp_44 <= tmp_30 WHEN obj_CPAdditionObj_sym1Done_3 = '0' ELSE
      tmp_28;

  
  tmp_57 <= tmp_44 WHEN reset = '0' ELSE
      obj_CPAdditionObj_startRead1_3;

  obj_CPAdditionObj_startRead1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead1_4 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead1_4 <= tmp_57;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead1_reg_process;


  obj_CPAdditionObj_startRead1Reg <= '0';

  
  tmp_58 <= obj_CPAdditionObj_startRead1_4 WHEN reset = '0' ELSE
      obj_CPAdditionObj_startRead1Reg;

  obj_CPAdditionObj_startRead1Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead1Reg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead1Reg_1 <= tmp_58;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead1Reg_reg_process;


  obj_CPAdditionObj_startRead2Reg <= '0';

  
  tmp_59 <= obj_CPAdditionObj_startRead2_4 WHEN reset = '0' ELSE
      obj_CPAdditionObj_startRead2Reg;

  obj_CPAdditionObj_startRead2Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead2Reg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead2Reg_1 <= tmp_59;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead2Reg_reg_process;


  obj_CPAdditionObj_startOutput <= obj_CPAdditionObj_startRead1Reg_1 XOR obj_CPAdditionObj_startRead2Reg_1;

  obj_CPAdditionObj_startOutput_1 <= '0';

  
  tmp_60 <= obj_CPAdditionObj_startOutput WHEN reset = '0' ELSE
      obj_CPAdditionObj_startOutput_1;

  obj_CPAdditionObj_startOutput_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startOutput_2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startOutput_2 <= tmp_60;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startOutput_reg_process;


  obj_CPAdditionObj_startOutputReg <= '0';

  
  tmp_61 <= obj_CPAdditionObj_startOutput_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_startOutputReg;

  obj_CPAdditionObj_startOutputReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startOutputReg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startOutputReg_1 <= tmp_61;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startOutputReg_reg_process;


  obj_CPAdditionObj_sendOutput <= '0';

  obj_CPAdditionObj_outCountReg <= to_unsigned(16#000#, 9);

  
  tmp_62 <= obj_CPAdditionObj_outCount_3 WHEN reset = '0' ELSE
      obj_CPAdditionObj_outCountReg;

  obj_CPAdditionObj_outCountReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_outCountReg_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_outCountReg_1 <= tmp_62;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_outCountReg_reg_process;


  obj_CPAdditionObj_outCountReg2 <= to_unsigned(16#000#, 9);

  
  tmp_63 <= obj_CPAdditionObj_outCountReg_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_outCountReg2;

  obj_CPAdditionObj_outCountReg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_outCountReg2_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_outCountReg2_1 <= tmp_63;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_outCountReg2_reg_process;


  obj_CPAdditionObj_outCountReg3 <= to_unsigned(16#000#, 9);

  
  tmp_64 <= obj_CPAdditionObj_outCountReg2_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_outCountReg3;

  obj_CPAdditionObj_outCountReg3_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_outCountReg3_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_outCountReg3_1 <= tmp_64;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_outCountReg3_reg_process;


  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg <= to_unsigned(16#000#, 9);

  
  tmp_65 <= tmp_34 WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg;

  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg_1 <= tmp_65;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg_reg_process;


  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2 <= to_unsigned(16#000#, 9);

  
  tmp_66 <= obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2;

  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2_1 <= tmp_66;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2_reg_process;


  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3 <= to_unsigned(16#000#, 9);

  
  tmp_67 <= obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg2_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3;

  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3_1 <= tmp_67;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3_reg_process;


  
  s_6 <= '1' WHEN obj_CPAdditionObj_outCountReg3_1 >= obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLenReg3_1 ELSE
      '0';

  obj_CPAdditionObj_hasPrevSymbData <= '0';

  obj_CPAdditionObj_startRead1Reg2 <= '0';

  
  tmp_68 <= obj_CPAdditionObj_startRead1Reg_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_startRead1Reg2;

  obj_CPAdditionObj_startRead1Reg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead1Reg2_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead1Reg2_1 <= tmp_68;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead1Reg2_reg_process;


  obj_CPAdditionObj_startRead2Reg2 <= '0';

  
  tmp_69 <= obj_CPAdditionObj_startRead2Reg_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_startRead2Reg2;

  obj_CPAdditionObj_startRead2Reg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead2Reg2_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead2Reg2_1 <= tmp_69;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead2Reg2_reg_process;


  s_7 <= obj_CPAdditionObj_startRead1Reg2_1 AND ( NOT obj_CPAdditionObj_startRead2Reg2_1);

  s_8 <= ( NOT obj_CPAdditionObj_startRead1Reg2_1) AND obj_CPAdditionObj_startRead2Reg2_1;

  
  a0_5 <= '1' WHEN obj_CPAdditionObj_outCountReg2_1 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  s_9 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn_1 <= to_unsigned(16#001#, 9) ELSE
      '0';

  
  s_10 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn_1 >= obj_CPAdditionObj_FFTLenMinusVecLen_1 ELSE
      '0';

  obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen <= tmp_2 - obj_CPAdditionObj_CPLenInReg_2;

  obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 <= to_unsigned(16#000#, 9);

  
  tmp_70 <= obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2 WHEN s = '0' ELSE
      obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen;

  
  tmp_71 <= obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2 WHEN obj_CPAdditionObj_validInReg_1 = '0' ELSE
      tmp_70;

  
  tmp_72 <= tmp_71 WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1;

  obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2 <= tmp_72;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_reg_process;


  
  s_11 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 > obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2 ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1 <= '1';

  
  s_12 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 = to_unsigned(16#000#, 9) ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1_1 <= '1';

  
  s_13 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn_1 /= to_unsigned(16#000#, 9) ELSE
      '0';

  
  s_14 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 = obj_CPAdditionObj_FFTLenMinusVecLen_1 ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1_2 <= '1';

  
  s_15 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 = obj_CPAdditionObj_FFTLenMinusVecLen_1 ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1_3 <= '1';

  obj_CPAdditionObj_storeInitReadAddrRAM1_4 <= '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1_5 <= '0';

  
  tmp_74 <= tmp_73 WHEN a0_2 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_4;

  
  tmp_75 <= obj_CPAdditionObj_storeInitReadAddrRAM1_6 WHEN s_15 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_3;

  
  tmp_76 <= obj_CPAdditionObj_storeInitReadAddrRAM1_6 WHEN s_14 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_2;

  
  tmp_77 <= tmp_76 WHEN s_13 = '0' ELSE
      tmp_75;

  
  tmp_78 <= obj_CPAdditionObj_storeInitReadAddrRAM1_6 WHEN s_12 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_1;

  
  tmp_79 <= obj_CPAdditionObj_storeInitReadAddrRAM1_6 WHEN s_11 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1;

  
  tmp_80 <= tmp_79 WHEN s_10 = '0' ELSE
      tmp_78;

  
  tmp_81 <= tmp_80 WHEN s_9 = '0' ELSE
      tmp_77;

  
  tmp_73 <= obj_CPAdditionObj_storeInitReadAddrRAM1_6 WHEN s_16 = '0' ELSE
      tmp_81;

  
  tmp_82 <= tmp_73 WHEN obj_CPAdditionObj_writeEnbRAM1_1 = '0' ELSE
      tmp_74;

  
  tmp_83 <= tmp_82 WHEN reset = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_5;

  obj_CPAdditionObj_storeInitReadAddrRAM1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_storeInitReadAddrRAM1_6 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_storeInitReadAddrRAM1_6 <= tmp_83;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_storeInitReadAddrRAM1_reg_process;


  s_16 <= obj_CPAdditionObj_writeEnbRAM1_1 AND ( NOT obj_CPAdditionObj_storeInitReadAddrRAM1_6);

  
  s_17 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn_1 <= to_unsigned(16#001#, 9) ELSE
      '0';

  
  s_18 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn_1 >= obj_CPAdditionObj_FFTLenMinusVecLen_1 ELSE
      '0';

  
  s_19 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 > obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2 ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2 <= '1';

  
  s_20 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 = to_unsigned(16#000#, 9) ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2_1 <= '1';

  
  s_21 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn_1 /= to_unsigned(16#000#, 9) ELSE
      '0';

  
  s_22 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 = obj_CPAdditionObj_FFTLenMinusVecLen_1 ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2_2 <= '1';

  
  s_23 <= '1' WHEN obj_CPAdditionObj_inCountReg_1 = obj_CPAdditionObj_FFTLenMinusVecLen_1 ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2_3 <= '1';

  obj_CPAdditionObj_storeInitReadAddrRAM2_4 <= '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2_5 <= '0';

  
  tmp_85 <= tmp_84 WHEN a0_1 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_4;

  
  tmp_86 <= obj_CPAdditionObj_storeInitReadAddrRAM2_6 WHEN s_23 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_3;

  
  tmp_87 <= obj_CPAdditionObj_storeInitReadAddrRAM2_6 WHEN s_22 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_2;

  
  tmp_88 <= tmp_87 WHEN s_21 = '0' ELSE
      tmp_86;

  
  tmp_89 <= obj_CPAdditionObj_storeInitReadAddrRAM2_6 WHEN s_20 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_1;

  
  tmp_90 <= obj_CPAdditionObj_storeInitReadAddrRAM2_6 WHEN s_19 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2;

  
  tmp_91 <= tmp_90 WHEN s_18 = '0' ELSE
      tmp_89;

  
  tmp_92 <= tmp_91 WHEN s_17 = '0' ELSE
      tmp_88;

  
  tmp_93 <= obj_CPAdditionObj_storeInitReadAddrRAM2_6 WHEN s_24 = '0' ELSE
      tmp_92;

  
  tmp_84 <= tmp_93 WHEN s_16 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_6;

  
  tmp_94 <= tmp_84 WHEN obj_CPAdditionObj_writeEnbRAM2_1 = '0' ELSE
      tmp_85;

  
  tmp_95 <= tmp_94 WHEN obj_CPAdditionObj_writeEnbRAM1_1 = '0' ELSE
      tmp_84;

  
  tmp_96 <= tmp_95 WHEN reset = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_5;

  obj_CPAdditionObj_storeInitReadAddrRAM2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_storeInitReadAddrRAM2_6 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_storeInitReadAddrRAM2_6 <= tmp_96;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_storeInitReadAddrRAM2_reg_process;


  s_24 <= obj_CPAdditionObj_writeEnbRAM2_1 AND ( NOT obj_CPAdditionObj_storeInitReadAddrRAM2_6);

  p651tmp_sub_temp <= resize(obj_CPAdditionObj_inCountReg_1, 10) - resize(obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2, 10);
  tmp_97 <= p651tmp_sub_temp(0);

  tmp_98 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_97;

  p663tmp_sub_temp <= resize(obj_CPAdditionObj_CPSampledAtIn_1, 10) - resize(obj_CPAdditionObj_FFTLenMinusVecLen_1, 10);
  tmp_99 <= p663tmp_sub_temp(0);

  tmp_100 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_99;

  obj_CPAdditionObj_numSamp <= to_unsigned(16#000#, 9);

  p709tmp_sub_temp <= resize(obj_CPAdditionObj_inCountReg_1, 10) - resize(obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_2, 10);
  tmp_101 <= p709tmp_sub_temp(0);

  tmp_102 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_101;

  p721tmp_sub_temp <= resize(obj_CPAdditionObj_CPSampledAtIn_1, 10) - resize(obj_CPAdditionObj_FFTLenMinusVecLen_1, 10);
  tmp_103 <= p721tmp_sub_temp(0);

  tmp_104 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_103;

  obj_CPAdditionObj_numSamp_1 <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_numSamp_2 <= to_unsigned(16#000#, 9);

  
  tmp_105 <= obj_CPAdditionObj_numSamp_3 WHEN s_15 = '0' ELSE
      obj_CPAdditionObj_CPSampledAtIn_1;

  
  tmp_106 <= obj_CPAdditionObj_numSamp_3 WHEN s_14 = '0' ELSE
      obj_CPAdditionObj_numSamp_1;

  
  tmp_107 <= tmp_106 WHEN s_13 = '0' ELSE
      tmp_105;

  
  tmp_108 <= obj_CPAdditionObj_numSamp_3 WHEN s_12 = '0' ELSE
      tmp_104;

  
  tmp_109 <= obj_CPAdditionObj_numSamp_3 WHEN s_11 = '0' ELSE
      tmp_102;

  
  tmp_110 <= tmp_109 WHEN s_10 = '0' ELSE
      tmp_108;

  
  tmp_111 <= tmp_110 WHEN s_9 = '0' ELSE
      tmp_107;

  
  tmp_112 <= obj_CPAdditionObj_numSamp_3 WHEN s_23 = '0' ELSE
      obj_CPAdditionObj_CPSampledAtIn_1;

  
  tmp_113 <= obj_CPAdditionObj_numSamp_3 WHEN s_22 = '0' ELSE
      obj_CPAdditionObj_numSamp;

  
  tmp_114 <= tmp_113 WHEN s_21 = '0' ELSE
      tmp_112;

  
  tmp_115 <= obj_CPAdditionObj_numSamp_3 WHEN s_20 = '0' ELSE
      tmp_100;

  
  tmp_116 <= obj_CPAdditionObj_numSamp_3 WHEN s_19 = '0' ELSE
      tmp_98;

  
  tmp_117 <= tmp_116 WHEN s_18 = '0' ELSE
      tmp_115;

  
  tmp_118 <= tmp_117 WHEN s_17 = '0' ELSE
      tmp_114;

  
  tmp_119 <= obj_CPAdditionObj_numSamp_3 WHEN s_24 = '0' ELSE
      tmp_118;

  
  tmp_120 <= tmp_119 WHEN s_16 = '0' ELSE
      tmp_111;

  
  tmp_121 <= tmp_120 WHEN reset = '0' ELSE
      obj_CPAdditionObj_numSamp_2;

  obj_CPAdditionObj_numSamp_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_numSamp_3 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_numSamp_3 <= tmp_121;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_numSamp_reg_process;


  
  a0_6 <= '1' WHEN obj_CPAdditionObj_outCountReg2_1 = to_unsigned(16#000#, 9) ELSE
      '0';

  obj_CPAdditionObj_numCurrVecSamples <= to_unsigned(16#000#, 9);

  
  tmp_122 <= obj_CPAdditionObj_numCurrVecSamples_1 WHEN a0_6 = '0' ELSE
      obj_CPAdditionObj_numSamp_3;

  
  tmp_123 <= obj_CPAdditionObj_numCurrVecSamples_1 WHEN a0_5 = '0' ELSE
      obj_CPAdditionObj_numSamp_3;

  
  tmp_124 <= obj_CPAdditionObj_numCurrVecSamples_1 WHEN s_8 = '0' ELSE
      tmp_123;

  
  tmp_125 <= tmp_124 WHEN s_7 = '0' ELSE
      tmp_122;

  
  tmp_126 <= tmp_125 WHEN reset = '0' ELSE
      obj_CPAdditionObj_numCurrVecSamples;

  obj_CPAdditionObj_numCurrVecSamples_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_numCurrVecSamples_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_numCurrVecSamples_1 <= tmp_126;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_numCurrVecSamples_reg_process;


  obj_CPAdditionObj_prevSymbStartIndex <= '0';

  obj_CPAdditionObj_idxpos <= '0';

  p648tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_97;
  p648tmp_sub_temp <= to_unsigned(16#001#, 10) - p648tmp_sub_cast;
  tmp_127 <= p648tmp_sub_temp(0);

  p660tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_99;
  p660tmp_sub_temp <= to_unsigned(16#001#, 10) - p660tmp_sub_cast;
  tmp_128 <= p660tmp_sub_temp(0);

  obj_CPAdditionObj_idxpos2Reg <= '0';

  p689tmp_sub_temp <= to_unsigned(16#001#, 10) - resize(obj_CPAdditionObj_CPSampledAtIn_1, 10);
  tmp_129 <= p689tmp_sub_temp(0);

  obj_CPAdditionObj_idxpos2Reg_1 <= '0';

  
  tmp_130 <= obj_CPAdditionObj_idxpos2Reg_2 WHEN s_23 = '0' ELSE
      tmp_129;

  
  tmp_131 <= obj_CPAdditionObj_idxpos2Reg_2 WHEN s_22 = '0' ELSE
      obj_CPAdditionObj_idxpos2Reg;

  
  tmp_132 <= tmp_131 WHEN s_21 = '0' ELSE
      tmp_130;

  
  tmp_133 <= obj_CPAdditionObj_idxpos2Reg_2 WHEN s_20 = '0' ELSE
      tmp_128;

  
  tmp_134 <= obj_CPAdditionObj_idxpos2Reg_2 WHEN s_19 = '0' ELSE
      tmp_127;

  
  tmp_135 <= tmp_134 WHEN s_18 = '0' ELSE
      tmp_133;

  
  tmp_136 <= tmp_135 WHEN s_17 = '0' ELSE
      tmp_132;

  
  tmp_137 <= obj_CPAdditionObj_idxpos2Reg_2 WHEN s_24 = '0' ELSE
      tmp_136;

  
  tmp_138 <= tmp_137 WHEN s_16 = '0' ELSE
      obj_CPAdditionObj_idxpos2Reg_2;

  
  tmp_139 <= tmp_138 WHEN reset = '0' ELSE
      obj_CPAdditionObj_idxpos2Reg_1;

  obj_CPAdditionObj_idxpos2Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos2Reg_2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos2Reg_2 <= tmp_139;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos2Reg_reg_process;


  obj_CPAdditionObj_idxpos2Reg2 <= '0';

  
  tmp_140 <= obj_CPAdditionObj_idxpos2Reg_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_idxpos2Reg2;

  obj_CPAdditionObj_idxpos2Reg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos2Reg2_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos2Reg2_1 <= tmp_140;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos2Reg2_reg_process;


  p706tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_101;
  p706tmp_sub_temp <= to_unsigned(16#001#, 10) - p706tmp_sub_cast;
  tmp_141 <= p706tmp_sub_temp(0);

  p718tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_103;
  p718tmp_sub_temp <= to_unsigned(16#001#, 10) - p718tmp_sub_cast;
  tmp_142 <= p718tmp_sub_temp(0);

  obj_CPAdditionObj_idxpos1Reg <= '0';

  p747tmp_sub_temp <= to_unsigned(16#001#, 10) - resize(obj_CPAdditionObj_CPSampledAtIn_1, 10);
  tmp_143 <= p747tmp_sub_temp(0);

  obj_CPAdditionObj_idxpos1Reg_1 <= '0';

  
  tmp_144 <= obj_CPAdditionObj_idxpos1Reg_2 WHEN s_15 = '0' ELSE
      tmp_143;

  
  tmp_145 <= obj_CPAdditionObj_idxpos1Reg_2 WHEN s_14 = '0' ELSE
      obj_CPAdditionObj_idxpos1Reg;

  
  tmp_146 <= tmp_145 WHEN s_13 = '0' ELSE
      tmp_144;

  
  tmp_147 <= obj_CPAdditionObj_idxpos1Reg_2 WHEN s_12 = '0' ELSE
      tmp_142;

  
  tmp_148 <= obj_CPAdditionObj_idxpos1Reg_2 WHEN s_11 = '0' ELSE
      tmp_141;

  
  tmp_149 <= tmp_148 WHEN s_10 = '0' ELSE
      tmp_147;

  
  tmp_150 <= tmp_149 WHEN s_9 = '0' ELSE
      tmp_146;

  
  tmp_151 <= obj_CPAdditionObj_idxpos1Reg_2 WHEN s_16 = '0' ELSE
      tmp_150;

  
  tmp_152 <= tmp_151 WHEN reset = '0' ELSE
      obj_CPAdditionObj_idxpos1Reg_1;

  obj_CPAdditionObj_idxpos1Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos1Reg_2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos1Reg_2 <= tmp_152;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos1Reg_reg_process;


  obj_CPAdditionObj_idxpos1Reg2 <= '0';

  
  tmp_153 <= obj_CPAdditionObj_idxpos1Reg_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_idxpos1Reg2;

  obj_CPAdditionObj_idxpos1Reg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos1Reg2_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos1Reg2_1 <= tmp_153;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos1Reg2_reg_process;


  obj_CPAdditionObj_idxpos_1 <= '0';

  obj_CPAdditionObj_numPrevVecSamples <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_carryForward <= '0';

  obj_CPAdditionObj_carryForward_1 <= '1';

  obj_CPAdditionObj_carryForward_2 <= '0';

  obj_CPAdditionObj_carryForward_3 <= '0';

  obj_CPAdditionObj_carryForward_4 <= '0';

  obj_CPAdditionObj_hasPrevSymbData_1 <= '1';

  obj_CPAdditionObj_hasPrevSymbData_2 <= '0';

  obj_CPAdditionObj_hasPrevSymbData_3 <= '1';

  obj_CPAdditionObj_hasPrevSymbData_4 <= '0';

  
  tmp_154 <= obj_CPAdditionObj_hasPrevSymbData_1 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_hasPrevSymbData_2;

  
  tmp_155 <= obj_CPAdditionObj_carryForward_1 WHEN obj_CPAdditionObj_idxpos_2 = '0' ELSE
      obj_CPAdditionObj_carryForward_2;

  p616tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_3;
  p616tmp_sub_temp <= to_unsigned(16#001#, 10) - p616tmp_sub_cast;
  tmp_156 <= p616tmp_sub_temp(0);

  tmp_157 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_156;

  p615tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_3;
  p615tmp_sub_temp <= to_unsigned(16#001#, 10) - p615tmp_sub_cast;
  tmp_158 <= p615tmp_sub_temp(0);

  tmp_159 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_158;

  
  tmp_161 <= tmp_160 WHEN a0_6 = '0' ELSE
      obj_CPAdditionObj_idxpos1Reg2_1;

  
  tmp_162 <= tmp_160 WHEN a0_5 = '0' ELSE
      obj_CPAdditionObj_idxpos2Reg2_1;

  
  tmp_163 <= obj_CPAdditionObj_idxpos_3 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_prevSymbStartIndex_1;

  
  tmp_164 <= tmp_163 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_idxpos_3;

  
  tmp_165 <= obj_CPAdditionObj_prevSymbStartIndex_1 WHEN s_6 = '0' ELSE
      tmp_164;

  
  tmp_166 <= obj_CPAdditionObj_prevSymbStartIndex_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_165;

  
  tmp_167 <= tmp_166 WHEN reset = '0' ELSE
      obj_CPAdditionObj_prevSymbStartIndex;

  obj_CPAdditionObj_prevSymbStartIndex_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_prevSymbStartIndex_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_prevSymbStartIndex_1 <= tmp_167;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_prevSymbStartIndex_reg_process;


  obj_CPAdditionObj_idxpos_4 <= obj_CPAdditionObj_idxpos_3 XOR obj_CPAdditionObj_prevSymbStartIndex_1;

  p581obj_CPAdditionObj_idxpos_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_4;
  
  obj_CPAdditionObj_idxpos_2 <= '1' WHEN p581obj_CPAdditionObj_idxpos_cast = to_unsigned(16#001#, 9) ELSE
      '0';

  
  tmp_168 <= obj_CPAdditionObj_idxpos_4 WHEN obj_CPAdditionObj_idxpos_2 = '0' ELSE
      obj_CPAdditionObj_idxpos;

  p565tmp_sub_temp <= to_unsigned(16#001#, 10) - resize(tmp_169, 10);
  tmp_170 <= p565tmp_sub_temp(0);

  
  tmp_172 <= tmp_170 WHEN tmp_171 = '0' ELSE
      tmp_168;

  
  tmp_173 <= obj_CPAdditionObj_idxpos_3 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_172;

  
  tmp_174 <= tmp_173 WHEN s_6 = '0' ELSE
      obj_CPAdditionObj_idxpos_3;

  
  tmp_160 <= obj_CPAdditionObj_idxpos_3 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_174;

  
  tmp_175 <= tmp_160 WHEN s_8 = '0' ELSE
      tmp_162;

  
  tmp_176 <= tmp_175 WHEN s_7 = '0' ELSE
      tmp_161;

  
  tmp_177 <= tmp_176 WHEN reset = '0' ELSE
      obj_CPAdditionObj_idxpos_1;

  obj_CPAdditionObj_idxpos_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos_3 <= tmp_177;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos_reg_process;


  
  s_25 <= '1' WHEN obj_CPAdditionObj_idxpos_3 = '0' ELSE
      '0';

  
  tmp_178 <= tmp_159 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_numPrevVecSamples_1;

  
  tmp_179 <= tmp_178 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      tmp_157;

  
  tmp_180 <= obj_CPAdditionObj_numPrevVecSamples_1 WHEN s_6 = '0' ELSE
      tmp_179;

  
  tmp_181 <= obj_CPAdditionObj_numPrevVecSamples_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_180;

  
  tmp_182 <= tmp_181 WHEN reset = '0' ELSE
      obj_CPAdditionObj_numPrevVecSamples;

  obj_CPAdditionObj_numPrevVecSamples_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_numPrevVecSamples_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_numPrevVecSamples_1 <= tmp_182;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_numPrevVecSamples_reg_process;


  tmp_169 <= obj_CPAdditionObj_numCurrVecSamples_1 + obj_CPAdditionObj_numPrevVecSamples_1;

  
  tmp_171 <= '1' WHEN tmp_169 >= to_unsigned(16#001#, 9) ELSE
      '0';

  
  tmp_183 <= obj_CPAdditionObj_carryForward WHEN tmp_171 = '0' ELSE
      tmp_155;

  
  tmp_184 <= obj_CPAdditionObj_carryForward_5 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_183;

  
  tmp_185 <= tmp_184 WHEN s_6 = '0' ELSE
      obj_CPAdditionObj_carryForward_3;

  
  tmp_186 <= obj_CPAdditionObj_carryForward_5 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_185;

  
  tmp_187 <= tmp_186 WHEN reset = '0' ELSE
      obj_CPAdditionObj_carryForward_4;

  obj_CPAdditionObj_carryForward_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_carryForward_5 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_carryForward_5 <= tmp_187;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_carryForward_reg_process;


  
  tmp_188 <= tmp_154 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_hasPrevSymbData_3;

  
  tmp_189 <= obj_CPAdditionObj_hasPrevSymbData WHEN s_6 = '0' ELSE
      tmp_188;

  
  tmp_190 <= obj_CPAdditionObj_hasPrevSymbData_5 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_189;

  
  tmp_191 <= tmp_190 WHEN reset = '0' ELSE
      obj_CPAdditionObj_hasPrevSymbData_4;

  obj_CPAdditionObj_hasPrevSymbData_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_hasPrevSymbData_5 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_hasPrevSymbData_5 <= tmp_191;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_hasPrevSymbData_reg_process;


  obj_CPAdditionObj_sendOutput_1 <= '1';

  obj_CPAdditionObj_sendOutput_2 <= '1';

  obj_CPAdditionObj_sendOutput_3 <= '1';

  
  tmp_192 <= obj_CPAdditionObj_sendOutput_2 WHEN tmp_171 = '0' ELSE
      obj_CPAdditionObj_sendOutput_3;

  
  tmp_193 <= obj_CPAdditionObj_sendOutput_1 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_192;

  obj_CPAdditionObj_sendOutput_4 <= '0';

  obj_CPAdditionObj_sendOutput_5 <= '1';

  
  tmp_194 <= obj_CPAdditionObj_sendOutput_4 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_sendOutput_5;

  obj_CPAdditionObj_sendOutput_6 <= '1';

  
  tmp_195 <= tmp_194 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_sendOutput_6;

  
  tmp_196 <= tmp_193 WHEN s_6 = '0' ELSE
      tmp_195;

  
  tmp_197 <= obj_CPAdditionObj_sendOutput WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_196;

  obj_CPAdditionObj_sendOutput_7 <= '0';

  
  tmp_198 <= tmp_197 WHEN reset = '0' ELSE
      obj_CPAdditionObj_sendOutput_7;

  obj_CPAdditionObj_sendOutput_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_sendOutput_8 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_sendOutput_8 <= tmp_198;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_sendOutput_reg_process;


  obj_CPAdditionObj_dataOutReg_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataOutReg_im <= to_signed(16#0000#, 16);

  p571tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_3;
  p571tmp_sub_temp <= to_unsigned(16#001#, 10) - p571tmp_sub_cast;
  tmp_199 <= p571tmp_sub_temp(0);

  tmp_200 <= tmp_169(0);

  p573tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_prevSymbStartIndex_1;
  p573tmp_sub_temp <= to_unsigned(16#001#, 10) - p573tmp_sub_cast;
  tmp_201 <= p573tmp_sub_temp(0);

  
  tmp_202 <= tmp_200 WHEN tmp_171 = '0' ELSE
      tmp_201;

  
  tmp_203 <= tmp_199 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_202;

  
  tmp_204 <= tmp_158 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      tmp_156;

  
  tmp_205 <= tmp_203 WHEN s_6 = '0' ELSE
      tmp_204;

  obj_CPAdditionObj_dataVec1Samples <= '0';

  
  tmp_206 <= obj_CPAdditionObj_dataVec1Samples_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_205;

  
  tmp_207 <= tmp_206 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVec1Samples;

  obj_CPAdditionObj_dataVec1Samples_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVec1Samples_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVec1Samples_1 <= tmp_207;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVec1Samples_reg_process;


  p520_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_dataVec1Samples_1;
  
  s_26 <= '1' WHEN p520_cast > to_unsigned(16#000#, 10) ELSE
      '0';

  s_27 <= obj_CPAdditionObj_startRead1Reg_1 AND ( NOT obj_CPAdditionObj_startRead2Reg_1);

  s_28 <= ( NOT obj_CPAdditionObj_startRead1Reg_1) AND obj_CPAdditionObj_startRead2Reg_1;

  obj_CPAdditionObj_currVecData_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_currVecData_im <= to_signed(16#0000#, 16);

  varargin_1_re_signed <= signed(varargin_1_re);

  varargin_1_im_signed <= signed(varargin_1_im);

  obj_CPAdditionObj_dataInReg_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataInReg_im <= to_signed(16#0000#, 16);

  
  tmp_re <= varargin_1_re_signed WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataInReg_re;
  
  tmp_im <= varargin_1_im_signed WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataInReg_im;

  obj_CPAdditionObj_dataInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataInReg_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataInReg_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataInReg_re_1 <= tmp_re;
        obj_CPAdditionObj_dataInReg_im_1 <= tmp_im;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataInReg_reg_process;


  obj_CPAdditionObj_dataInReg1_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataInReg1_im <= to_signed(16#0000#, 16);

  
  tmp_re_1 <= obj_CPAdditionObj_dataInReg_re_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataInReg1_re;
  
  tmp_im_1 <= obj_CPAdditionObj_dataInReg_im_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataInReg1_im;

  obj_CPAdditionObj_dataInReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataInReg1_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataInReg1_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataInReg1_re_1 <= tmp_re_1;
        obj_CPAdditionObj_dataInReg1_im_1 <= tmp_im_1;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataInReg1_reg_process;


  obj_CPAdditionObj_writeAddrRAM2 <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_writeAddrRAM2_1 <= to_unsigned(16#000#, 10);

  tmp_208 <= obj_CPAdditionObj_writeAddrRAM2_2 + to_unsigned(16#001#, 10);

  
  tmp_209 <= tmp_208 WHEN a0_1 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2;

  
  tmp_210 <= obj_CPAdditionObj_writeAddrRAM2_2 WHEN obj_CPAdditionObj_writeEnbRAM2_1 = '0' ELSE
      tmp_209;

  
  tmp_211 <= tmp_210 WHEN obj_CPAdditionObj_writeEnbRAM1_1 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2_2;

  
  tmp_212 <= tmp_211 WHEN reset = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2_1;

  obj_CPAdditionObj_writeAddrRAM2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_writeAddrRAM2_2 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_writeAddrRAM2_2 <= tmp_212;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_writeAddrRAM2_reg_process;


  obj_CPAdditionObj_FFTLengthAtOutMinusVecLen <= to_unsigned(16#000#, 9);

  
  tmp_214 <= tmp_213 WHEN reset = '0' ELSE
      obj_CPAdditionObj_FFTLengthAtOutMinusVecLen;

  obj_CPAdditionObj_FFTLengthAtOutMinusVecLen_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLengthAtOutMinusVecLen_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLengthAtOutMinusVecLen_1 <= tmp_214;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLengthAtOutMinusVecLen_reg_process;


  
  tmp_213 <= obj_CPAdditionObj_FFTLengthAtOutMinusVecLen_1 WHEN s_4 = '0' ELSE
      obj_CPAdditionObj_FFTLenMinusVecLen_1;

  obj_CPAdditionObj_readAddrRAM2 <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM2Reg <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM2Reg_1 <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM2Reg_2 <= to_unsigned(16#000#, 10);

  
  tmp_215 <= obj_CPAdditionObj_readAddrRAM2Reg_3 WHEN s_23 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2_2;

  
  tmp_216 <= obj_CPAdditionObj_readAddrRAM2Reg_3 WHEN s_22 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2Reg_1;

  
  tmp_217 <= tmp_216 WHEN s_21 = '0' ELSE
      tmp_215;

  
  tmp_218 <= obj_CPAdditionObj_readAddrRAM2Reg_3 WHEN s_20 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2Reg;

  
  tmp_219 <= obj_CPAdditionObj_readAddrRAM2Reg_3 WHEN s_19 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2_2;

  
  tmp_220 <= tmp_219 WHEN s_18 = '0' ELSE
      tmp_218;

  
  tmp_221 <= tmp_220 WHEN s_17 = '0' ELSE
      tmp_217;

  
  tmp_222 <= obj_CPAdditionObj_readAddrRAM2Reg_3 WHEN s_24 = '0' ELSE
      tmp_221;

  
  tmp_223 <= tmp_222 WHEN s_16 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2Reg_3;

  
  tmp_224 <= tmp_223 WHEN reset = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2Reg_2;

  obj_CPAdditionObj_readAddrRAM2Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_readAddrRAM2Reg_3 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_readAddrRAM2Reg_3 <= tmp_224;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_readAddrRAM2Reg_reg_process;


  obj_CPAdditionObj_readAddrRAM2_1 <= to_unsigned(16#000#, 10);

  
  tmp_226 <= obj_CPAdditionObj_readAddrRAM2Reg_3 WHEN tmp_44 = '0' ELSE
      tmp_225;

  tmp_227 <= obj_CPAdditionObj_readAddrRAM2_2 + to_unsigned(16#001#, 10);

  
  a0_7 <= '1' WHEN obj_CPAdditionObj_readAddrRAM2_2 = resize(tmp_213, 10) ELSE
      '0';

  
  tmp_228 <= tmp_227 WHEN a0_7 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2;

  
  tmp_229 <= obj_CPAdditionObj_readAddrRAM2_2 WHEN s_5 = '0' ELSE
      tmp_228;

  
  tmp_225 <= tmp_229 WHEN s_3 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2_2;

  
  tmp_230 <= tmp_225 WHEN obj_CPAdditionObj_sym2Done_3 = '0' ELSE
      tmp_226;

  
  tmp_231 <= tmp_230 WHEN reset = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2_1;

  obj_CPAdditionObj_readAddrRAM2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_readAddrRAM2_2 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_readAddrRAM2_2 <= tmp_231;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_readAddrRAM2_reg_process;


  varargout_1_re_signed <= signed(varargout_1_re_1);

  varargout_1_im_signed <= signed(varargout_1_im_1);

  obj_CPAdditionObj_writeAddrRAM1 <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_writeAddrRAM1_1 <= to_unsigned(16#000#, 10);

  tmp_232 <= obj_CPAdditionObj_writeAddrRAM1_2 + to_unsigned(16#001#, 10);

  
  tmp_233 <= tmp_232 WHEN a0_2 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM1;

  
  tmp_234 <= obj_CPAdditionObj_writeAddrRAM1_2 WHEN obj_CPAdditionObj_writeEnbRAM1_1 = '0' ELSE
      tmp_233;

  
  tmp_235 <= tmp_234 WHEN reset = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM1_1;

  obj_CPAdditionObj_writeAddrRAM1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_writeAddrRAM1_2 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_writeAddrRAM1_2 <= tmp_235;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_writeAddrRAM1_reg_process;


  obj_CPAdditionObj_readAddrRAM1 <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM1Reg <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM1Reg_1 <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM1Reg_2 <= to_unsigned(16#000#, 10);

  
  tmp_236 <= obj_CPAdditionObj_readAddrRAM1Reg_3 WHEN s_15 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM1_2;

  
  tmp_237 <= obj_CPAdditionObj_readAddrRAM1Reg_3 WHEN s_14 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM1Reg_1;

  
  tmp_238 <= tmp_237 WHEN s_13 = '0' ELSE
      tmp_236;

  
  tmp_239 <= obj_CPAdditionObj_readAddrRAM1Reg_3 WHEN s_12 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM1Reg;

  
  tmp_240 <= obj_CPAdditionObj_readAddrRAM1Reg_3 WHEN s_11 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM1_2;

  
  tmp_241 <= tmp_240 WHEN s_10 = '0' ELSE
      tmp_239;

  
  tmp_242 <= tmp_241 WHEN s_9 = '0' ELSE
      tmp_238;

  
  tmp_243 <= obj_CPAdditionObj_readAddrRAM1Reg_3 WHEN s_16 = '0' ELSE
      tmp_242;

  
  tmp_244 <= tmp_243 WHEN reset = '0' ELSE
      obj_CPAdditionObj_readAddrRAM1Reg_2;

  obj_CPAdditionObj_readAddrRAM1Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_readAddrRAM1Reg_3 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_readAddrRAM1Reg_3 <= tmp_244;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_readAddrRAM1Reg_reg_process;


  obj_CPAdditionObj_readAddrRAM1_1 <= to_unsigned(16#000#, 10);

  
  tmp_246 <= obj_CPAdditionObj_readAddrRAM1Reg_3 WHEN tmp_27 = '0' ELSE
      tmp_245;

  tmp_247 <= obj_CPAdditionObj_readAddrRAM1_2 + to_unsigned(16#001#, 10);

  
  a0_8 <= '1' WHEN obj_CPAdditionObj_readAddrRAM1_2 = resize(tmp_213, 10) ELSE
      '0';

  
  tmp_248 <= tmp_247 WHEN a0_8 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM1;

  
  tmp_245 <= obj_CPAdditionObj_readAddrRAM1_2 WHEN s_3 = '0' ELSE
      tmp_248;

  
  tmp_249 <= tmp_245 WHEN obj_CPAdditionObj_sym1Done_3 = '0' ELSE
      tmp_246;

  
  tmp_250 <= tmp_249 WHEN reset = '0' ELSE
      obj_CPAdditionObj_readAddrRAM1_1;

  obj_CPAdditionObj_readAddrRAM1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_readAddrRAM1_2 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_readAddrRAM1_2 <= tmp_250;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_readAddrRAM1_reg_process;


  varargout_1_re_signed_1 <= signed(varargout_1_re_2);

  varargout_1_im_signed_1 <= signed(varargout_1_im_2);

  
  tmp_re_3 <= tmp_re_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_currVecData_re;
  
  tmp_im_3 <= tmp_im_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_currVecData_im;

  obj_CPAdditionObj_currVecData_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_currVecData_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_currVecData_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_currVecData_re_1 <= tmp_re_3;
        obj_CPAdditionObj_currVecData_im_1 <= tmp_im_3;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_currVecData_reg_process;


  
  tmp_re_4 <= obj_CPAdditionObj_currVecData_re_1 WHEN s_28 = '0' ELSE
      varargout_1_re_signed;
  
  tmp_im_4 <= obj_CPAdditionObj_currVecData_im_1 WHEN s_28 = '0' ELSE
      varargout_1_im_signed;

  
  tmp_re_2 <= tmp_re_4 WHEN s_27 = '0' ELSE
      varargout_1_re_signed_1;
  
  tmp_im_2 <= tmp_im_4 WHEN s_27 = '0' ELSE
      varargout_1_im_signed_1;

  obj_CPAdditionObj_dataVec_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataVec_im <= to_signed(16#0000#, 16);

  
  tmp_re_5 <= tmp_re_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVec_re;
  
  tmp_im_5 <= tmp_im_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVec_im;

  obj_CPAdditionObj_dataVec_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVec_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataVec_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVec_re_1 <= tmp_re_5;
        obj_CPAdditionObj_dataVec_im_1 <= tmp_im_5;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVec_reg_process;


  obj_CPAdditionObj_dataVecReg_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataVecReg_im <= to_signed(16#0000#, 16);

  
  tmp_re_6 <= obj_CPAdditionObj_dataVec_re_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re;
  
  tmp_im_6 <= obj_CPAdditionObj_dataVec_im_1 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im;

  obj_CPAdditionObj_dataVecReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVecReg_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataVecReg_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVecReg_re_1 <= tmp_re_6;
        obj_CPAdditionObj_dataVecReg_im_1 <= tmp_im_6;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVecReg_reg_process;


  
  tmp_re_7 <= obj_CPAdditionObj_dataVec_re_1 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re_1;
  
  tmp_im_7 <= obj_CPAdditionObj_dataVec_im_1 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im_1;

  
  tmp_re_8 <= obj_CPAdditionObj_dataVec_re_1 WHEN tmp_171 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re_1;
  
  tmp_im_8 <= obj_CPAdditionObj_dataVec_im_1 WHEN tmp_171 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im_1;

  
  tmp_re_9 <= tmp_re_7 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_re_8;
  
  tmp_im_9 <= tmp_im_7 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_im_8;

  
  tmp_re_10 <= obj_CPAdditionObj_dataVec_re_1 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re_1;
  
  tmp_im_10 <= obj_CPAdditionObj_dataVec_im_1 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im_1;

  
  tmp_re_11 <= tmp_re_9 WHEN s_6 = '0' ELSE
      tmp_re_10;
  
  tmp_im_11 <= tmp_im_9 WHEN s_6 = '0' ELSE
      tmp_im_10;

  obj_CPAdditionObj_dataVec2_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataVec2_im <= to_signed(16#0000#, 16);

  
  tmp_re_12 <= obj_CPAdditionObj_dataVec2_re_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_re_11;
  
  tmp_im_12 <= obj_CPAdditionObj_dataVec2_im_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_im_11;

  
  tmp_re_13 <= tmp_re_12 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVec2_re;
  
  tmp_im_13 <= tmp_im_12 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVec2_im;

  obj_CPAdditionObj_dataVec2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVec2_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataVec2_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVec2_re_1 <= tmp_re_13;
        obj_CPAdditionObj_dataVec2_im_1 <= tmp_im_13;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVec2_reg_process;


  p568_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_3;
  
  s_29 <= '1' WHEN p568_cast = to_unsigned(16#000#, 10) ELSE
      '0';

  p570tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_prevSymbStartIndex_1;
  p570tmp_sub_temp <= p570tmp_sub_cast - resize(obj_CPAdditionObj_numCurrVecSamples_1, 10);
  p570tmp_cast <= p570tmp_sub_temp(0);
  p570tmp_cast_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & p570tmp_cast;
  
  tmp_251 <= '1' WHEN p570tmp_cast_1 = to_unsigned(16#000#, 10) ELSE
      '0';

  obj_CPAdditionObj_prevSymb_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_prevSymb_im <= to_signed(16#0000#, 16);

  
  tmp_re_14 <= obj_CPAdditionObj_dataVecReg_re_1 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_prevSymb_re_1;
  
  tmp_im_14 <= obj_CPAdditionObj_dataVecReg_im_1 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_prevSymb_im_1;

  
  tmp_re_15 <= tmp_re_14 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re_1;
  
  tmp_im_15 <= tmp_im_14 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im_1;

  
  tmp_re_16 <= obj_CPAdditionObj_prevSymb_re_1 WHEN s_6 = '0' ELSE
      tmp_re_15;
  
  tmp_im_16 <= obj_CPAdditionObj_prevSymb_im_1 WHEN s_6 = '0' ELSE
      tmp_im_15;

  
  tmp_re_17 <= obj_CPAdditionObj_prevSymb_re_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_re_16;
  
  tmp_im_17 <= obj_CPAdditionObj_prevSymb_im_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_im_16;

  
  tmp_re_18 <= tmp_re_17 WHEN reset = '0' ELSE
      obj_CPAdditionObj_prevSymb_re;
  
  tmp_im_18 <= tmp_im_17 WHEN reset = '0' ELSE
      obj_CPAdditionObj_prevSymb_im;

  obj_CPAdditionObj_prevSymb_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_prevSymb_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_prevSymb_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_prevSymb_re_1 <= tmp_re_18;
        obj_CPAdditionObj_prevSymb_im_1 <= tmp_im_18;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_prevSymb_reg_process;


  obj_CPAdditionObj_prevVecData_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_prevVecData_im <= to_signed(16#0000#, 16);

  
  tmp_re_19 <= obj_CPAdditionObj_dataVecReg_re_1 WHEN obj_CPAdditionObj_idxpos_2 = '0' ELSE
      obj_CPAdditionObj_prevVecData_re_1;
  
  tmp_im_19 <= obj_CPAdditionObj_dataVecReg_im_1 WHEN obj_CPAdditionObj_idxpos_2 = '0' ELSE
      obj_CPAdditionObj_prevVecData_im_1;

  
  tmp_re_20 <= obj_CPAdditionObj_prevVecData_re_1 WHEN tmp_251 = '0' ELSE
      obj_CPAdditionObj_prevSymb_re_1;
  
  tmp_im_20 <= obj_CPAdditionObj_prevVecData_im_1 WHEN tmp_251 = '0' ELSE
      obj_CPAdditionObj_prevSymb_im_1;

  
  tmp_re_21 <= tmp_re_20 WHEN s_29 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re_1;
  
  tmp_im_21 <= tmp_im_20 WHEN s_29 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im_1;

  
  tmp_re_22 <= tmp_re_21 WHEN tmp_171 = '0' ELSE
      tmp_re_19;
  
  tmp_im_22 <= tmp_im_21 WHEN tmp_171 = '0' ELSE
      tmp_im_19;

  
  tmp_re_23 <= obj_CPAdditionObj_dataVecReg_re_1 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_re_22;
  
  tmp_im_23 <= obj_CPAdditionObj_dataVecReg_im_1 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_im_22;

  
  tmp_re_24 <= tmp_re_23 WHEN s_6 = '0' ELSE
      obj_CPAdditionObj_prevVecData_re_1;
  
  tmp_im_24 <= tmp_im_23 WHEN s_6 = '0' ELSE
      obj_CPAdditionObj_prevVecData_im_1;

  
  tmp_re_25 <= obj_CPAdditionObj_prevVecData_re_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_re_24;
  
  tmp_im_25 <= obj_CPAdditionObj_prevVecData_im_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_im_24;

  
  tmp_re_26 <= tmp_re_25 WHEN reset = '0' ELSE
      obj_CPAdditionObj_prevVecData_re;
  
  tmp_im_26 <= tmp_im_25 WHEN reset = '0' ELSE
      obj_CPAdditionObj_prevVecData_im;

  obj_CPAdditionObj_prevVecData_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_prevVecData_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_prevVecData_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_prevVecData_re_1 <= tmp_re_26;
        obj_CPAdditionObj_prevVecData_im_1 <= tmp_im_26;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_prevVecData_reg_process;


  
  tmp_re_27 <= obj_CPAdditionObj_dataVecReg_re_1 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_prevVecData_re_1;
  
  tmp_im_27 <= obj_CPAdditionObj_dataVecReg_im_1 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_prevVecData_im_1;

  
  tmp_re_28 <= tmp_re_21 WHEN tmp_171 = '0' ELSE
      obj_CPAdditionObj_prevSymb_re_1;
  
  tmp_im_28 <= tmp_im_21 WHEN tmp_171 = '0' ELSE
      obj_CPAdditionObj_prevSymb_im_1;

  
  tmp_re_29 <= tmp_re_27 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_re_28;
  
  tmp_im_29 <= tmp_im_27 WHEN obj_CPAdditionObj_hasPrevSymbData_5 = '0' ELSE
      tmp_im_28;

  
  tmp_re_30 <= obj_CPAdditionObj_dataVecReg_re_1 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_prevVecData_re_1;
  
  tmp_im_30 <= obj_CPAdditionObj_dataVecReg_im_1 WHEN obj_CPAdditionObj_carryForward_5 = '0' ELSE
      obj_CPAdditionObj_prevVecData_im_1;

  
  tmp_re_31 <= tmp_re_29 WHEN s_6 = '0' ELSE
      tmp_re_30;
  
  tmp_im_31 <= tmp_im_29 WHEN s_6 = '0' ELSE
      tmp_im_30;

  obj_CPAdditionObj_dataVec1_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataVec1_im <= to_signed(16#0000#, 16);

  
  tmp_re_32 <= obj_CPAdditionObj_dataVec1_re_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_re_31;
  
  tmp_im_32 <= obj_CPAdditionObj_dataVec1_im_1 WHEN obj_CPAdditionObj_startOutputReg_1 = '0' ELSE
      tmp_im_31;

  
  tmp_re_33 <= tmp_re_32 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVec1_re;
  
  tmp_im_33 <= tmp_im_32 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataVec1_im;

  obj_CPAdditionObj_dataVec1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVec1_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataVec1_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVec1_re_1 <= tmp_re_33;
        obj_CPAdditionObj_dataVec1_im_1 <= tmp_im_33;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVec1_reg_process;


  
  tmp_re_34 <= obj_CPAdditionObj_dataVec2_re_1 WHEN s_26 = '0' ELSE
      obj_CPAdditionObj_dataVec1_re_1;
  
  tmp_im_34 <= obj_CPAdditionObj_dataVec2_im_1 WHEN s_26 = '0' ELSE
      obj_CPAdditionObj_dataVec1_im_1;

  
  tmp_re_35 <= obj_CPAdditionObj_dataOutReg_re WHEN obj_CPAdditionObj_sendOutput_8 = '0' ELSE
      tmp_re_34;
  
  tmp_im_35 <= obj_CPAdditionObj_dataOutReg_im WHEN obj_CPAdditionObj_sendOutput_8 = '0' ELSE
      tmp_im_34;

  obj_CPAdditionObj_dataOutReg_re_1 <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataOutReg_im_1 <= to_signed(16#0000#, 16);

  
  tmp_re_36 <= tmp_re_35 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataOutReg_re_1;
  
  tmp_im_36 <= tmp_im_35 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataOutReg_im_1;

  obj_CPAdditionObj_dataOutReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataOutReg_re_2 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataOutReg_im_2 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataOutReg_re_2 <= tmp_re_36;
        obj_CPAdditionObj_dataOutReg_im_2 <= tmp_im_36;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataOutReg_reg_process;


  obj_CPAdditionObj_dataOut_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataOut_im <= to_signed(16#0000#, 16);

  
  tmp_re_37 <= obj_CPAdditionObj_dataOutReg_re_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataOut_re;
  
  tmp_im_37 <= obj_CPAdditionObj_dataOutReg_im_2 WHEN reset = '0' ELSE
      obj_CPAdditionObj_dataOut_im;

  obj_CPAdditionObj_dataOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataOut_re_1 <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataOut_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataOut_re_1 <= tmp_re_37;
        obj_CPAdditionObj_dataOut_im_1 <= tmp_im_37;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataOut_reg_process;


  varargout_1_re <= std_logic_vector(obj_CPAdditionObj_dataOut_re_1);

  varargout_1_im <= std_logic_vector(obj_CPAdditionObj_dataOut_im_1);

  obj_CPAdditionObj_validOutReg <= '0';

  obj_CPAdditionObj_validOutReg_1 <= '1';

  
  tmp_252 <= obj_CPAdditionObj_validOutReg WHEN obj_CPAdditionObj_sendOutput_8 = '0' ELSE
      obj_CPAdditionObj_validOutReg_1;

  obj_CPAdditionObj_validOutReg_2 <= '0';

  
  tmp_253 <= tmp_252 WHEN reset = '0' ELSE
      obj_CPAdditionObj_validOutReg_2;

  obj_CPAdditionObj_validOutReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_validOutReg_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_validOutReg_3 <= tmp_253;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_validOutReg_reg_process;


  obj_CPAdditionObj_validOut <= '0';

  
  tmp_254 <= obj_CPAdditionObj_validOutReg_3 WHEN reset = '0' ELSE
      obj_CPAdditionObj_validOut;

  obj_CPAdditionObj_validOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_validOut_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_validOut_1 <= tmp_254;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_validOut_reg_process;


  varargout_2 <= obj_CPAdditionObj_validOut_1;

END rtl;

