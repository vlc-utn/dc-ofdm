-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/IEEE_8021513_TX_src_ram_formatting.vhd
-- Created: 2024-11-21 09:59:25
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_TX_src_ram_formatting
-- Source Path: HDLTx/full_tx/store_frame_in_ram/write_frame_to_ram/ram_formatting
-- Hierarchy Level: 3
-- Model version: 4.222
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY IEEE_8021513_TX_src_ram_formatting IS
  PORT( channel_valid                     :   IN    std_logic;
        header_valid                      :   IN    std_logic;
        payload_valid                     :   IN    std_logic;
        preamble                          :   IN    std_logic;
        channel                           :   IN    std_logic;
        header                            :   IN    std_logic_vector(1 DOWNTO 0);  -- boolean [2]
        payload                           :   IN    std_logic_vector(1 DOWNTO 0);  -- boolean [2]
        Out1                              :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
        );
END IEEE_8021513_TX_src_ram_formatting;


ARCHITECTURE rtl OF IEEE_8021513_TX_src_ram_formatting IS

  -- Component Declarations
  COMPONENT IEEE_8021513_TX_src_one_hot_coder_block2
    PORT( channel_valid                   :   IN    std_logic;
          header_valid                    :   IN    std_logic;
          payload_valid                   :   IN    std_logic;
          data_select                     :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : IEEE_8021513_TX_src_one_hot_coder_block2
    USE ENTITY work.IEEE_8021513_TX_src_one_hot_coder_block2(rtl);

  -- Signals
  SIGNAL data_select                      : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL data_select_unsigned             : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Constant10_out1                  : std_logic;
  SIGNAL Bit_Concat_out1                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Constant11_out1                  : std_logic;
  SIGNAL header_0                         : std_logic;
  SIGNAL payload_0                        : std_logic;
  SIGNAL Bit_Concat1_out1                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL header_1                         : std_logic;
  SIGNAL Bit_Concat2_out1                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL payload_1                        : std_logic;
  SIGNAL Bit_Concat6_out1                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Multiport_Switch_out1            : unsigned(1 DOWNTO 0);  -- ufix2

BEGIN
  u_one_hot_coder : IEEE_8021513_TX_src_one_hot_coder_block2
    PORT MAP( channel_valid => channel_valid,
              header_valid => header_valid,
              payload_valid => payload_valid,
              data_select => data_select  -- ufix2
              );

  data_select_unsigned <= unsigned(data_select);

  Constant10_out1 <= '0';

  Bit_Concat_out1 <= unsigned'(Constant10_out1 & preamble);

  Constant11_out1 <= '0';

  header_0 <= header(0);

  payload_0 <= payload(0);

  Bit_Concat1_out1 <= unsigned'(Constant11_out1 & channel);

  header_1 <= header(1);

  Bit_Concat2_out1 <= unsigned'(header_0 & header_1);

  payload_1 <= payload(1);

  Bit_Concat6_out1 <= unsigned'(payload_0 & payload_1);

  
  Multiport_Switch_out1 <= Bit_Concat_out1 WHEN data_select_unsigned = to_unsigned(16#0#, 2) ELSE
      Bit_Concat1_out1 WHEN data_select_unsigned = to_unsigned(16#1#, 2) ELSE
      Bit_Concat2_out1 WHEN data_select_unsigned = to_unsigned(16#2#, 2) ELSE
      Bit_Concat6_out1;

  Out1 <= std_logic_vector(Multiport_Switch_out1);

END rtl;

