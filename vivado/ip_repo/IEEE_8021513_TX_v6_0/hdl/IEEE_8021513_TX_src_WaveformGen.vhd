-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/IEEE_8021513_TX_src_WaveformGen.vhd
-- Created: 2024-11-21 09:59:25
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_TX_src_WaveformGen
-- Source Path: HDLTx/full_tx/full_ofdm_modulator/frequency_upshift/NCO/WaveformGen
-- Hierarchy Level: 4
-- Model version: 4.222
-- 
-- Wave form Generation Component
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY IEEE_8021513_TX_src_WaveformGen IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        phaseIdx                          :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12_E2
        exp_re                            :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En16
        exp_im                            :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En16
        );
END IEEE_8021513_TX_src_WaveformGen;


ARCHITECTURE rtl OF IEEE_8021513_TX_src_WaveformGen IS

  -- Component Declarations
  COMPONENT IEEE_8021513_TX_src_CosLookUpTableGen
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          lutaddr                         :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
          lutCosine                       :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En16
          );
  END COMPONENT;

  COMPONENT IEEE_8021513_TX_src_SinLookUpTableGen
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          lutaddr                         :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
          lutSine                         :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En16
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : IEEE_8021513_TX_src_CosLookUpTableGen
    USE ENTITY work.IEEE_8021513_TX_src_CosLookUpTableGen(rtl);

  FOR ALL : IEEE_8021513_TX_src_SinLookUpTableGen
    USE ENTITY work.IEEE_8021513_TX_src_SinLookUpTableGen(rtl);

  -- Signals
  SIGNAL phaseIdx_unsigned                : unsigned(11 DOWNTO 0);  -- ufix12_E2
  SIGNAL phaseIdxReg                      : unsigned(11 DOWNTO 0);  -- ufix12_E2
  SIGNAL msb1                             : std_logic;  -- ufix1
  SIGNAL msb2                             : std_logic;  -- ufix1
  SIGNAL signSel                          : std_logic;  -- ufix1
  SIGNAL signSelRegComp_reg               : std_logic_vector(2 DOWNTO 0);  -- ufix1 [3]
  SIGNAL signSelReg                       : std_logic;  -- ufix1
  SIGNAL lutaddr1                         : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL sin45Sel                         : std_logic;  -- ufix1
  SIGNAL sin45SelRegComp_reg              : std_logic_vector(2 DOWNTO 0);  -- ufix1 [3]
  SIGNAL sin45SelReg                      : std_logic;  -- ufix1
  SIGNAL msb3                             : std_logic;  -- ufix1
  SIGNAL lutSel                           : std_logic;  -- ufix1
  SIGNAL lutSelRegComp_reg                : std_logic_vector(2 DOWNTO 0);  -- ufix1 [3]
  SIGNAL lutSelReg                        : std_logic;  -- ufix1
  SIGNAL lutaddrmax                       : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL lutaddr2                         : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL lutaddr                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL lutaddrO                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL lutoutcos                        : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL lutoutcos_signed                 : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL lutoutsin                        : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL lutoutsin_signed                 : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL lutselcos                        : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL octantVal                        : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL fullcosmag                       : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL uminus_cast                      : signed(20 DOWNTO 0);  -- sfix21_En16
  SIGNAL uminus_cast_1                    : signed(20 DOWNTO 0);  -- sfix21_En16
  SIGNAL inverseCos                       : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL cosout                           : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL sineSignSelRegComp_reg           : std_logic_vector(2 DOWNTO 0);  -- ufix1 [3]
  SIGNAL sineSignSelReg                   : std_logic;  -- ufix1
  SIGNAL lutselsin                        : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL fullsinmag                       : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL uminus_cast_2                    : signed(20 DOWNTO 0);  -- sfix21_En16
  SIGNAL uminus_cast_3                    : signed(20 DOWNTO 0);  -- sfix21_En16
  SIGNAL inverseSin                       : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL sinout                           : signed(19 DOWNTO 0);  -- sfix20_En16

BEGIN
  u_Cos_Wave_inst : IEEE_8021513_TX_src_CosLookUpTableGen
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              lutaddr => std_logic_vector(lutaddrO),  -- ufix9
              lutCosine => lutoutcos  -- sfix20_En16
              );

  u_Sin_Wave_inst : IEEE_8021513_TX_src_SinLookUpTableGen
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              lutaddr => std_logic_vector(lutaddrO),  -- ufix9
              lutSine => lutoutsin  -- sfix20_En16
              );

  phaseIdx_unsigned <= unsigned(phaseIdx);

  phaseIdxRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        phaseIdxReg <= to_unsigned(16#000#, 12);
      ELSIF enb = '1' THEN
        phaseIdxReg <= phaseIdx_unsigned;
      END IF;
    END IF;
  END PROCESS phaseIdxRegister_process;


  -- Sine sign selection signal
  msb1 <= phaseIdxReg(11);

  msb2 <= phaseIdxReg(10);

  -- Cosine sign selection signal
  signSel <= msb1 XOR msb2;

  signSelRegComp_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        signSelRegComp_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        signSelRegComp_reg(0) <= signSel;
        signSelRegComp_reg(2 DOWNTO 1) <= signSelRegComp_reg(1 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS signSelRegComp_process;

  signSelReg <= signSelRegComp_reg(2);

  lutaddr1 <= phaseIdxReg(9 DOWNTO 0);

  -- 45 degree address
  
  sin45Sel <= '1' WHEN lutaddr1 = to_unsigned(16#200#, 10) ELSE
      '0';

  sin45SelRegComp_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        sin45SelRegComp_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        sin45SelRegComp_reg(0) <= sin45Sel;
        sin45SelRegComp_reg(2 DOWNTO 1) <= sin45SelRegComp_reg(1 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS sin45SelRegComp_process;

  sin45SelReg <= sin45SelRegComp_reg(2);

  msb3 <= phaseIdxReg(9);

  -- LUT selection signal
  lutSel <= msb2 XOR msb3;

  lutSelRegComp_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        lutSelRegComp_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        lutSelRegComp_reg(0) <= lutSel;
        lutSelRegComp_reg(2 DOWNTO 1) <= lutSelRegComp_reg(1 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS lutSelRegComp_process;

  lutSelReg <= lutSelRegComp_reg(2);

  -- Map LUT address in correct phase
  lutaddrmax <= to_unsigned(16#400#, 11);

  lutaddr2 <= resize(resize(lutaddrmax, 12) - resize(lutaddr1, 12), 10);

  
  lutaddr <= lutaddr1 WHEN msb3 = '0' ELSE
      lutaddr2;

  lutaddrO <= lutaddr(8 DOWNTO 0);

  lutoutcos_signed <= signed(lutoutcos);

  lutoutsin_signed <= signed(lutoutsin);

  -- Select cosine output LUT
  
  lutselcos <= lutoutcos_signed WHEN lutSelReg = '0' ELSE
      lutoutsin_signed;

  octantVal <= to_signed(16#0B505#, 20);

  -- Assign cosine pi/4 value
  
  fullcosmag <= lutselcos WHEN sin45SelReg = '0' ELSE
      octantVal;

  uminus_cast <= resize(fullcosmag, 21);
  uminus_cast_1 <=  - (uminus_cast);
  inverseCos <= uminus_cast_1(19 DOWNTO 0);

  -- Select sign of cosine ouptput
  
  cosout <= fullcosmag WHEN signSelReg = '0' ELSE
      inverseCos;

  exp_re <= std_logic_vector(cosout);

  sineSignSelRegComp_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        sineSignSelRegComp_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        sineSignSelRegComp_reg(0) <= msb1;
        sineSignSelRegComp_reg(2 DOWNTO 1) <= sineSignSelRegComp_reg(1 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS sineSignSelRegComp_process;

  sineSignSelReg <= sineSignSelRegComp_reg(2);

  -- Select sine output LUT
  
  lutselsin <= lutoutsin_signed WHEN lutSelReg = '0' ELSE
      lutoutcos_signed;

  -- Assign sine pi/4 value
  
  fullsinmag <= lutselsin WHEN sin45SelReg = '0' ELSE
      octantVal;

  uminus_cast_2 <= resize(fullsinmag, 21);
  uminus_cast_3 <=  - (uminus_cast_2);
  inverseSin <= uminus_cast_3(19 DOWNTO 0);

  -- Select sign of sine output
  
  sinout <= fullsinmag WHEN sineSignSelReg = '0' ELSE
      inverseSin;

  exp_im <= std_logic_vector(sinout);

END rtl;

