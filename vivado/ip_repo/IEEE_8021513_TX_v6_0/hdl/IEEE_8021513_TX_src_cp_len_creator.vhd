-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/IEEE_8021513_TX_src_cp_len_creator.vhd
-- Created: 2024-11-21 09:59:25
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_TX_src_cp_len_creator
-- Source Path: HDLTx/full_tx/store_frame_in_ram/read_frame_from_ram/cp_len_creator
-- Hierarchy Level: 3
-- Model version: 4.222
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.IEEE_8021513_TX_src_full_tx_pac.ALL;

ENTITY IEEE_8021513_TX_src_cp_len_creator IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        rd_addr                           :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        cp_len_in                         :   IN    std_logic_vector(2 DOWNTO 0);  -- boolean [3]
        cp_len                            :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END IEEE_8021513_TX_src_cp_len_creator;


ARCHITECTURE rtl OF IEEE_8021513_TX_src_cp_len_creator IS

  -- Component Declarations
  COMPONENT IEEE_8021513_TX_src_Compare_To_Constant_block1
    PORT( u                               :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT IEEE_8021513_TX_src_Compare_To_Constant1_block
    PORT( u                               :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT IEEE_8021513_TX_src_Compare_To_Constant2_block
    PORT( u                               :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT IEEE_8021513_TX_src_one_hot_coder_block
    PORT( preamble                        :   IN    std_logic;
          channel                         :   IN    std_logic;
          header                          :   IN    std_logic;
          cp_select                       :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : IEEE_8021513_TX_src_Compare_To_Constant_block1
    USE ENTITY work.IEEE_8021513_TX_src_Compare_To_Constant_block1(rtl);

  FOR ALL : IEEE_8021513_TX_src_Compare_To_Constant1_block
    USE ENTITY work.IEEE_8021513_TX_src_Compare_To_Constant1_block(rtl);

  FOR ALL : IEEE_8021513_TX_src_Compare_To_Constant2_block
    USE ENTITY work.IEEE_8021513_TX_src_Compare_To_Constant2_block(rtl);

  FOR ALL : IEEE_8021513_TX_src_one_hot_coder_block
    USE ENTITY work.IEEE_8021513_TX_src_one_hot_coder_block(rtl);

  -- Signals
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL stateControl                     : std_logic;
  SIGNAL stateControl_1                   : std_logic;
  SIGNAL enb_1_2_0_gated                  : std_logic;
  SIGNAL Delay5_out1                      : std_logic;
  SIGNAL Compare_To_Constant1_out1        : std_logic;
  SIGNAL stateControl_2                   : std_logic;
  SIGNAL stateControl_3                   : std_logic;
  SIGNAL enb_1_2_0_gated_1                : std_logic;
  SIGNAL Delay4_out1                      : std_logic;
  SIGNAL Compare_To_Constant2_out1        : std_logic;
  SIGNAL stateControl_4                   : std_logic;
  SIGNAL stateControl_5                   : std_logic;
  SIGNAL enb_1_2_0_gated_2                : std_logic;
  SIGNAL Delay3_out1                      : std_logic;
  SIGNAL one_hot_coder_out1               : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL one_hot_coder_out1_unsigned      : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL stateControl_7                   : std_logic;
  SIGNAL stateControl_8                   : std_logic;
  SIGNAL enb_1_2_0_gated_3                : std_logic;
  SIGNAL Delay_out1                       : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Constant_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant1_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant2_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant3_out1                   : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Data_Type_Conversion_out1        : std_logic_vector(2 DOWNTO 0);  -- ufix1 [3]
  SIGNAL Data_Type_Conversion_out1_2      : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion_out1_1      : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion_out1_0      : std_logic;  -- ufix1
  SIGNAL y                                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL stateControl_9                   : std_logic;
  SIGNAL stateControl_10                  : std_logic;
  SIGNAL enb_1_2_0_gated_4                : std_logic;
  SIGNAL Delay6_reg                       : vector_of_unsigned3(0 TO 1);  -- ufix3 [2]
  SIGNAL Delay6_out1                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Product_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL stateControl_11                  : std_logic;
  SIGNAL stateControl_12                  : std_logic;
  SIGNAL enb_1_2_0_gated_5                : std_logic;
  SIGNAL Delay2_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL stateControl_13                  : std_logic;
  SIGNAL stateControl_14                  : std_logic;
  SIGNAL enb_1_2_0_gated_6                : std_logic;
  SIGNAL Delay1_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Multiport_Switch_out1            : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  u_Compare_To_Constant : IEEE_8021513_TX_src_Compare_To_Constant_block1
    PORT MAP( u => rd_addr,  -- uint16
              y => Compare_To_Constant_out1
              );

  u_Compare_To_Constant1 : IEEE_8021513_TX_src_Compare_To_Constant1_block
    PORT MAP( u => rd_addr,  -- uint16
              y => Compare_To_Constant1_out1
              );

  u_Compare_To_Constant2 : IEEE_8021513_TX_src_Compare_To_Constant2_block
    PORT MAP( u => rd_addr,  -- uint16
              y => Compare_To_Constant2_out1
              );

  u_one_hot_coder : IEEE_8021513_TX_src_one_hot_coder_block
    PORT MAP( preamble => Delay5_out1,
              channel => Delay4_out1,
              header => Delay3_out1,
              cp_select => one_hot_coder_out1  -- ufix2
              );

  stateControl <= '1';

  delayMatch5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        stateControl_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        stateControl_1 <= stateControl;
      END IF;
    END IF;
  END PROCESS delayMatch5_process;


  enb_1_2_0_gated <= stateControl_1 AND enb_1_2_0;

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay5_out1 <= '0';
      ELSIF enb_1_2_0_gated = '1' THEN
        Delay5_out1 <= Compare_To_Constant_out1;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  stateControl_2 <= '1';

  delayMatch4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        stateControl_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        stateControl_3 <= stateControl_2;
      END IF;
    END IF;
  END PROCESS delayMatch4_process;


  enb_1_2_0_gated_1 <= stateControl_3 AND enb_1_2_0;

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay4_out1 <= '0';
      ELSIF enb_1_2_0_gated_1 = '1' THEN
        Delay4_out1 <= Compare_To_Constant1_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  stateControl_4 <= '1';

  delayMatch3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        stateControl_5 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        stateControl_5 <= stateControl_4;
      END IF;
    END IF;
  END PROCESS delayMatch3_process;


  enb_1_2_0_gated_2 <= stateControl_5 AND enb_1_2_0;

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay3_out1 <= '0';
      ELSIF enb_1_2_0_gated_2 = '1' THEN
        Delay3_out1 <= Compare_To_Constant2_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  one_hot_coder_out1_unsigned <= unsigned(one_hot_coder_out1);

  stateControl_7 <= '1';

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        stateControl_8 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        stateControl_8 <= stateControl_7;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  enb_1_2_0_gated_3 <= stateControl_8 AND enb_1_2_0;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay_out1 <= to_unsigned(16#0#, 2);
      ELSIF enb_1_2_0_gated_3 = '1' THEN
        Delay_out1 <= one_hot_coder_out1_unsigned;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Constant_out1 <= to_unsigned(16#00#, 8);

  Constant1_out1 <= to_unsigned(16#40#, 8);

  Constant2_out1 <= to_unsigned(16#40#, 8);

  Constant3_out1 <= to_unsigned(16#8#, 4);

  Data_Type_Conversion_out1 <= cp_len_in;

  Data_Type_Conversion_out1_2 <= Data_Type_Conversion_out1(2);

  Data_Type_Conversion_out1_1 <= Data_Type_Conversion_out1(1);

  Data_Type_Conversion_out1_0 <= Data_Type_Conversion_out1(0);

  y <= unsigned'(Data_Type_Conversion_out1_2 & Data_Type_Conversion_out1_1 & Data_Type_Conversion_out1_0);

  stateControl_9 <= '1';

  delayMatch6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        stateControl_10 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        stateControl_10 <= stateControl_9;
      END IF;
    END IF;
  END PROCESS delayMatch6_process;


  enb_1_2_0_gated_4 <= stateControl_10 AND enb_1_2_0;

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay6_reg <= (OTHERS => to_unsigned(16#0#, 3));
      ELSIF enb_1_2_0_gated_4 = '1' THEN
        Delay6_reg(0) <= y;
        Delay6_reg(1) <= Delay6_reg(0);
      END IF;
    END IF;
  END PROCESS Delay6_process;

  Delay6_out1 <= Delay6_reg(1);

  Product_out1 <= resize(Constant3_out1 * Delay6_out1, 8);

  stateControl_11 <= '1';

  delayMatch2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        stateControl_12 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        stateControl_12 <= stateControl_11;
      END IF;
    END IF;
  END PROCESS delayMatch2_process;


  enb_1_2_0_gated_5 <= stateControl_12 AND enb_1_2_0;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_out1 <= to_unsigned(16#00#, 8);
      ELSIF enb_1_2_0_gated_5 = '1' THEN
        Delay2_out1 <= Product_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  stateControl_13 <= '1';

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        stateControl_14 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        stateControl_14 <= stateControl_13;
      END IF;
    END IF;
  END PROCESS delayMatch1_process;


  enb_1_2_0_gated_6 <= stateControl_14 AND enb_1_2_0;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_out1 <= to_unsigned(16#00#, 8);
      ELSIF enb_1_2_0_gated_6 = '1' THEN
        Delay1_out1 <= Delay2_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  
  Multiport_Switch_out1 <= Constant_out1 WHEN Delay_out1 = to_unsigned(16#0#, 2) ELSE
      Constant1_out1 WHEN Delay_out1 = to_unsigned(16#1#, 2) ELSE
      Constant2_out1 WHEN Delay_out1 = to_unsigned(16#2#, 2) ELSE
      Delay1_out1;

  cp_len <= std_logic_vector(Multiport_Switch_out1);

END rtl;

