-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/IEEE_8021513_TX_src_header_fec.vhd
-- Created: 2024-11-21 09:59:25
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_TX_src_header_fec
-- Source Path: HDLTx/full_tx/header_full/header_fec
-- Hierarchy Level: 2
-- Model version: 4.222
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY IEEE_8021513_TX_src_header_fec IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        data_in                           :   IN    std_logic;
        ctrl_in_start                     :   IN    std_logic;
        ctrl_in_end                       :   IN    std_logic;
        ctrl_in_valid                     :   IN    std_logic;
        data_out                          :   OUT   std_logic;
        ctrl_out_end                      :   OUT   std_logic;
        ctrl_out_valid                    :   OUT   std_logic
        );
END IEEE_8021513_TX_src_header_fec;


ARCHITECTURE rtl OF IEEE_8021513_TX_src_header_fec IS

  -- Component Declarations
  COMPONENT IEEE_8021513_TX_src_Hc_12H_B14
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          in0                             :   IN    std_logic;
          in1_start                       :   IN    std_logic;
          in1_end                         :   IN    std_logic;
          in1_valid                       :   IN    std_logic;
          out0                            :   OUT   std_logic;
          out1_end                        :   OUT   std_logic;
          out1_valid                      :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : IEEE_8021513_TX_src_Hc_12H_B14
    USE ENTITY work.IEEE_8021513_TX_src_Hc_12H_B14(rtl);

  -- Signals
  SIGNAL Delay3_out1                      : std_logic;
  SIGNAL Delay2_out1_start                : std_logic;
  SIGNAL Delay2_out1_end                  : std_logic;
  SIGNAL Delay2_out1_valid                : std_logic;
  SIGNAL Hc_12H_B14_out1                  : std_logic;
  SIGNAL Hc_12H_B14_out2_end              : std_logic;
  SIGNAL Hc_12H_B14_out2_valid            : std_logic;
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL Delay_out1_end                   : std_logic;
  SIGNAL Delay_out1_valid                 : std_logic;

BEGIN
  u_Hc_12H_B14 : IEEE_8021513_TX_src_Hc_12H_B14
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              in0 => Delay3_out1,
              in1_start => Delay2_out1_start,
              in1_end => Delay2_out1_end,
              in1_valid => Delay2_out1_valid,
              out0 => Hc_12H_B14_out1,
              out1_end => Hc_12H_B14_out2_end,
              out1_valid => Hc_12H_B14_out2_valid
              );

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay3_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay3_out1 <= data_in;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  c_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_out1_start <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1_start <= ctrl_in_start;
      END IF;
    END IF;
  END PROCESS c_process;


  c_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_out1_end <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1_end <= ctrl_in_end;
      END IF;
    END IF;
  END PROCESS c_1_process;


  c_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_out1_valid <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1_valid <= ctrl_in_valid;
      END IF;
    END IF;
  END PROCESS c_2_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1 <= Hc_12H_B14_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  c_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay_out1_end <= '0';
      ELSIF enb = '1' THEN
        Delay_out1_end <= Hc_12H_B14_out2_end;
      END IF;
    END IF;
  END PROCESS c_4_process;


  c_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay_out1_valid <= '0';
      ELSIF enb = '1' THEN
        Delay_out1_valid <= Hc_12H_B14_out2_valid;
      END IF;
    END IF;
  END PROCESS c_5_process;


  data_out <= Delay1_out1;

  ctrl_out_end <= Delay_out1_end;

  ctrl_out_valid <= Delay_out1_valid;

END rtl;

