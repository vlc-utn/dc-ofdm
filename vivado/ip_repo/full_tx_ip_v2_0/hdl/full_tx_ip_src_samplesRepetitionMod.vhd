-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/full_tx_ip_src_samplesRepetitionMod.vhd
-- Created: 2024-08-11 18:37:15
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_tx_ip_src_samplesRepetitionMod
-- Source Path: 
-- Hierarchy Level: 4
-- Model version: 4.91
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_tx_ip_src_samplesRepetitionMod IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        varargin_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargin_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargin_2                        :   IN    std_logic;
        varargin_3                        :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        varargin_4                        :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        varargout_1_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargout_1_im                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargout_2                       :   OUT   std_logic;
        varargout_3                       :   OUT   std_logic_vector(8 DOWNTO 0);  -- ufix9
        varargout_4                       :   OUT   std_logic_vector(8 DOWNTO 0)  -- ufix9
        );
END full_tx_ip_src_samplesRepetitionMod;


ARCHITECTURE rtl OF full_tx_ip_src_samplesRepetitionMod IS

  -- Component Declarations
  COMPONENT full_tx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          wr_din_re                       :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_din_im                       :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          dout_re                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          dout_im                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_tx_ip_src_SimpleDualPortRAM_generic_block
    USE ENTITY work.full_tx_ip_src_SimpleDualPortRAM_generic_block(rtl);

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL varargout_2_1                    : std_logic;
  SIGNAL obj_samplesRepetitionObj_resetSig : std_logic;
  SIGNAL obj_samplesRepetitionObj_resetSig_1 : std_logic;
  SIGNAL tmp                              : std_logic;
  SIGNAL varargin_3_unsigned              : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL obj_samplesRepetitionObj_FFTLenReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_FFTLenReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_1                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_FFTLenReg_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s                                : std_logic;
  SIGNAL obj_samplesRepetitionObj_ctrl    : std_logic;
  SIGNAL obj_samplesRepetitionObj_validInReg : std_logic;
  SIGNAL tmp_2                            : std_logic;
  SIGNAL obj_samplesRepetitionObj_validInReg_1 : std_logic;
  SIGNAL tmp_3                            : std_logic;
  SIGNAL tmp_4                            : std_logic;
  SIGNAL obj_samplesRepetitionObj_ctrl_1  : std_logic;
  SIGNAL obj_samplesRepetitionObj_currFFTLength : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_5                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_inCount : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_inCount_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_inCount_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_6                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_7                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_8                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_currFFTLength_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_1                              : std_logic;
  SIGNAL a0                               : std_logic;
  SIGNAL tmp_9                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_10                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_11                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0_1                             : std_logic;
  SIGNAL obj_samplesRepetitionObj_flag    : std_logic;
  SIGNAL a0_2                             : std_logic;
  SIGNAL obj_samplesRepetitionObj_flag_1  : std_logic;
  SIGNAL obj_samplesRepetitionObj_flag_2  : std_logic;
  SIGNAL obj_samplesRepetitionObj_flag_3  : std_logic;
  SIGNAL tmp_12                           : std_logic;
  SIGNAL tmp_13                           : std_logic;
  SIGNAL tmp_14                           : std_logic;
  SIGNAL tmp_15                           : std_logic;
  SIGNAL tmp_16                           : std_logic;
  SIGNAL tmp_17                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_sym2Done : std_logic;
  SIGNAL obj_samplesRepetitionObj_sym2Done_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_sym2Done_2 : std_logic;
  SIGNAL obj_samplesRepetitionObj_startRead2 : std_logic;
  SIGNAL obj_samplesRepetitionObj_startRead2_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_startRead2_2 : std_logic;
  SIGNAL obj_samplesRepetitionObj_outCount : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_outCount_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_outCount_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_startRead2_3 : std_logic;
  SIGNAL obj_samplesRepetitionObj_sym1Done : std_logic;
  SIGNAL obj_samplesRepetitionObj_sym1Done_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_sym1Done_2 : std_logic;
  SIGNAL obj_samplesRepetitionObj_startRead1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_startRead1_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_startRead1_2 : std_logic;
  SIGNAL obj_samplesRepetitionObj_startRead1_3 : std_logic;
  SIGNAL tmp_18                           : std_logic;
  SIGNAL tmp_19                           : std_logic;
  SIGNAL s_2                              : std_logic;
  SIGNAL obj_samplesRepetitionObj_startRead1_4 : std_logic;
  SIGNAL tmp_20                           : std_logic;
  SIGNAL s_3                              : std_logic;
  SIGNAL tmp_21                           : std_logic;
  SIGNAL tmp_22                           : std_logic;
  SIGNAL tmp_23                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_outCount_3 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_24                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_25                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_26                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_4                              : std_logic;
  SIGNAL tmp_27                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_5                              : std_logic;
  SIGNAL tmp_28                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_29                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_30                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_startRead2_4 : std_logic;
  SIGNAL tmp_31                           : std_logic;
  SIGNAL tmp_32                           : std_logic;
  SIGNAL tmp_33                           : std_logic;
  SIGNAL tmp_34                           : std_logic;
  SIGNAL tmp_35                           : std_logic;
  SIGNAL tmp_36                           : std_logic;
  SIGNAL tmp_37                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_sym2Done_3 : std_logic;
  SIGNAL tmp_38                           : std_logic;
  SIGNAL tmp_39                           : std_logic;
  SIGNAL tmp_40                           : std_logic;
  SIGNAL tmp_41                           : std_logic;
  SIGNAL tmp_42                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_sym1Done_3 : std_logic;
  SIGNAL tmp_43                           : std_logic;
  SIGNAL tmp_44                           : std_logic;
  SIGNAL tmp_45                           : std_logic;
  SIGNAL tmp_46                           : std_logic;
  SIGNAL tmp_47                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_strtRd1Reg : std_logic;
  SIGNAL tmp_48                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_strtRd1Reg_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_strtRd1Reg1 : std_logic;
  SIGNAL tmp_49                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_strtRd1Reg1_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_strtRd2Reg : std_logic;
  SIGNAL tmp_50                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_strtRd2Reg_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_strtRd2Reg1 : std_logic;
  SIGNAL tmp_51                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_strtRd2Reg1_1 : std_logic;
  SIGNAL s_6                              : std_logic;
  SIGNAL s_7                              : std_logic;
  SIGNAL obj_samplesRepetitionObj_dataOutReg_re : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOutReg_im : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargin_1_re_signed             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargin_1_im_signed             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataInReg_re : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataInReg_im : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataInReg_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataInReg_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataInReg1_re : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataInReg1_im : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_1                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_1                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataInReg1_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataInReg1_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_wrAddr2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_wrAddr2_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_wrAddr2_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_52                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_53                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_54                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_55                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_56                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_8                              : std_logic;
  SIGNAL out_rsvd                         : std_logic;
  SIGNAL out_rsvd_1                       : std_logic;
  SIGNAL tmp_57                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_wrEn2   : std_logic;
  SIGNAL obj_samplesRepetitionObj_wrEn2_1 : std_logic;
  SIGNAL tmp_58                           : std_logic;
  SIGNAL tmp_59                           : std_logic;
  SIGNAL s_9                              : std_logic;
  SIGNAL tmp_60                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_prevFFTLength : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_prevFFTLength_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_61                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_62                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_63                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_rdAddr2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_rdAddr2_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_rdAddr2_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_64                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_65                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_rdAddr2_3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_66                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_10                             : std_logic;
  SIGNAL tmp_67                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_68                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_69                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_70                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargout_1_re_1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_im_1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_re_signed            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargout_1_im_signed            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_2                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_2                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_wrAddr1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_wrAddr1_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_wrAddr1_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_71                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_72                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_73                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_74                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_75                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_11                             : std_logic;
  SIGNAL out_rsvd_2                       : std_logic;
  SIGNAL out_rsvd_3                       : std_logic;
  SIGNAL tmp_76                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_wrEn1   : std_logic;
  SIGNAL obj_samplesRepetitionObj_wrEn1_1 : std_logic;
  SIGNAL tmp_77                           : std_logic;
  SIGNAL tmp_78                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_rdAddr1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_rdAddr1_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_rdAddr1_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_79                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_80                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_samplesRepetitionObj_rdAddr1_3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_81                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_12                             : std_logic;
  SIGNAL tmp_82                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_83                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_84                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargout_1_re_2                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_im_2                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_re_signed_1          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargout_1_im_signed_1          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_3                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_3                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOutReg_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOutReg_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_4                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_4                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOutReg_re_2 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOutReg_im_2 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOut_re : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOut_im : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_5                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_5                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOut_re_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_dataOut_im_1 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_samplesRepetitionObj_validOutReg : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOutReg_1 : std_logic;
  SIGNAL tmp_85                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOutReg_2 : std_logic;
  SIGNAL tmp_86                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOutReg_3 : std_logic;
  SIGNAL tmp_87                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOutReg_4 : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOutReg1 : std_logic;
  SIGNAL tmp_88                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOutReg1_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOutReg2 : std_logic;
  SIGNAL tmp_89                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOutReg2_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOut : std_logic;
  SIGNAL tmp_90                           : std_logic;
  SIGNAL obj_samplesRepetitionObj_validOut_1 : std_logic;
  SIGNAL obj_samplesRepetitionObj_FFTLengthReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_FFTLengthReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_91                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_92                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_FFTLengthRegOut : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_FFTLengthRegOut_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_93                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_94                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_95                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL varargin_4_unsigned              : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL tmp_96                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_CPLengthReg : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_CPLengthReg_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_97                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_98                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_CPLengthRegOut : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_samplesRepetitionObj_CPLengthRegOut_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_99                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_100                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_101                          : unsigned(8 DOWNTO 0);  -- ufix9

BEGIN
  u_simpleDualPortRam : full_tx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC MAP( AddrWidth => 10,
                 DataWidth => 16
                 )
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              wr_din_re => std_logic_vector(obj_samplesRepetitionObj_dataInReg1_re_1),
              wr_din_im => std_logic_vector(obj_samplesRepetitionObj_dataInReg1_im_1),
              wr_addr => std_logic_vector(obj_samplesRepetitionObj_wrAddr2_2),
              wr_en => obj_samplesRepetitionObj_wrEn2_1,
              rd_addr => std_logic_vector(obj_samplesRepetitionObj_rdAddr2_3),
              dout_re => varargout_1_re_1,
              dout_im => varargout_1_im_1
              );

  u_simpleDualPortRam_1 : full_tx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC MAP( AddrWidth => 10,
                 DataWidth => 16
                 )
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              wr_din_re => std_logic_vector(obj_samplesRepetitionObj_dataInReg1_re_1),
              wr_din_im => std_logic_vector(obj_samplesRepetitionObj_dataInReg1_im_1),
              wr_addr => std_logic_vector(obj_samplesRepetitionObj_wrAddr1_2),
              wr_en => obj_samplesRepetitionObj_wrEn1_1,
              rd_addr => std_logic_vector(obj_samplesRepetitionObj_rdAddr1_3),
              dout_re => varargout_1_re_2,
              dout_im => varargout_1_im_2
              );

  varargout_2_1 <= varargin_2;

  obj_samplesRepetitionObj_resetSig <= '0';

  
  tmp <= obj_samplesRepetitionObj_resetSig_1 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_resetSig;

  obj_samplesRepetitionObj_resetSig_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_resetSig_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_resetSig_1 <= tmp;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_resetSig_reg_process;


  varargin_3_unsigned <= unsigned(varargin_3);

  obj_samplesRepetitionObj_FFTLenReg <= varargin_3_unsigned(8 DOWNTO 0);

  obj_samplesRepetitionObj_FFTLenReg_1 <= to_unsigned(16#100#, 9);

  
  tmp_1 <= obj_samplesRepetitionObj_FFTLenReg WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_FFTLenReg_1;

  obj_samplesRepetitionObj_FFTLenReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_FFTLenReg_2 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_FFTLenReg_2 <= tmp_1;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_FFTLenReg_reg_process;


  
  s <= '1' WHEN obj_samplesRepetitionObj_FFTLenReg_2 /= to_unsigned(16#001#, 9) ELSE
      '0';

  obj_samplesRepetitionObj_ctrl <= '0';

  obj_samplesRepetitionObj_validInReg <= '0';

  
  tmp_2 <= varargout_2_1 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_validInReg;

  obj_samplesRepetitionObj_validInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_validInReg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_validInReg_1 <= tmp_2;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_validInReg_reg_process;


  
  tmp_4 <= tmp_3 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_ctrl;

  obj_samplesRepetitionObj_ctrl_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_ctrl_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_ctrl_1 <= tmp_4;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_ctrl_reg_process;


  
  tmp_3 <= obj_samplesRepetitionObj_ctrl_1 WHEN s = '0' ELSE
      obj_samplesRepetitionObj_validInReg_1;

  obj_samplesRepetitionObj_currFFTLength <= to_unsigned(16#100#, 9);

  tmp_5 <= obj_samplesRepetitionObj_FFTLenReg_2 - to_unsigned(16#001#, 9);

  obj_samplesRepetitionObj_inCount <= to_unsigned(16#000#, 9);

  obj_samplesRepetitionObj_inCount_1 <= to_unsigned(16#000#, 9);

  tmp_6 <= obj_samplesRepetitionObj_inCount_2 + to_unsigned(16#001#, 9);

  
  tmp_8 <= tmp_7 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_currFFTLength;

  obj_samplesRepetitionObj_currFFTLength_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_currFFTLength_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_currFFTLength_1 <= tmp_8;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_currFFTLength_reg_process;


  s_1 <= hdlcoder_to_stdlogic(obj_samplesRepetitionObj_inCount_2 = to_unsigned(16#000#, 9)) AND obj_samplesRepetitionObj_validInReg_1;

  
  tmp_7 <= obj_samplesRepetitionObj_currFFTLength_1 WHEN s_1 = '0' ELSE
      tmp_5;

  
  a0 <= '1' WHEN obj_samplesRepetitionObj_inCount_2 = tmp_7 ELSE
      '0';

  
  tmp_9 <= tmp_6 WHEN a0 = '0' ELSE
      obj_samplesRepetitionObj_inCount;

  
  tmp_10 <= obj_samplesRepetitionObj_inCount_2 WHEN obj_samplesRepetitionObj_validInReg_1 = '0' ELSE
      tmp_9;

  
  tmp_11 <= tmp_10 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_inCount_1;

  obj_samplesRepetitionObj_inCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_inCount_2 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_inCount_2 <= tmp_11;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_inCount_reg_process;


  
  a0_1 <= '1' WHEN obj_samplesRepetitionObj_inCount_2 = obj_samplesRepetitionObj_currFFTLength_1 ELSE
      '0';

  obj_samplesRepetitionObj_flag <= '1';

  
  a0_2 <= '1' WHEN obj_samplesRepetitionObj_inCount_2 = obj_samplesRepetitionObj_currFFTLength_1 ELSE
      '0';

  obj_samplesRepetitionObj_flag_1 <= '0';

  obj_samplesRepetitionObj_flag_2 <= '0';

  
  tmp_12 <= obj_samplesRepetitionObj_flag_3 WHEN a0_2 = '0' ELSE
      obj_samplesRepetitionObj_flag_1;

  
  tmp_13 <= obj_samplesRepetitionObj_flag_3 WHEN tmp_3 = '0' ELSE
      tmp_12;

  
  tmp_14 <= obj_samplesRepetitionObj_flag_3 WHEN a0_1 = '0' ELSE
      obj_samplesRepetitionObj_flag;

  
  tmp_15 <= obj_samplesRepetitionObj_flag_3 WHEN tmp_3 = '0' ELSE
      tmp_14;

  
  tmp_16 <= tmp_15 WHEN obj_samplesRepetitionObj_flag_3 = '0' ELSE
      tmp_13;

  
  tmp_17 <= tmp_16 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_flag_2;

  obj_samplesRepetitionObj_flag_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_flag_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_flag_3 <= tmp_17;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_flag_reg_process;


  obj_samplesRepetitionObj_sym2Done <= '0';

  obj_samplesRepetitionObj_sym2Done_1 <= '1';

  obj_samplesRepetitionObj_sym2Done_2 <= '0';

  obj_samplesRepetitionObj_startRead2 <= '1';

  obj_samplesRepetitionObj_startRead2_1 <= '0';

  obj_samplesRepetitionObj_startRead2_2 <= '0';

  obj_samplesRepetitionObj_outCount <= to_unsigned(16#000#, 9);

  obj_samplesRepetitionObj_outCount_1 <= to_unsigned(16#000#, 9);

  obj_samplesRepetitionObj_outCount_2 <= to_unsigned(16#000#, 9);

  obj_samplesRepetitionObj_startRead2_3 <= '0';

  obj_samplesRepetitionObj_sym1Done <= '0';

  obj_samplesRepetitionObj_sym1Done_1 <= '1';

  obj_samplesRepetitionObj_sym1Done_2 <= '0';

  obj_samplesRepetitionObj_startRead1 <= '0';

  obj_samplesRepetitionObj_startRead1_1 <= '1';

  obj_samplesRepetitionObj_startRead1_2 <= '0';

  obj_samplesRepetitionObj_startRead1_3 <= '0';

  
  tmp_19 <= obj_samplesRepetitionObj_startRead1_1 WHEN tmp_18 = '0' ELSE
      obj_samplesRepetitionObj_startRead1_2;

  
  tmp_20 <= obj_samplesRepetitionObj_startRead1_4 WHEN s_2 = '0' ELSE
      obj_samplesRepetitionObj_startRead1;

  
  tmp_21 <= obj_samplesRepetitionObj_startRead1_4 WHEN s_3 = '0' ELSE
      tmp_20;

  
  tmp_23 <= tmp_22 WHEN a0_1 = '0' ELSE
      obj_samplesRepetitionObj_sym1Done_1;

  tmp_24 <= obj_samplesRepetitionObj_outCount_3 + to_unsigned(16#001#, 9);

  
  s_2 <= '1' WHEN resize(obj_samplesRepetitionObj_outCount_3, 10) = to_unsigned(16#0FF#, 10) ELSE
      '0';

  
  tmp_25 <= tmp_24 WHEN s_2 = '0' ELSE
      obj_samplesRepetitionObj_outCount_1;

  tmp_26 <= obj_samplesRepetitionObj_outCount_3 + to_unsigned(16#001#, 9);

  
  tmp_27 <= tmp_26 WHEN s_4 = '0' ELSE
      obj_samplesRepetitionObj_outCount;

  
  tmp_28 <= obj_samplesRepetitionObj_outCount_3 WHEN s_5 = '0' ELSE
      tmp_27;

  
  tmp_29 <= tmp_28 WHEN s_3 = '0' ELSE
      tmp_25;

  
  tmp_30 <= tmp_29 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_outCount_2;

  obj_samplesRepetitionObj_outCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_outCount_3 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_outCount_3 <= tmp_30;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_outCount_reg_process;


  
  s_4 <= '1' WHEN resize(obj_samplesRepetitionObj_outCount_3, 10) = to_unsigned(16#0FF#, 10) ELSE
      '0';

  
  tmp_31 <= obj_samplesRepetitionObj_startRead2_4 WHEN s_4 = '0' ELSE
      obj_samplesRepetitionObj_startRead2_3;

  s_5 <= obj_samplesRepetitionObj_startRead2_4 AND ( NOT obj_samplesRepetitionObj_startRead1_4);

  
  tmp_32 <= obj_samplesRepetitionObj_startRead2_4 WHEN s_5 = '0' ELSE
      tmp_31;

  
  tmp_34 <= obj_samplesRepetitionObj_startRead2 WHEN tmp_33 = '0' ELSE
      obj_samplesRepetitionObj_startRead2_1;

  
  tmp_36 <= tmp_35 WHEN a0_2 = '0' ELSE
      obj_samplesRepetitionObj_sym2Done_1;

  
  tmp_37 <= tmp_35 WHEN tmp_3 = '0' ELSE
      tmp_36;

  
  tmp_38 <= obj_samplesRepetitionObj_sym2Done WHEN tmp_33 = '0' ELSE
      obj_samplesRepetitionObj_sym2Done_3;

  
  tmp_35 <= obj_samplesRepetitionObj_sym2Done_3 WHEN obj_samplesRepetitionObj_sym2Done_3 = '0' ELSE
      tmp_38;

  
  tmp_39 <= tmp_35 WHEN obj_samplesRepetitionObj_flag_3 = '0' ELSE
      tmp_37;

  
  tmp_40 <= tmp_39 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_sym2Done_2;

  obj_samplesRepetitionObj_sym2Done_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_sym2Done_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_sym2Done_3 <= tmp_40;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_sym2Done_reg_process;


  
  tmp_41 <= tmp_18 WHEN obj_samplesRepetitionObj_sym2Done_3 = '0' ELSE
      tmp_34;

  
  tmp_42 <= tmp_41 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_startRead2_2;

  obj_samplesRepetitionObj_startRead2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_startRead2_4 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_startRead2_4 <= tmp_42;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_startRead2_reg_process;


  s_3 <= obj_samplesRepetitionObj_startRead1_4 AND ( NOT obj_samplesRepetitionObj_startRead2_4);

  
  tmp_18 <= tmp_32 WHEN s_3 = '0' ELSE
      obj_samplesRepetitionObj_startRead2_4;

  
  tmp_43 <= obj_samplesRepetitionObj_sym1Done WHEN tmp_18 = '0' ELSE
      obj_samplesRepetitionObj_sym1Done_3;

  
  tmp_22 <= obj_samplesRepetitionObj_sym1Done_3 WHEN obj_samplesRepetitionObj_sym1Done_3 = '0' ELSE
      tmp_43;

  
  tmp_44 <= tmp_22 WHEN tmp_3 = '0' ELSE
      tmp_23;

  
  tmp_45 <= tmp_44 WHEN obj_samplesRepetitionObj_flag_3 = '0' ELSE
      tmp_22;

  
  tmp_46 <= tmp_45 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_sym1Done_2;

  obj_samplesRepetitionObj_sym1Done_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_sym1Done_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_sym1Done_3 <= tmp_46;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_sym1Done_reg_process;


  
  tmp_33 <= tmp_21 WHEN obj_samplesRepetitionObj_sym1Done_3 = '0' ELSE
      tmp_19;

  
  tmp_47 <= tmp_33 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_startRead1_3;

  obj_samplesRepetitionObj_startRead1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_startRead1_4 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_startRead1_4 <= tmp_47;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_startRead1_reg_process;


  obj_samplesRepetitionObj_strtRd1Reg <= '0';

  
  tmp_48 <= obj_samplesRepetitionObj_startRead1_4 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_strtRd1Reg;

  obj_samplesRepetitionObj_strtRd1Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_strtRd1Reg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_strtRd1Reg_1 <= tmp_48;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_strtRd1Reg_reg_process;


  obj_samplesRepetitionObj_strtRd1Reg1 <= '0';

  
  tmp_49 <= obj_samplesRepetitionObj_strtRd1Reg_1 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_strtRd1Reg1;

  obj_samplesRepetitionObj_strtRd1Reg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_strtRd1Reg1_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_strtRd1Reg1_1 <= tmp_49;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_strtRd1Reg1_reg_process;


  obj_samplesRepetitionObj_strtRd2Reg <= '0';

  
  tmp_50 <= obj_samplesRepetitionObj_startRead2_4 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_strtRd2Reg;

  obj_samplesRepetitionObj_strtRd2Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_strtRd2Reg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_strtRd2Reg_1 <= tmp_50;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_strtRd2Reg_reg_process;


  obj_samplesRepetitionObj_strtRd2Reg1 <= '0';

  
  tmp_51 <= obj_samplesRepetitionObj_strtRd2Reg_1 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_strtRd2Reg1;

  obj_samplesRepetitionObj_strtRd2Reg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_strtRd2Reg1_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_strtRd2Reg1_1 <= tmp_51;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_strtRd2Reg1_reg_process;


  s_6 <= obj_samplesRepetitionObj_strtRd1Reg1_1 AND ( NOT obj_samplesRepetitionObj_strtRd2Reg1_1);

  s_7 <= ( NOT obj_samplesRepetitionObj_strtRd1Reg1_1) AND obj_samplesRepetitionObj_strtRd2Reg1_1;

  obj_samplesRepetitionObj_dataOutReg_re <= to_signed(16#0000#, 16);
  obj_samplesRepetitionObj_dataOutReg_im <= to_signed(16#0000#, 16);

  varargin_1_re_signed <= signed(varargin_1_re);

  varargin_1_im_signed <= signed(varargin_1_im);

  obj_samplesRepetitionObj_dataInReg_re <= to_signed(16#0000#, 16);
  obj_samplesRepetitionObj_dataInReg_im <= to_signed(16#0000#, 16);

  
  tmp_re <= varargin_1_re_signed WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_dataInReg_re;
  
  tmp_im <= varargin_1_im_signed WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_dataInReg_im;

  obj_samplesRepetitionObj_dataInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_dataInReg_re_1 <= to_signed(16#0000#, 16);
        obj_samplesRepetitionObj_dataInReg_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_dataInReg_re_1 <= tmp_re;
        obj_samplesRepetitionObj_dataInReg_im_1 <= tmp_im;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_dataInReg_reg_process;


  obj_samplesRepetitionObj_dataInReg1_re <= to_signed(16#0000#, 16);
  obj_samplesRepetitionObj_dataInReg1_im <= to_signed(16#0000#, 16);

  
  tmp_re_1 <= obj_samplesRepetitionObj_dataInReg_re_1 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_dataInReg1_re;
  
  tmp_im_1 <= obj_samplesRepetitionObj_dataInReg_im_1 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_dataInReg1_im;

  obj_samplesRepetitionObj_dataInReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_dataInReg1_re_1 <= to_signed(16#0000#, 16);
        obj_samplesRepetitionObj_dataInReg1_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_dataInReg1_re_1 <= tmp_re_1;
        obj_samplesRepetitionObj_dataInReg1_im_1 <= tmp_im_1;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_dataInReg1_reg_process;


  obj_samplesRepetitionObj_wrAddr2 <= to_unsigned(16#000#, 10);

  obj_samplesRepetitionObj_wrAddr2_1 <= to_unsigned(16#000#, 10);

  tmp_52 <= obj_samplesRepetitionObj_wrAddr2_2 + to_unsigned(16#001#, 10);

  
  tmp_53 <= tmp_52 WHEN a0_2 = '0' ELSE
      obj_samplesRepetitionObj_wrAddr2;

  
  tmp_54 <= obj_samplesRepetitionObj_wrAddr2_2 WHEN tmp_3 = '0' ELSE
      tmp_53;

  
  tmp_55 <= obj_samplesRepetitionObj_wrAddr2_2 WHEN obj_samplesRepetitionObj_flag_3 = '0' ELSE
      tmp_54;

  
  tmp_56 <= tmp_55 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_wrAddr2_1;

  obj_samplesRepetitionObj_wrAddr2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_wrAddr2_2 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_wrAddr2_2 <= tmp_56;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_wrAddr2_reg_process;


  s_8 <= obj_samplesRepetitionObj_validInReg_1 AND obj_samplesRepetitionObj_flag_3;

  out_rsvd <= '0';

  out_rsvd_1 <= '1';

  
  tmp_57 <= out_rsvd WHEN s_8 = '0' ELSE
      out_rsvd_1;

  obj_samplesRepetitionObj_wrEn2 <= '0';

  
  tmp_58 <= obj_samplesRepetitionObj_wrEn2_1 WHEN s = '0' ELSE
      tmp_57;

  
  tmp_59 <= tmp_58 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_wrEn2;

  obj_samplesRepetitionObj_wrEn2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_wrEn2_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_wrEn2_1 <= tmp_59;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_wrEn2_reg_process;


  
  s_9 <= '1' WHEN obj_samplesRepetitionObj_inCount_2 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  tmp_60 <= '1' WHEN tmp_29 = to_unsigned(16#000#, 9) ELSE
      '0';

  obj_samplesRepetitionObj_prevFFTLength <= to_unsigned(16#100#, 9);

  
  tmp_61 <= obj_samplesRepetitionObj_prevFFTLength_1 WHEN tmp_60 = '0' ELSE
      obj_samplesRepetitionObj_currFFTLength_1;

  
  tmp_62 <= obj_samplesRepetitionObj_prevFFTLength_1 WHEN s_9 = '0' ELSE
      tmp_61;

  
  tmp_63 <= tmp_62 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_prevFFTLength;

  obj_samplesRepetitionObj_prevFFTLength_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_prevFFTLength_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_prevFFTLength_1 <= tmp_63;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_prevFFTLength_reg_process;


  obj_samplesRepetitionObj_rdAddr2 <= to_unsigned(16#000#, 10);

  obj_samplesRepetitionObj_rdAddr2_1 <= to_unsigned(16#000#, 10);

  obj_samplesRepetitionObj_rdAddr2_2 <= to_unsigned(16#000#, 10);

  
  tmp_65 <= tmp_64 WHEN tmp_60 = '0' ELSE
      obj_samplesRepetitionObj_rdAddr2_1;

  tmp_66 <= obj_samplesRepetitionObj_rdAddr2_3 + to_unsigned(16#001#, 10);

  
  s_10 <= '1' WHEN obj_samplesRepetitionObj_rdAddr2_3 = resize(obj_samplesRepetitionObj_prevFFTLength_1, 10) ELSE
      '0';

  
  tmp_67 <= tmp_66 WHEN s_10 = '0' ELSE
      obj_samplesRepetitionObj_rdAddr2;

  
  tmp_68 <= obj_samplesRepetitionObj_rdAddr2_3 WHEN s_5 = '0' ELSE
      tmp_67;

  
  tmp_64 <= tmp_68 WHEN s_3 = '0' ELSE
      obj_samplesRepetitionObj_rdAddr2_3;

  
  tmp_69 <= tmp_64 WHEN s_9 = '0' ELSE
      tmp_65;

  
  tmp_70 <= tmp_69 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_rdAddr2_2;

  obj_samplesRepetitionObj_rdAddr2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_rdAddr2_3 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_rdAddr2_3 <= tmp_70;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_rdAddr2_reg_process;


  varargout_1_re_signed <= signed(varargout_1_re_1);

  varargout_1_im_signed <= signed(varargout_1_im_1);

  
  tmp_re_2 <= obj_samplesRepetitionObj_dataOutReg_re WHEN s_7 = '0' ELSE
      varargout_1_re_signed;
  
  tmp_im_2 <= obj_samplesRepetitionObj_dataOutReg_im WHEN s_7 = '0' ELSE
      varargout_1_im_signed;

  obj_samplesRepetitionObj_wrAddr1 <= to_unsigned(16#000#, 10);

  obj_samplesRepetitionObj_wrAddr1_1 <= to_unsigned(16#000#, 10);

  tmp_71 <= obj_samplesRepetitionObj_wrAddr1_2 + to_unsigned(16#001#, 10);

  
  tmp_72 <= tmp_71 WHEN a0_1 = '0' ELSE
      obj_samplesRepetitionObj_wrAddr1;

  
  tmp_73 <= obj_samplesRepetitionObj_wrAddr1_2 WHEN tmp_3 = '0' ELSE
      tmp_72;

  
  tmp_74 <= tmp_73 WHEN obj_samplesRepetitionObj_flag_3 = '0' ELSE
      obj_samplesRepetitionObj_wrAddr1_2;

  
  tmp_75 <= tmp_74 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_wrAddr1_1;

  obj_samplesRepetitionObj_wrAddr1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_wrAddr1_2 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_wrAddr1_2 <= tmp_75;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_wrAddr1_reg_process;


  s_11 <= obj_samplesRepetitionObj_validInReg_1 AND ( NOT obj_samplesRepetitionObj_flag_3);

  out_rsvd_2 <= '0';

  out_rsvd_3 <= '1';

  
  tmp_76 <= out_rsvd_2 WHEN s_11 = '0' ELSE
      out_rsvd_3;

  obj_samplesRepetitionObj_wrEn1 <= '0';

  
  tmp_77 <= obj_samplesRepetitionObj_wrEn1_1 WHEN s = '0' ELSE
      tmp_76;

  
  tmp_78 <= tmp_77 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_wrEn1;

  obj_samplesRepetitionObj_wrEn1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_wrEn1_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_wrEn1_1 <= tmp_78;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_wrEn1_reg_process;


  obj_samplesRepetitionObj_rdAddr1 <= to_unsigned(16#000#, 10);

  obj_samplesRepetitionObj_rdAddr1_1 <= to_unsigned(16#000#, 10);

  obj_samplesRepetitionObj_rdAddr1_2 <= to_unsigned(16#000#, 10);

  
  tmp_80 <= tmp_79 WHEN tmp_60 = '0' ELSE
      obj_samplesRepetitionObj_rdAddr1_1;

  tmp_81 <= obj_samplesRepetitionObj_rdAddr1_3 + to_unsigned(16#001#, 10);

  
  s_12 <= '1' WHEN obj_samplesRepetitionObj_rdAddr1_3 = resize(obj_samplesRepetitionObj_prevFFTLength_1, 10) ELSE
      '0';

  
  tmp_82 <= tmp_81 WHEN s_12 = '0' ELSE
      obj_samplesRepetitionObj_rdAddr1;

  
  tmp_79 <= obj_samplesRepetitionObj_rdAddr1_3 WHEN s_3 = '0' ELSE
      tmp_82;

  
  tmp_83 <= tmp_79 WHEN s_9 = '0' ELSE
      tmp_80;

  
  tmp_84 <= tmp_83 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_rdAddr1_2;

  obj_samplesRepetitionObj_rdAddr1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_rdAddr1_3 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_rdAddr1_3 <= tmp_84;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_rdAddr1_reg_process;


  varargout_1_re_signed_1 <= signed(varargout_1_re_2);

  varargout_1_im_signed_1 <= signed(varargout_1_im_2);

  
  tmp_re_3 <= tmp_re_2 WHEN s_6 = '0' ELSE
      varargout_1_re_signed_1;
  
  tmp_im_3 <= tmp_im_2 WHEN s_6 = '0' ELSE
      varargout_1_im_signed_1;

  obj_samplesRepetitionObj_dataOutReg_re_1 <= to_signed(16#0000#, 16);
  obj_samplesRepetitionObj_dataOutReg_im_1 <= to_signed(16#0000#, 16);

  
  tmp_re_4 <= tmp_re_3 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_dataOutReg_re_1;
  
  tmp_im_4 <= tmp_im_3 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_dataOutReg_im_1;

  obj_samplesRepetitionObj_dataOutReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_dataOutReg_re_2 <= to_signed(16#0000#, 16);
        obj_samplesRepetitionObj_dataOutReg_im_2 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_dataOutReg_re_2 <= tmp_re_4;
        obj_samplesRepetitionObj_dataOutReg_im_2 <= tmp_im_4;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_dataOutReg_reg_process;


  obj_samplesRepetitionObj_dataOut_re <= to_signed(16#0000#, 16);
  obj_samplesRepetitionObj_dataOut_im <= to_signed(16#0000#, 16);

  
  tmp_re_5 <= obj_samplesRepetitionObj_dataOutReg_re_2 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_dataOut_re;
  
  tmp_im_5 <= obj_samplesRepetitionObj_dataOutReg_im_2 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_dataOut_im;

  obj_samplesRepetitionObj_dataOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_dataOut_re_1 <= to_signed(16#0000#, 16);
        obj_samplesRepetitionObj_dataOut_im_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_dataOut_re_1 <= tmp_re_5;
        obj_samplesRepetitionObj_dataOut_im_1 <= tmp_im_5;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_dataOut_reg_process;


  varargout_1_re <= std_logic_vector(obj_samplesRepetitionObj_dataOut_re_1);

  varargout_1_im <= std_logic_vector(obj_samplesRepetitionObj_dataOut_im_1);

  obj_samplesRepetitionObj_validOutReg <= '0';

  obj_samplesRepetitionObj_validOutReg_1 <= '1';

  
  tmp_85 <= obj_samplesRepetitionObj_validOutReg WHEN s_5 = '0' ELSE
      obj_samplesRepetitionObj_validOutReg_1;

  obj_samplesRepetitionObj_validOutReg_2 <= '1';

  
  tmp_86 <= tmp_85 WHEN s_3 = '0' ELSE
      obj_samplesRepetitionObj_validOutReg_2;

  obj_samplesRepetitionObj_validOutReg_3 <= '0';

  
  tmp_87 <= tmp_86 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_validOutReg_3;

  obj_samplesRepetitionObj_validOutReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_validOutReg_4 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_validOutReg_4 <= tmp_87;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_validOutReg_reg_process;


  obj_samplesRepetitionObj_validOutReg1 <= '0';

  
  tmp_88 <= obj_samplesRepetitionObj_validOutReg_4 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_validOutReg1;

  obj_samplesRepetitionObj_validOutReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_validOutReg1_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_validOutReg1_1 <= tmp_88;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_validOutReg1_reg_process;


  obj_samplesRepetitionObj_validOutReg2 <= '0';

  
  tmp_89 <= obj_samplesRepetitionObj_validOutReg1_1 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_validOutReg2;

  obj_samplesRepetitionObj_validOutReg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_validOutReg2_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_validOutReg2_1 <= tmp_89;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_validOutReg2_reg_process;


  obj_samplesRepetitionObj_validOut <= '0';

  
  tmp_90 <= obj_samplesRepetitionObj_validOutReg2_1 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_validOut;

  obj_samplesRepetitionObj_validOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_validOut_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_validOut_1 <= tmp_90;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_validOut_reg_process;


  obj_samplesRepetitionObj_FFTLengthReg <= to_unsigned(16#100#, 9);

  
  tmp_91 <= obj_samplesRepetitionObj_FFTLengthReg_1 WHEN s_1 = '0' ELSE
      obj_samplesRepetitionObj_FFTLenReg_2;

  
  tmp_92 <= tmp_91 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_FFTLengthReg;

  obj_samplesRepetitionObj_FFTLengthReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_FFTLengthReg_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_FFTLengthReg_1 <= tmp_92;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_FFTLengthReg_reg_process;


  obj_samplesRepetitionObj_FFTLengthRegOut <= to_unsigned(16#100#, 9);

  
  tmp_93 <= obj_samplesRepetitionObj_FFTLengthRegOut_1 WHEN tmp_60 = '0' ELSE
      obj_samplesRepetitionObj_FFTLengthReg_1;

  
  tmp_94 <= obj_samplesRepetitionObj_FFTLengthRegOut_1 WHEN s_9 = '0' ELSE
      tmp_93;

  
  tmp_95 <= tmp_94 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_FFTLengthRegOut;

  obj_samplesRepetitionObj_FFTLengthRegOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_FFTLengthRegOut_1 <= to_unsigned(16#100#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_FFTLengthRegOut_1 <= tmp_95;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_FFTLengthRegOut_reg_process;


  varargout_3 <= std_logic_vector(obj_samplesRepetitionObj_FFTLengthRegOut_1);

  varargin_4_unsigned <= unsigned(varargin_4);

  tmp_96 <= varargin_4_unsigned(8 DOWNTO 0);

  obj_samplesRepetitionObj_CPLengthReg <= to_unsigned(16#010#, 9);

  
  tmp_97 <= obj_samplesRepetitionObj_CPLengthReg_1 WHEN s_1 = '0' ELSE
      tmp_96;

  
  tmp_98 <= tmp_97 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_CPLengthReg;

  obj_samplesRepetitionObj_CPLengthReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_CPLengthReg_1 <= to_unsigned(16#010#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_CPLengthReg_1 <= tmp_98;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_CPLengthReg_reg_process;


  obj_samplesRepetitionObj_CPLengthRegOut <= to_unsigned(16#010#, 9);

  
  tmp_99 <= obj_samplesRepetitionObj_CPLengthRegOut_1 WHEN tmp_60 = '0' ELSE
      obj_samplesRepetitionObj_CPLengthReg_1;

  
  tmp_100 <= obj_samplesRepetitionObj_CPLengthRegOut_1 WHEN s_9 = '0' ELSE
      tmp_99;

  
  tmp_101 <= tmp_100 WHEN obj_samplesRepetitionObj_resetSig_1 = '0' ELSE
      obj_samplesRepetitionObj_CPLengthRegOut;

  obj_samplesRepetitionObj_CPLengthRegOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_samplesRepetitionObj_CPLengthRegOut_1 <= to_unsigned(16#010#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_samplesRepetitionObj_CPLengthRegOut_1 <= tmp_101;
      END IF;
    END IF;
  END PROCESS obj_samplesRepetitionObj_CPLengthRegOut_reg_process;


  varargout_4 <= std_logic_vector(obj_samplesRepetitionObj_CPLengthRegOut_1);

  varargout_2 <= obj_samplesRepetitionObj_validOut_1;

END rtl;

