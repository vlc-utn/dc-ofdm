-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/full_tx_ip_src_bits_selector.vhd
-- Created: 2024-08-11 18:37:15
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_tx_ip_src_bits_selector
-- Source Path: HDLTx/full_tx/store_frame_in_ram/read_frame_from_ram/bits_selector
-- Hierarchy Level: 3
-- Model version: 4.91
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_tx_ip_src_bits_selector IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        rd_addr                           :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        bits_per_subcarrier               :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        bits_per_subcarrier_out           :   OUT   std_logic_vector(3 DOWNTO 0)  -- ufix4
        );
END full_tx_ip_src_bits_selector;


ARCHITECTURE rtl OF full_tx_ip_src_bits_selector IS

  -- Component Declarations
  COMPONENT full_tx_ip_src_Compare_To_Constant_block
    PORT( u                               :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT full_tx_ip_src_Compare_To_Constant1
    PORT( u                               :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT full_tx_ip_src_Compare_To_Constant2
    PORT( u                               :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT full_tx_ip_src_one_hot_coder
    PORT( preamble                        :   IN    std_logic;
          channel                         :   IN    std_logic;
          header                          :   IN    std_logic;
          bits_per_subcarrier_select      :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_tx_ip_src_Compare_To_Constant_block
    USE ENTITY work.full_tx_ip_src_Compare_To_Constant_block(rtl);

  FOR ALL : full_tx_ip_src_Compare_To_Constant1
    USE ENTITY work.full_tx_ip_src_Compare_To_Constant1(rtl);

  FOR ALL : full_tx_ip_src_Compare_To_Constant2
    USE ENTITY work.full_tx_ip_src_Compare_To_Constant2(rtl);

  FOR ALL : full_tx_ip_src_one_hot_coder
    USE ENTITY work.full_tx_ip_src_one_hot_coder(rtl);

  -- Signals
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL Compare_To_Constant1_out1        : std_logic;
  SIGNAL Compare_To_Constant2_out1        : std_logic;
  SIGNAL one_hot_coder_out1               : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL one_hot_coder_out1_unsigned      : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Delay_out1                       : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Constant_out1                    : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Constant1_out1                   : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Constant2_out1                   : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL bits_per_subcarrier_unsigned     : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Multiport_Switch_out1            : unsigned(3 DOWNTO 0);  -- ufix4

BEGIN
  u_Compare_To_Constant : full_tx_ip_src_Compare_To_Constant_block
    PORT MAP( u => rd_addr,  -- uint16
              y => Compare_To_Constant_out1
              );

  u_Compare_To_Constant1 : full_tx_ip_src_Compare_To_Constant1
    PORT MAP( u => rd_addr,  -- uint16
              y => Compare_To_Constant1_out1
              );

  u_Compare_To_Constant2 : full_tx_ip_src_Compare_To_Constant2
    PORT MAP( u => rd_addr,  -- uint16
              y => Compare_To_Constant2_out1
              );

  u_one_hot_coder : full_tx_ip_src_one_hot_coder
    PORT MAP( preamble => Compare_To_Constant_out1,
              channel => Compare_To_Constant1_out1,
              header => Compare_To_Constant2_out1,
              bits_per_subcarrier_select => one_hot_coder_out1  -- ufix2
              );

  one_hot_coder_out1_unsigned <= unsigned(one_hot_coder_out1);

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay_out1 <= to_unsigned(16#0#, 2);
      ELSIF enb_1_2_0 = '1' THEN
        Delay_out1 <= one_hot_coder_out1_unsigned;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Constant_out1 <= to_unsigned(16#1#, 4);

  Constant1_out1 <= to_unsigned(16#1#, 4);

  Constant2_out1 <= to_unsigned(16#2#, 4);

  bits_per_subcarrier_unsigned <= unsigned(bits_per_subcarrier);

  
  Multiport_Switch_out1 <= Constant_out1 WHEN Delay_out1 = to_unsigned(16#0#, 2) ELSE
      Constant1_out1 WHEN Delay_out1 = to_unsigned(16#1#, 2) ELSE
      Constant2_out1 WHEN Delay_out1 = to_unsigned(16#2#, 2) ELSE
      bits_per_subcarrier_unsigned;

  bits_per_subcarrier_out <= std_logic_vector(Multiport_Switch_out1);

END rtl;

