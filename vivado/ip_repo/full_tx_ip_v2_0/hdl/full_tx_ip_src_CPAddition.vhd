-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/full_tx_ip_src_CPAddition.vhd
-- Created: 2024-08-11 18:37:16
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_tx_ip_src_CPAddition
-- Source Path: 
-- Hierarchy Level: 4
-- Model version: 4.91
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_tx_ip_src_full_tx_pac.ALL;

ENTITY full_tx_ip_src_CPAddition IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        varargin_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargin_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargin_2                        :   IN    std_logic;
        varargin_3                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargin_4                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargout_1_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargout_1_im                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargout_2                       :   OUT   std_logic
        );
END full_tx_ip_src_CPAddition;


ARCHITECTURE rtl OF full_tx_ip_src_CPAddition IS

  -- Component Declarations
  COMPONENT full_tx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          wr_din_re                       :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_din_im                       :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          dout_re                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          dout_im                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_tx_ip_src_SimpleDualPortRAM_generic_block
    USE ENTITY work.full_tx_ip_src_SimpleDualPortRAM_generic_block(rtl);

  -- Signals
  SIGNAL varargout_2_1                    : std_logic;
  SIGNAL obj_CPAdditionObj_validInReg     : std_logic;
  SIGNAL obj_CPAdditionObj_inCount        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL varargin_3_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp                              : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenInReg    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_1                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_inCount_1      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s                                : std_logic;
  SIGNAL obj_CPAdditionObj_FFTLenMinusVecLen : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_2                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_3                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_4                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0                               : std_logic;
  SIGNAL tmp_5                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_6                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_RAM2WriteSelect : std_logic;
  SIGNAL tmp_7                            : std_logic;
  SIGNAL tmp_8                            : std_logic;
  SIGNAL tmp_9                            : std_logic;
  SIGNAL s_1                              : std_logic;
  SIGNAL out_rsvd                         : std_logic;
  SIGNAL out_rsvd_1                       : std_logic;
  SIGNAL tmp_10                           : std_logic;
  SIGNAL obj_CPAdditionObj_writeEnbRAM1   : std_logic;
  SIGNAL s_2                              : std_logic;
  SIGNAL out_rsvd_2                       : std_logic;
  SIGNAL out_rsvd_3                       : std_logic;
  SIGNAL tmp_11                           : std_logic;
  SIGNAL obj_CPAdditionObj_writeEnbRAM2   : std_logic;
  SIGNAL obj_CPAdditionObj_sym2Done       : std_logic;
  SIGNAL obj_CPAdditionObj_inCountReg     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0_1                             : std_logic;
  SIGNAL obj_CPAdditionObj_sym2Done_1     : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2     : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2_1   : std_logic;
  SIGNAL obj_CPAdditionObj_outCount       : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTSampledAtIn : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_12                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_13                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL varargin_4_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_14                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_CPLenInReg     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_CPSampledAtIn  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_15                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_16                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_17                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCount_1     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_startRead2_2   : std_logic;
  SIGNAL obj_CPAdditionObj_sym1Done       : std_logic;
  SIGNAL a0_2                             : std_logic;
  SIGNAL obj_CPAdditionObj_sym1Done_1     : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1     : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1_1   : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1_2   : std_logic;
  SIGNAL tmp_18                           : std_logic;
  SIGNAL tmp_19                           : std_logic;
  SIGNAL a0_3                             : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1_3   : std_logic;
  SIGNAL tmp_20                           : std_logic;
  SIGNAL s_3                              : std_logic;
  SIGNAL tmp_21                           : std_logic;
  SIGNAL tmp_22                           : std_logic;
  SIGNAL tmp_23                           : std_logic;
  SIGNAL obj_CPAdditionObj_outCount_2     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_24                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_25                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_26                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_4                              : std_logic;
  SIGNAL tmp_27                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_28                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0_4                             : std_logic;
  SIGNAL tmp_29                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_5                              : std_logic;
  SIGNAL tmp_30                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_31                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_startRead2_3   : std_logic;
  SIGNAL tmp_32                           : std_logic;
  SIGNAL tmp_33                           : std_logic;
  SIGNAL tmp_34                           : std_logic;
  SIGNAL tmp_35                           : std_logic;
  SIGNAL tmp_36                           : std_logic;
  SIGNAL tmp_37                           : std_logic;
  SIGNAL obj_CPAdditionObj_sym2Done_2     : std_logic;
  SIGNAL tmp_38                           : std_logic;
  SIGNAL tmp_39                           : std_logic;
  SIGNAL tmp_40                           : std_logic;
  SIGNAL tmp_41                           : std_logic;
  SIGNAL obj_CPAdditionObj_sym1Done_2     : std_logic;
  SIGNAL tmp_42                           : std_logic;
  SIGNAL tmp_43                           : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1Reg  : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2Reg  : std_logic;
  SIGNAL tmp_44                           : std_logic;
  SIGNAL obj_CPAdditionObj_startOutputReg_reg_reg : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL obj_CPAdditionObj_startOutputReg : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput     : std_logic;
  SIGNAL obj_CPAdditionObj_outCountReg2_reg_reg : vector_of_unsigned9(0 TO 1);  -- ufix9 [2]
  SIGNAL obj_CPAdditionObj_outCountReg2   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_outCountReg3   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reduced_reg                      : vector_of_unsigned9(0 TO 1);  -- ufix9 [2]
  SIGNAL tmp_45                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_6                              : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData : std_logic;
  SIGNAL obj_CPAdditionObj_startRead1Reg2 : std_logic;
  SIGNAL obj_CPAdditionObj_startRead2Reg2 : std_logic;
  SIGNAL s_7                              : std_logic;
  SIGNAL s_8                              : std_logic;
  SIGNAL a0_5                             : std_logic;
  SIGNAL s_9                              : std_logic;
  SIGNAL s_10                             : std_logic;
  SIGNAL obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_46                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_47                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL s_11                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1 : std_logic;
  SIGNAL s_12                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_1 : std_logic;
  SIGNAL s_13                             : std_logic;
  SIGNAL s_14                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_2 : std_logic;
  SIGNAL s_15                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_3 : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_4 : std_logic;
  SIGNAL tmp_48                           : std_logic;
  SIGNAL tmp_49                           : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM1_5 : std_logic;
  SIGNAL tmp_50                           : std_logic;
  SIGNAL tmp_51                           : std_logic;
  SIGNAL tmp_52                           : std_logic;
  SIGNAL tmp_53                           : std_logic;
  SIGNAL tmp_54                           : std_logic;
  SIGNAL tmp_55                           : std_logic;
  SIGNAL tmp_56                           : std_logic;
  SIGNAL s_16                             : std_logic;
  SIGNAL tmp_57                           : std_logic;
  SIGNAL s_17                             : std_logic;
  SIGNAL s_18                             : std_logic;
  SIGNAL s_19                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2 : std_logic;
  SIGNAL s_20                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_1 : std_logic;
  SIGNAL s_21                             : std_logic;
  SIGNAL s_22                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_2 : std_logic;
  SIGNAL s_23                             : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_3 : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_4 : std_logic;
  SIGNAL tmp_58                           : std_logic;
  SIGNAL tmp_59                           : std_logic;
  SIGNAL obj_CPAdditionObj_storeInitReadAddrRAM2_5 : std_logic;
  SIGNAL tmp_60                           : std_logic;
  SIGNAL tmp_61                           : std_logic;
  SIGNAL tmp_62                           : std_logic;
  SIGNAL tmp_63                           : std_logic;
  SIGNAL tmp_64                           : std_logic;
  SIGNAL tmp_65                           : std_logic;
  SIGNAL tmp_66                           : std_logic;
  SIGNAL s_24                             : std_logic;
  SIGNAL tmp_67                           : std_logic;
  SIGNAL tmp_68                           : std_logic;
  SIGNAL tmp_69                           : std_logic;
  SIGNAL tmp_70                           : std_logic;  -- ufix1
  SIGNAL p440tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_71                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_72                           : std_logic;  -- ufix1
  SIGNAL p452tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_73                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_numSamp        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_74                           : std_logic;  -- ufix1
  SIGNAL p498tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_75                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_76                           : std_logic;  -- ufix1
  SIGNAL p510tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_77                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_numSamp_1      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_numSamp_2      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_78                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_79                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_80                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_81                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_82                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_83                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_84                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_85                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_86                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_87                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_88                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_89                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_90                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_91                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_92                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_93                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL a0_6                             : std_logic;
  SIGNAL obj_CPAdditionObj_numCurrVecSamples : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_94                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_95                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_96                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_97                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_idxpos         : std_logic;  -- ufix1
  SIGNAL tmp_98                           : std_logic;  -- ufix1
  SIGNAL p437tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p437tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_99                           : std_logic;  -- ufix1
  SIGNAL p449tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p449tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_idxpos2Reg     : std_logic;  -- ufix1
  SIGNAL tmp_100                          : std_logic;  -- ufix1
  SIGNAL p478tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_idxpos2Reg_1   : std_logic;  -- ufix1
  SIGNAL tmp_101                          : std_logic;  -- ufix1
  SIGNAL tmp_102                          : std_logic;  -- ufix1
  SIGNAL tmp_103                          : std_logic;  -- ufix1
  SIGNAL tmp_104                          : std_logic;  -- ufix1
  SIGNAL tmp_105                          : std_logic;  -- ufix1
  SIGNAL tmp_106                          : std_logic;  -- ufix1
  SIGNAL tmp_107                          : std_logic;  -- ufix1
  SIGNAL tmp_108                          : std_logic;  -- ufix1
  SIGNAL tmp_109                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos2Reg2    : std_logic;  -- ufix1
  SIGNAL tmp_110                          : std_logic;  -- ufix1
  SIGNAL p495tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p495tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_111                          : std_logic;  -- ufix1
  SIGNAL p507tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p507tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_idxpos1Reg     : std_logic;  -- ufix1
  SIGNAL tmp_112                          : std_logic;  -- ufix1
  SIGNAL p536tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_idxpos1Reg_1   : std_logic;  -- ufix1
  SIGNAL tmp_113                          : std_logic;  -- ufix1
  SIGNAL tmp_114                          : std_logic;  -- ufix1
  SIGNAL tmp_115                          : std_logic;  -- ufix1
  SIGNAL tmp_116                          : std_logic;  -- ufix1
  SIGNAL tmp_117                          : std_logic;  -- ufix1
  SIGNAL tmp_118                          : std_logic;  -- ufix1
  SIGNAL tmp_119                          : std_logic;  -- ufix1
  SIGNAL tmp_120                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos1Reg2    : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_carryForward   : std_logic;
  SIGNAL obj_CPAdditionObj_carryForward_1 : std_logic;
  SIGNAL obj_CPAdditionObj_carryForward_2 : std_logic;
  SIGNAL obj_CPAdditionObj_carryForward_3 : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_1 : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_2 : std_logic;
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_3 : std_logic;
  SIGNAL s_25                             : std_logic;
  SIGNAL tmp_121                          : std_logic;
  SIGNAL obj_CPAdditionObj_idxpos_1       : std_logic;
  SIGNAL tmp_122                          : std_logic;
  SIGNAL obj_CPAdditionObj_idxpos_2       : std_logic;  -- ufix1
  SIGNAL tmp_123                          : std_logic;  -- ufix1
  SIGNAL p405tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p405tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_124                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_125                          : std_logic;  -- ufix1
  SIGNAL p404tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p404tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_126                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_127                          : std_logic;  -- ufix1
  SIGNAL tmp_128                          : std_logic;  -- ufix1
  SIGNAL tmp_129                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_prevSymbStartIndex : std_logic;  -- ufix1
  SIGNAL tmp_130                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_carryForward_4 : std_logic;
  SIGNAL tmp_131                          : std_logic;  -- ufix1
  SIGNAL tmp_132                          : std_logic;  -- ufix1
  SIGNAL tmp_133                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_idxpos_3       : std_logic;  -- ufix1
  SIGNAL p370obj_CPAdditionObj_idxpos_cast : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_134                          : std_logic;  -- ufix1
  SIGNAL tmp_135                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_136                          : std_logic;  -- ufix1
  SIGNAL p354tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_137                          : std_logic;
  SIGNAL tmp_138                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_hasPrevSymbData_4 : std_logic;
  SIGNAL tmp_139                          : std_logic;  -- ufix1
  SIGNAL tmp_140                          : std_logic;  -- ufix1
  SIGNAL tmp_141                          : std_logic;  -- ufix1
  SIGNAL tmp_142                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_numPrevVecSamples : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_143                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_144                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_145                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_146                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL tmp_147                          : std_logic;
  SIGNAL tmp_148                          : std_logic;
  SIGNAL tmp_149                          : std_logic;
  SIGNAL tmp_150                          : std_logic;
  SIGNAL tmp_151                          : std_logic;
  SIGNAL tmp_152                          : std_logic;
  SIGNAL tmp_153                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_1   : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_2   : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_3   : std_logic;
  SIGNAL tmp_154                          : std_logic;
  SIGNAL tmp_155                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_4   : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_5   : std_logic;
  SIGNAL tmp_156                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_6   : std_logic;
  SIGNAL tmp_157                          : std_logic;
  SIGNAL tmp_158                          : std_logic;
  SIGNAL tmp_159                          : std_logic;
  SIGNAL obj_CPAdditionObj_sendOutput_7   : std_logic;
  SIGNAL obj_CPAdditionObj_dataOutReg_re  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOutReg_im  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_160                          : std_logic;  -- ufix1
  SIGNAL p360tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p360tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_161                          : std_logic;  -- ufix1
  SIGNAL tmp_162                          : std_logic;  -- ufix1
  SIGNAL p362tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p362tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_163                          : std_logic;  -- ufix1
  SIGNAL tmp_164                          : std_logic;  -- ufix1
  SIGNAL tmp_165                          : std_logic;  -- ufix1
  SIGNAL tmp_166                          : std_logic;  -- ufix1
  SIGNAL obj_CPAdditionObj_dataVec1Samples : std_logic;  -- ufix1
  SIGNAL tmp_167                          : std_logic;  -- ufix1
  SIGNAL s_26                             : std_logic;
  SIGNAL p309_cast                        : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_27                             : std_logic;
  SIGNAL s_28                             : std_logic;
  SIGNAL varargin_1_re_signed             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargin_1_im_signed             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg1_reg_reg_re : vector_of_signed16(0 TO 1);  -- sfix16_En14 [2]
  SIGNAL obj_CPAdditionObj_dataInReg1_reg_reg_im : vector_of_signed16(0 TO 1);  -- sfix16_En14 [2]
  SIGNAL obj_CPAdditionObj_dataInReg1_re  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataInReg1_im  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_writeAddrRAM2  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_writeAddrRAM2_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_168                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_169                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_170                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_171                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_172                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_FFTLengthAtOutMinusVecLen : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL obj_CPAdditionObj_readAddrRAM2   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2Reg : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2Reg_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2Reg_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_173                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_174                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_175                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_176                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_177                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_178                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_179                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_180                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_181                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_182                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_183                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM2_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_184                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL a0_7                             : std_logic;
  SIGNAL tmp_185                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_186                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_187                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargout_1_re_1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_im_1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_re_signed            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargout_1_im_signed            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_writeAddrRAM1  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_writeAddrRAM1_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_188                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_189                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_190                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1Reg : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1Reg_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1Reg_2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_191                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_192                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_193                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_194                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_195                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_196                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_197                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_198                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_199                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_200                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_readAddrRAM1_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_201                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL a0_8                             : std_logic;
  SIGNAL tmp_202                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_203                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargout_1_re_2                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_im_2                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL varargout_1_re_signed_1          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargout_1_im_signed_1          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_1                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_1                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_2                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_2                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVecReg_re  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVecReg_im  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_3                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_3                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_4                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_4                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_5                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_5                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_6                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_6                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_7                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_7                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec2_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec2_im    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_8                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_8                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL s_29                             : std_logic;
  SIGNAL p357_cast                        : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_204                          : std_logic;
  SIGNAL p359tmp_sub_cast                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p359tmp_sub_temp                 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p359tmp_cast                     : std_logic;  -- ufix1
  SIGNAL p359tmp_cast_1                   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPAdditionObj_prevSymb_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevSymb_im    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_9                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_9                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_10                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_10                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_11                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_11                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_12                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_12                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevVecData_re : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_prevVecData_im : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_13                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_13                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_14                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_14                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_15                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_15                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_16                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_16                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_17                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_17                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_18                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_18                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_19                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_19                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_20                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_20                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_21                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_21                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_22                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_22                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_23                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_23                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_24                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_24                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec1_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataVec1_im    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_25                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_25                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_26                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_26                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_re_27                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_im_27                        : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOut_reg_reg_re : vector_of_signed16(0 TO 1);  -- sfix16_En14 [2]
  SIGNAL obj_CPAdditionObj_dataOut_reg_reg_im : vector_of_signed16(0 TO 1);  -- sfix16_En14 [2]
  SIGNAL obj_CPAdditionObj_dataOut_re     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_dataOut_im     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_CPAdditionObj_validOutReg    : std_logic;
  SIGNAL obj_CPAdditionObj_validOutReg_1  : std_logic;
  SIGNAL tmp_205                          : std_logic;
  SIGNAL obj_CPAdditionObj_validOut_reg_reg : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL obj_CPAdditionObj_validOut       : std_logic;

BEGIN
  u_simpleDualPortRam : full_tx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC MAP( AddrWidth => 10,
                 DataWidth => 16
                 )
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              wr_din_re => std_logic_vector(obj_CPAdditionObj_dataInReg1_re),
              wr_din_im => std_logic_vector(obj_CPAdditionObj_dataInReg1_im),
              wr_addr => std_logic_vector(obj_CPAdditionObj_writeAddrRAM2_1),
              wr_en => obj_CPAdditionObj_writeEnbRAM2,
              rd_addr => std_logic_vector(obj_CPAdditionObj_readAddrRAM2_1),
              dout_re => varargout_1_re_1,
              dout_im => varargout_1_im_1
              );

  u_simpleDualPortRam_1 : full_tx_ip_src_SimpleDualPortRAM_generic_block
    GENERIC MAP( AddrWidth => 10,
                 DataWidth => 16
                 )
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              wr_din_re => std_logic_vector(obj_CPAdditionObj_dataInReg1_re),
              wr_din_im => std_logic_vector(obj_CPAdditionObj_dataInReg1_im),
              wr_addr => std_logic_vector(obj_CPAdditionObj_writeAddrRAM1_1),
              wr_en => obj_CPAdditionObj_writeEnbRAM1,
              rd_addr => std_logic_vector(obj_CPAdditionObj_readAddrRAM1_1),
              dout_re => varargout_1_re_2,
              dout_im => varargout_1_im_2
              );

  varargout_2_1 <= varargin_2;

  obj_CPAdditionObj_validInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_validInReg <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_validInReg <= varargout_2_1;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_validInReg_reg_process;


  obj_CPAdditionObj_inCount <= to_unsigned(16#000#, 9);

  varargin_3_unsigned <= unsigned(varargin_3);

  tmp <= varargin_3_unsigned(8 DOWNTO 0);

  obj_CPAdditionObj_FFTLenInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenInReg <= to_unsigned(16#040#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenInReg <= tmp;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenInReg_reg_process;


  tmp_1 <= obj_CPAdditionObj_FFTLenInReg - to_unsigned(16#001#, 9);

  
  s <= '1' WHEN obj_CPAdditionObj_inCount_1 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  tmp_2 <= obj_CPAdditionObj_FFTLenMinusVecLen WHEN s = '0' ELSE
      tmp_1;

  obj_CPAdditionObj_FFTLenMinusVecLen_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenMinusVecLen <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenMinusVecLen <= tmp_3;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenMinusVecLen_reg_process;


  
  tmp_3 <= obj_CPAdditionObj_FFTLenMinusVecLen WHEN obj_CPAdditionObj_validInReg = '0' ELSE
      tmp_2;

  tmp_4 <= obj_CPAdditionObj_inCount_1 + to_unsigned(16#001#, 9);

  
  tmp_5 <= tmp_4 WHEN a0 = '0' ELSE
      obj_CPAdditionObj_inCount;

  
  tmp_6 <= obj_CPAdditionObj_inCount_1 WHEN obj_CPAdditionObj_validInReg = '0' ELSE
      tmp_5;

  obj_CPAdditionObj_inCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_inCount_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_inCount_1 <= tmp_6;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_inCount_reg_process;


  
  a0 <= '1' WHEN obj_CPAdditionObj_inCount_1 = tmp_3 ELSE
      '0';

  tmp_7 <=  NOT obj_CPAdditionObj_RAM2WriteSelect;

  
  tmp_8 <= obj_CPAdditionObj_RAM2WriteSelect WHEN a0 = '0' ELSE
      tmp_7;

  
  tmp_9 <= obj_CPAdditionObj_RAM2WriteSelect WHEN obj_CPAdditionObj_validInReg = '0' ELSE
      tmp_8;

  obj_CPAdditionObj_RAM2WriteSelect_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_RAM2WriteSelect <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_RAM2WriteSelect <= tmp_9;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_RAM2WriteSelect_reg_process;


  s_1 <= obj_CPAdditionObj_validInReg AND ( NOT obj_CPAdditionObj_RAM2WriteSelect);

  out_rsvd <= '0';

  out_rsvd_1 <= '1';

  
  tmp_10 <= out_rsvd WHEN s_1 = '0' ELSE
      out_rsvd_1;

  obj_CPAdditionObj_writeEnbRAM1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_writeEnbRAM1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_writeEnbRAM1 <= tmp_10;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_writeEnbRAM1_reg_process;


  s_2 <= obj_CPAdditionObj_validInReg AND obj_CPAdditionObj_RAM2WriteSelect;

  out_rsvd_2 <= '0';

  out_rsvd_3 <= '1';

  
  tmp_11 <= out_rsvd_2 WHEN s_2 = '0' ELSE
      out_rsvd_3;

  obj_CPAdditionObj_writeEnbRAM2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_writeEnbRAM2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_writeEnbRAM2 <= tmp_11;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_writeEnbRAM2_reg_process;


  obj_CPAdditionObj_sym2Done <= '0';

  obj_CPAdditionObj_inCountReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_inCountReg <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_inCountReg <= obj_CPAdditionObj_inCount_1;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_inCountReg_reg_process;


  
  a0_1 <= '1' WHEN obj_CPAdditionObj_inCountReg = obj_CPAdditionObj_FFTLenMinusVecLen ELSE
      '0';

  obj_CPAdditionObj_sym2Done_1 <= '1';

  obj_CPAdditionObj_startRead2 <= '1';

  obj_CPAdditionObj_startRead2_1 <= '0';

  obj_CPAdditionObj_outCount <= to_unsigned(16#000#, 9);

  
  tmp_12 <= obj_CPAdditionObj_FFTSampledAtIn WHEN s = '0' ELSE
      obj_CPAdditionObj_FFTLenInReg;

  
  tmp_13 <= obj_CPAdditionObj_FFTSampledAtIn WHEN obj_CPAdditionObj_validInReg = '0' ELSE
      tmp_12;

  obj_CPAdditionObj_FFTSampledAtIn_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTSampledAtIn <= to_unsigned(16#040#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTSampledAtIn <= tmp_13;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTSampledAtIn_reg_process;


  varargin_4_unsigned <= unsigned(varargin_4);

  tmp_14 <= varargin_4_unsigned(8 DOWNTO 0);

  obj_CPAdditionObj_CPLenInReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_CPLenInReg <= to_unsigned(16#010#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_CPLenInReg <= tmp_14;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_CPLenInReg_reg_process;


  
  tmp_15 <= obj_CPAdditionObj_CPSampledAtIn WHEN s = '0' ELSE
      obj_CPAdditionObj_CPLenInReg;

  
  tmp_16 <= obj_CPAdditionObj_CPSampledAtIn WHEN obj_CPAdditionObj_validInReg = '0' ELSE
      tmp_15;

  obj_CPAdditionObj_CPSampledAtIn_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_CPSampledAtIn <= to_unsigned(16#010#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_CPSampledAtIn <= tmp_16;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_CPSampledAtIn_reg_process;


  tmp_17 <= obj_CPAdditionObj_FFTSampledAtIn + obj_CPAdditionObj_CPSampledAtIn;

  obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen <= tmp_17 - to_unsigned(16#001#, 9);

  obj_CPAdditionObj_outCount_1 <= to_unsigned(16#000#, 9);

  obj_CPAdditionObj_startRead2_2 <= '0';

  obj_CPAdditionObj_sym1Done <= '0';

  
  a0_2 <= '1' WHEN obj_CPAdditionObj_inCountReg = obj_CPAdditionObj_FFTLenMinusVecLen ELSE
      '0';

  obj_CPAdditionObj_sym1Done_1 <= '1';

  obj_CPAdditionObj_startRead1 <= '0';

  obj_CPAdditionObj_startRead1_1 <= '1';

  obj_CPAdditionObj_startRead1_2 <= '0';

  
  tmp_19 <= obj_CPAdditionObj_startRead1_1 WHEN tmp_18 = '0' ELSE
      obj_CPAdditionObj_startRead1_2;

  
  tmp_20 <= obj_CPAdditionObj_startRead1_3 WHEN a0_3 = '0' ELSE
      obj_CPAdditionObj_startRead1;

  
  tmp_21 <= obj_CPAdditionObj_startRead1_3 WHEN s_3 = '0' ELSE
      tmp_20;

  
  tmp_23 <= tmp_22 WHEN a0_2 = '0' ELSE
      obj_CPAdditionObj_sym1Done_1;

  tmp_24 <= obj_CPAdditionObj_outCount_2 + to_unsigned(16#001#, 9);

  reduced_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        tmp_26 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        tmp_26 <= tmp_25;
      END IF;
    END IF;
  END PROCESS reduced_process;


  
  s_4 <= '1' WHEN obj_CPAdditionObj_outCount_2 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  tmp_25 <= tmp_26 WHEN s_4 = '0' ELSE
      obj_CPAdditionObj_FFTLenPlusCPLenMinusVecLen;

  
  a0_3 <= '1' WHEN obj_CPAdditionObj_outCount_2 >= tmp_25 ELSE
      '0';

  
  tmp_27 <= tmp_24 WHEN a0_3 = '0' ELSE
      obj_CPAdditionObj_outCount_1;

  tmp_28 <= obj_CPAdditionObj_outCount_2 + to_unsigned(16#001#, 9);

  
  tmp_29 <= tmp_28 WHEN a0_4 = '0' ELSE
      obj_CPAdditionObj_outCount;

  
  tmp_30 <= obj_CPAdditionObj_outCount_2 WHEN s_5 = '0' ELSE
      tmp_29;

  
  tmp_31 <= tmp_30 WHEN s_3 = '0' ELSE
      tmp_27;

  obj_CPAdditionObj_outCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_outCount_2 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_outCount_2 <= tmp_31;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_outCount_reg_process;


  
  a0_4 <= '1' WHEN obj_CPAdditionObj_outCount_2 >= tmp_25 ELSE
      '0';

  
  tmp_32 <= obj_CPAdditionObj_startRead2_3 WHEN a0_4 = '0' ELSE
      obj_CPAdditionObj_startRead2_2;

  s_5 <= obj_CPAdditionObj_startRead2_3 AND ( NOT obj_CPAdditionObj_startRead1_3);

  
  tmp_33 <= obj_CPAdditionObj_startRead2_3 WHEN s_5 = '0' ELSE
      tmp_32;

  
  tmp_35 <= obj_CPAdditionObj_startRead2 WHEN tmp_34 = '0' ELSE
      obj_CPAdditionObj_startRead2_1;

  
  tmp_37 <= tmp_36 WHEN a0_1 = '0' ELSE
      obj_CPAdditionObj_sym2Done_1;

  
  tmp_38 <= obj_CPAdditionObj_sym2Done WHEN tmp_34 = '0' ELSE
      obj_CPAdditionObj_sym2Done_2;

  
  tmp_36 <= obj_CPAdditionObj_sym2Done_2 WHEN obj_CPAdditionObj_sym2Done_2 = '0' ELSE
      tmp_38;

  
  tmp_39 <= tmp_36 WHEN obj_CPAdditionObj_writeEnbRAM2 = '0' ELSE
      tmp_37;

  
  tmp_40 <= tmp_39 WHEN obj_CPAdditionObj_writeEnbRAM1 = '0' ELSE
      tmp_36;

  obj_CPAdditionObj_sym2Done_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_sym2Done_2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_sym2Done_2 <= tmp_40;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_sym2Done_reg_process;


  
  tmp_41 <= tmp_18 WHEN obj_CPAdditionObj_sym2Done_2 = '0' ELSE
      tmp_35;

  obj_CPAdditionObj_startRead2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead2_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead2_3 <= tmp_41;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead2_reg_process;


  s_3 <= obj_CPAdditionObj_startRead1_3 AND ( NOT obj_CPAdditionObj_startRead2_3);

  
  tmp_18 <= tmp_33 WHEN s_3 = '0' ELSE
      obj_CPAdditionObj_startRead2_3;

  
  tmp_42 <= obj_CPAdditionObj_sym1Done WHEN tmp_18 = '0' ELSE
      obj_CPAdditionObj_sym1Done_2;

  
  tmp_22 <= obj_CPAdditionObj_sym1Done_2 WHEN obj_CPAdditionObj_sym1Done_2 = '0' ELSE
      tmp_42;

  
  tmp_43 <= tmp_22 WHEN obj_CPAdditionObj_writeEnbRAM1 = '0' ELSE
      tmp_23;

  obj_CPAdditionObj_sym1Done_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_sym1Done_2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_sym1Done_2 <= tmp_43;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_sym1Done_reg_process;


  
  tmp_34 <= tmp_21 WHEN obj_CPAdditionObj_sym1Done_2 = '0' ELSE
      tmp_19;

  obj_CPAdditionObj_startRead1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead1_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead1_3 <= tmp_34;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead1_reg_process;


  obj_CPAdditionObj_startRead1Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead1Reg <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead1Reg <= obj_CPAdditionObj_startRead1_3;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead1Reg_reg_process;


  obj_CPAdditionObj_startRead2Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead2Reg <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead2Reg <= obj_CPAdditionObj_startRead2_3;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead2Reg_reg_process;


  tmp_44 <= obj_CPAdditionObj_startRead1Reg XOR obj_CPAdditionObj_startRead2Reg;

  obj_CPAdditionObj_startOutputReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startOutputReg_reg_reg <= (OTHERS => '0');
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startOutputReg_reg_reg(0) <= tmp_44;
        obj_CPAdditionObj_startOutputReg_reg_reg(1) <= obj_CPAdditionObj_startOutputReg_reg_reg(0);
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startOutputReg_reg_process;

  obj_CPAdditionObj_startOutputReg <= obj_CPAdditionObj_startOutputReg_reg_reg(1);

  obj_CPAdditionObj_sendOutput <= '0';

  obj_CPAdditionObj_outCountReg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_outCountReg2_reg_reg <= (OTHERS => to_unsigned(16#000#, 9));
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_outCountReg2_reg_reg(0) <= obj_CPAdditionObj_outCount_2;
        obj_CPAdditionObj_outCountReg2_reg_reg(1) <= obj_CPAdditionObj_outCountReg2_reg_reg(0);
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_outCountReg2_reg_process;

  obj_CPAdditionObj_outCountReg2 <= obj_CPAdditionObj_outCountReg2_reg_reg(1);

  obj_CPAdditionObj_outCountReg3_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_outCountReg3 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_outCountReg3 <= obj_CPAdditionObj_outCountReg2;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_outCountReg3_reg_process;


  reduced_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        reduced_reg <= (OTHERS => to_unsigned(16#000#, 9));
      ELSIF enb_1_2_0 = '1' THEN
        reduced_reg(0) <= tmp_26;
        reduced_reg(1) <= reduced_reg(0);
      END IF;
    END IF;
  END PROCESS reduced_1_process;

  tmp_45 <= reduced_reg(1);

  
  s_6 <= '1' WHEN obj_CPAdditionObj_outCountReg3 >= tmp_45 ELSE
      '0';

  obj_CPAdditionObj_hasPrevSymbData <= '0';

  obj_CPAdditionObj_startRead1Reg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead1Reg2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead1Reg2 <= obj_CPAdditionObj_startRead1Reg;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead1Reg2_reg_process;


  obj_CPAdditionObj_startRead2Reg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_startRead2Reg2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_startRead2Reg2 <= obj_CPAdditionObj_startRead2Reg;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_startRead2Reg2_reg_process;


  s_7 <= obj_CPAdditionObj_startRead1Reg2 AND ( NOT obj_CPAdditionObj_startRead2Reg2);

  s_8 <= ( NOT obj_CPAdditionObj_startRead1Reg2) AND obj_CPAdditionObj_startRead2Reg2;

  
  a0_5 <= '1' WHEN obj_CPAdditionObj_outCountReg2 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  s_9 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn <= to_unsigned(16#001#, 9) ELSE
      '0';

  
  s_10 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn >= obj_CPAdditionObj_FFTLenMinusVecLen ELSE
      '0';

  obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen <= tmp_1 - obj_CPAdditionObj_CPLenInReg;

  
  tmp_46 <= obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 WHEN s = '0' ELSE
      obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen;

  
  tmp_47 <= obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 WHEN obj_CPAdditionObj_validInReg = '0' ELSE
      tmp_46;

  obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 <= tmp_47;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_reg_process;


  
  s_11 <= '1' WHEN obj_CPAdditionObj_inCountReg > obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1 <= '1';

  
  s_12 <= '1' WHEN obj_CPAdditionObj_inCountReg = to_unsigned(16#000#, 9) ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1_1 <= '1';

  
  s_13 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn /= to_unsigned(16#000#, 9) ELSE
      '0';

  
  s_14 <= '1' WHEN obj_CPAdditionObj_inCountReg = obj_CPAdditionObj_FFTLenMinusVecLen ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1_2 <= '1';

  
  s_15 <= '1' WHEN obj_CPAdditionObj_inCountReg = obj_CPAdditionObj_FFTLenMinusVecLen ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM1_3 <= '1';

  obj_CPAdditionObj_storeInitReadAddrRAM1_4 <= '0';

  
  tmp_49 <= tmp_48 WHEN a0_2 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_4;

  
  tmp_50 <= obj_CPAdditionObj_storeInitReadAddrRAM1_5 WHEN s_15 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_3;

  
  tmp_51 <= obj_CPAdditionObj_storeInitReadAddrRAM1_5 WHEN s_14 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_2;

  
  tmp_52 <= tmp_51 WHEN s_13 = '0' ELSE
      tmp_50;

  
  tmp_53 <= obj_CPAdditionObj_storeInitReadAddrRAM1_5 WHEN s_12 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1_1;

  
  tmp_54 <= obj_CPAdditionObj_storeInitReadAddrRAM1_5 WHEN s_11 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM1;

  
  tmp_55 <= tmp_54 WHEN s_10 = '0' ELSE
      tmp_53;

  
  tmp_56 <= tmp_55 WHEN s_9 = '0' ELSE
      tmp_52;

  
  tmp_48 <= obj_CPAdditionObj_storeInitReadAddrRAM1_5 WHEN s_16 = '0' ELSE
      tmp_56;

  
  tmp_57 <= tmp_48 WHEN obj_CPAdditionObj_writeEnbRAM1 = '0' ELSE
      tmp_49;

  obj_CPAdditionObj_storeInitReadAddrRAM1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_storeInitReadAddrRAM1_5 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_storeInitReadAddrRAM1_5 <= tmp_57;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_storeInitReadAddrRAM1_reg_process;


  s_16 <= obj_CPAdditionObj_writeEnbRAM1 AND ( NOT obj_CPAdditionObj_storeInitReadAddrRAM1_5);

  
  s_17 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn <= to_unsigned(16#001#, 9) ELSE
      '0';

  
  s_18 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn >= obj_CPAdditionObj_FFTLenMinusVecLen ELSE
      '0';

  
  s_19 <= '1' WHEN obj_CPAdditionObj_inCountReg > obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1 ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2 <= '1';

  
  s_20 <= '1' WHEN obj_CPAdditionObj_inCountReg = to_unsigned(16#000#, 9) ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2_1 <= '1';

  
  s_21 <= '1' WHEN obj_CPAdditionObj_CPSampledAtIn /= to_unsigned(16#000#, 9) ELSE
      '0';

  
  s_22 <= '1' WHEN obj_CPAdditionObj_inCountReg = obj_CPAdditionObj_FFTLenMinusVecLen ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2_2 <= '1';

  
  s_23 <= '1' WHEN obj_CPAdditionObj_inCountReg = obj_CPAdditionObj_FFTLenMinusVecLen ELSE
      '0';

  obj_CPAdditionObj_storeInitReadAddrRAM2_3 <= '1';

  obj_CPAdditionObj_storeInitReadAddrRAM2_4 <= '0';

  
  tmp_59 <= tmp_58 WHEN a0_1 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_4;

  
  tmp_60 <= obj_CPAdditionObj_storeInitReadAddrRAM2_5 WHEN s_23 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_3;

  
  tmp_61 <= obj_CPAdditionObj_storeInitReadAddrRAM2_5 WHEN s_22 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_2;

  
  tmp_62 <= tmp_61 WHEN s_21 = '0' ELSE
      tmp_60;

  
  tmp_63 <= obj_CPAdditionObj_storeInitReadAddrRAM2_5 WHEN s_20 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_1;

  
  tmp_64 <= obj_CPAdditionObj_storeInitReadAddrRAM2_5 WHEN s_19 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2;

  
  tmp_65 <= tmp_64 WHEN s_18 = '0' ELSE
      tmp_63;

  
  tmp_66 <= tmp_65 WHEN s_17 = '0' ELSE
      tmp_62;

  
  tmp_67 <= obj_CPAdditionObj_storeInitReadAddrRAM2_5 WHEN s_24 = '0' ELSE
      tmp_66;

  
  tmp_58 <= tmp_67 WHEN s_16 = '0' ELSE
      obj_CPAdditionObj_storeInitReadAddrRAM2_5;

  
  tmp_68 <= tmp_58 WHEN obj_CPAdditionObj_writeEnbRAM2 = '0' ELSE
      tmp_59;

  
  tmp_69 <= tmp_68 WHEN obj_CPAdditionObj_writeEnbRAM1 = '0' ELSE
      tmp_58;

  obj_CPAdditionObj_storeInitReadAddrRAM2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_storeInitReadAddrRAM2_5 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_storeInitReadAddrRAM2_5 <= tmp_69;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_storeInitReadAddrRAM2_reg_process;


  s_24 <= obj_CPAdditionObj_writeEnbRAM2 AND ( NOT obj_CPAdditionObj_storeInitReadAddrRAM2_5);

  p440tmp_sub_temp <= resize(obj_CPAdditionObj_inCountReg, 10) - resize(obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1, 10);
  tmp_70 <= p440tmp_sub_temp(0);

  tmp_71 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_70;

  p452tmp_sub_temp <= resize(obj_CPAdditionObj_CPSampledAtIn, 10) - resize(obj_CPAdditionObj_FFTLenMinusVecLen, 10);
  tmp_72 <= p452tmp_sub_temp(0);

  tmp_73 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_72;

  obj_CPAdditionObj_numSamp <= to_unsigned(16#000#, 9);

  p498tmp_sub_temp <= resize(obj_CPAdditionObj_inCountReg, 10) - resize(obj_CPAdditionObj_FFTLenMinusVecLenMinusCPLen_1, 10);
  tmp_74 <= p498tmp_sub_temp(0);

  tmp_75 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_74;

  p510tmp_sub_temp <= resize(obj_CPAdditionObj_CPSampledAtIn, 10) - resize(obj_CPAdditionObj_FFTLenMinusVecLen, 10);
  tmp_76 <= p510tmp_sub_temp(0);

  tmp_77 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_76;

  obj_CPAdditionObj_numSamp_1 <= to_unsigned(16#000#, 9);

  
  tmp_78 <= obj_CPAdditionObj_numSamp_2 WHEN s_15 = '0' ELSE
      obj_CPAdditionObj_CPSampledAtIn;

  
  tmp_79 <= obj_CPAdditionObj_numSamp_2 WHEN s_14 = '0' ELSE
      obj_CPAdditionObj_numSamp_1;

  
  tmp_80 <= tmp_79 WHEN s_13 = '0' ELSE
      tmp_78;

  
  tmp_81 <= obj_CPAdditionObj_numSamp_2 WHEN s_12 = '0' ELSE
      tmp_77;

  
  tmp_82 <= obj_CPAdditionObj_numSamp_2 WHEN s_11 = '0' ELSE
      tmp_75;

  
  tmp_83 <= tmp_82 WHEN s_10 = '0' ELSE
      tmp_81;

  
  tmp_84 <= tmp_83 WHEN s_9 = '0' ELSE
      tmp_80;

  
  tmp_85 <= obj_CPAdditionObj_numSamp_2 WHEN s_23 = '0' ELSE
      obj_CPAdditionObj_CPSampledAtIn;

  
  tmp_86 <= obj_CPAdditionObj_numSamp_2 WHEN s_22 = '0' ELSE
      obj_CPAdditionObj_numSamp;

  
  tmp_87 <= tmp_86 WHEN s_21 = '0' ELSE
      tmp_85;

  
  tmp_88 <= obj_CPAdditionObj_numSamp_2 WHEN s_20 = '0' ELSE
      tmp_73;

  
  tmp_89 <= obj_CPAdditionObj_numSamp_2 WHEN s_19 = '0' ELSE
      tmp_71;

  
  tmp_90 <= tmp_89 WHEN s_18 = '0' ELSE
      tmp_88;

  
  tmp_91 <= tmp_90 WHEN s_17 = '0' ELSE
      tmp_87;

  
  tmp_92 <= obj_CPAdditionObj_numSamp_2 WHEN s_24 = '0' ELSE
      tmp_91;

  
  tmp_93 <= tmp_92 WHEN s_16 = '0' ELSE
      tmp_84;

  obj_CPAdditionObj_numSamp_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_numSamp_2 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_numSamp_2 <= tmp_93;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_numSamp_reg_process;


  
  a0_6 <= '1' WHEN obj_CPAdditionObj_outCountReg2 = to_unsigned(16#000#, 9) ELSE
      '0';

  
  tmp_94 <= obj_CPAdditionObj_numCurrVecSamples WHEN a0_6 = '0' ELSE
      obj_CPAdditionObj_numSamp_2;

  
  tmp_95 <= obj_CPAdditionObj_numCurrVecSamples WHEN a0_5 = '0' ELSE
      obj_CPAdditionObj_numSamp_2;

  
  tmp_96 <= obj_CPAdditionObj_numCurrVecSamples WHEN s_8 = '0' ELSE
      tmp_95;

  
  tmp_97 <= tmp_96 WHEN s_7 = '0' ELSE
      tmp_94;

  obj_CPAdditionObj_numCurrVecSamples_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_numCurrVecSamples <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_numCurrVecSamples <= tmp_97;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_numCurrVecSamples_reg_process;


  obj_CPAdditionObj_idxpos <= '0';

  p437tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_70;
  p437tmp_sub_temp <= to_unsigned(16#001#, 10) - p437tmp_sub_cast;
  tmp_98 <= p437tmp_sub_temp(0);

  p449tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_72;
  p449tmp_sub_temp <= to_unsigned(16#001#, 10) - p449tmp_sub_cast;
  tmp_99 <= p449tmp_sub_temp(0);

  obj_CPAdditionObj_idxpos2Reg <= '0';

  p478tmp_sub_temp <= to_unsigned(16#001#, 10) - resize(obj_CPAdditionObj_CPSampledAtIn, 10);
  tmp_100 <= p478tmp_sub_temp(0);

  
  tmp_101 <= obj_CPAdditionObj_idxpos2Reg_1 WHEN s_23 = '0' ELSE
      tmp_100;

  
  tmp_102 <= obj_CPAdditionObj_idxpos2Reg_1 WHEN s_22 = '0' ELSE
      obj_CPAdditionObj_idxpos2Reg;

  
  tmp_103 <= tmp_102 WHEN s_21 = '0' ELSE
      tmp_101;

  
  tmp_104 <= obj_CPAdditionObj_idxpos2Reg_1 WHEN s_20 = '0' ELSE
      tmp_99;

  
  tmp_105 <= obj_CPAdditionObj_idxpos2Reg_1 WHEN s_19 = '0' ELSE
      tmp_98;

  
  tmp_106 <= tmp_105 WHEN s_18 = '0' ELSE
      tmp_104;

  
  tmp_107 <= tmp_106 WHEN s_17 = '0' ELSE
      tmp_103;

  
  tmp_108 <= obj_CPAdditionObj_idxpos2Reg_1 WHEN s_24 = '0' ELSE
      tmp_107;

  
  tmp_109 <= tmp_108 WHEN s_16 = '0' ELSE
      obj_CPAdditionObj_idxpos2Reg_1;

  obj_CPAdditionObj_idxpos2Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos2Reg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos2Reg_1 <= tmp_109;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos2Reg_reg_process;


  obj_CPAdditionObj_idxpos2Reg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos2Reg2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos2Reg2 <= obj_CPAdditionObj_idxpos2Reg_1;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos2Reg2_reg_process;


  p495tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_74;
  p495tmp_sub_temp <= to_unsigned(16#001#, 10) - p495tmp_sub_cast;
  tmp_110 <= p495tmp_sub_temp(0);

  p507tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_76;
  p507tmp_sub_temp <= to_unsigned(16#001#, 10) - p507tmp_sub_cast;
  tmp_111 <= p507tmp_sub_temp(0);

  obj_CPAdditionObj_idxpos1Reg <= '0';

  p536tmp_sub_temp <= to_unsigned(16#001#, 10) - resize(obj_CPAdditionObj_CPSampledAtIn, 10);
  tmp_112 <= p536tmp_sub_temp(0);

  
  tmp_113 <= obj_CPAdditionObj_idxpos1Reg_1 WHEN s_15 = '0' ELSE
      tmp_112;

  
  tmp_114 <= obj_CPAdditionObj_idxpos1Reg_1 WHEN s_14 = '0' ELSE
      obj_CPAdditionObj_idxpos1Reg;

  
  tmp_115 <= tmp_114 WHEN s_13 = '0' ELSE
      tmp_113;

  
  tmp_116 <= obj_CPAdditionObj_idxpos1Reg_1 WHEN s_12 = '0' ELSE
      tmp_111;

  
  tmp_117 <= obj_CPAdditionObj_idxpos1Reg_1 WHEN s_11 = '0' ELSE
      tmp_110;

  
  tmp_118 <= tmp_117 WHEN s_10 = '0' ELSE
      tmp_116;

  
  tmp_119 <= tmp_118 WHEN s_9 = '0' ELSE
      tmp_115;

  
  tmp_120 <= obj_CPAdditionObj_idxpos1Reg_1 WHEN s_16 = '0' ELSE
      tmp_119;

  obj_CPAdditionObj_idxpos1Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos1Reg_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos1Reg_1 <= tmp_120;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos1Reg_reg_process;


  obj_CPAdditionObj_idxpos1Reg2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos1Reg2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos1Reg2 <= obj_CPAdditionObj_idxpos1Reg_1;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos1Reg2_reg_process;


  obj_CPAdditionObj_carryForward <= '0';

  obj_CPAdditionObj_carryForward_1 <= '1';

  obj_CPAdditionObj_carryForward_2 <= '0';

  obj_CPAdditionObj_carryForward_3 <= '0';

  obj_CPAdditionObj_hasPrevSymbData_1 <= '1';

  obj_CPAdditionObj_hasPrevSymbData_2 <= '0';

  obj_CPAdditionObj_hasPrevSymbData_3 <= '1';

  
  tmp_121 <= obj_CPAdditionObj_hasPrevSymbData_1 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_hasPrevSymbData_2;

  
  tmp_122 <= obj_CPAdditionObj_carryForward_1 WHEN obj_CPAdditionObj_idxpos_1 = '0' ELSE
      obj_CPAdditionObj_carryForward_2;

  p405tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_2;
  p405tmp_sub_temp <= to_unsigned(16#001#, 10) - p405tmp_sub_cast;
  tmp_123 <= p405tmp_sub_temp(0);

  tmp_124 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_123;

  p404tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_2;
  p404tmp_sub_temp <= to_unsigned(16#001#, 10) - p404tmp_sub_cast;
  tmp_125 <= p404tmp_sub_temp(0);

  tmp_126 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & tmp_125;

  
  tmp_128 <= tmp_127 WHEN a0_6 = '0' ELSE
      obj_CPAdditionObj_idxpos1Reg2;

  
  tmp_129 <= tmp_127 WHEN a0_5 = '0' ELSE
      obj_CPAdditionObj_idxpos2Reg2;

  
  tmp_130 <= obj_CPAdditionObj_idxpos_2 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_prevSymbStartIndex;

  
  tmp_131 <= tmp_130 WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_idxpos_2;

  
  tmp_132 <= obj_CPAdditionObj_prevSymbStartIndex WHEN s_6 = '0' ELSE
      tmp_131;

  
  tmp_133 <= obj_CPAdditionObj_prevSymbStartIndex WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_132;

  obj_CPAdditionObj_prevSymbStartIndex_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_prevSymbStartIndex <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_prevSymbStartIndex <= tmp_133;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_prevSymbStartIndex_reg_process;


  obj_CPAdditionObj_idxpos_3 <= obj_CPAdditionObj_idxpos_2 XOR obj_CPAdditionObj_prevSymbStartIndex;

  p370obj_CPAdditionObj_idxpos_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_3;
  
  obj_CPAdditionObj_idxpos_1 <= '1' WHEN p370obj_CPAdditionObj_idxpos_cast = to_unsigned(16#001#, 9) ELSE
      '0';

  
  tmp_134 <= obj_CPAdditionObj_idxpos_3 WHEN obj_CPAdditionObj_idxpos_1 = '0' ELSE
      obj_CPAdditionObj_idxpos;

  p354tmp_sub_temp <= to_unsigned(16#001#, 10) - resize(tmp_135, 10);
  tmp_136 <= p354tmp_sub_temp(0);

  
  tmp_138 <= tmp_136 WHEN tmp_137 = '0' ELSE
      tmp_134;

  
  tmp_139 <= obj_CPAdditionObj_idxpos_2 WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_138;

  
  tmp_140 <= tmp_139 WHEN s_6 = '0' ELSE
      obj_CPAdditionObj_idxpos_2;

  
  tmp_127 <= obj_CPAdditionObj_idxpos_2 WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_140;

  
  tmp_141 <= tmp_127 WHEN s_8 = '0' ELSE
      tmp_129;

  
  tmp_142 <= tmp_141 WHEN s_7 = '0' ELSE
      tmp_128;

  obj_CPAdditionObj_idxpos_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_idxpos_2 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_idxpos_2 <= tmp_142;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_idxpos_reg_process;


  
  s_25 <= '1' WHEN obj_CPAdditionObj_idxpos_2 = '0' ELSE
      '0';

  
  tmp_143 <= tmp_126 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_numPrevVecSamples;

  
  tmp_144 <= tmp_143 WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      tmp_124;

  
  tmp_145 <= obj_CPAdditionObj_numPrevVecSamples WHEN s_6 = '0' ELSE
      tmp_144;

  
  tmp_146 <= obj_CPAdditionObj_numPrevVecSamples WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_145;

  obj_CPAdditionObj_numPrevVecSamples_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_numPrevVecSamples <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_numPrevVecSamples <= tmp_146;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_numPrevVecSamples_reg_process;


  tmp_135 <= obj_CPAdditionObj_numCurrVecSamples + obj_CPAdditionObj_numPrevVecSamples;

  
  tmp_137 <= '1' WHEN tmp_135 >= to_unsigned(16#001#, 9) ELSE
      '0';

  
  tmp_147 <= obj_CPAdditionObj_carryForward WHEN tmp_137 = '0' ELSE
      tmp_122;

  
  tmp_148 <= obj_CPAdditionObj_carryForward_4 WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_147;

  
  tmp_149 <= tmp_148 WHEN s_6 = '0' ELSE
      obj_CPAdditionObj_carryForward_3;

  
  tmp_150 <= obj_CPAdditionObj_carryForward_4 WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_149;

  obj_CPAdditionObj_carryForward_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_carryForward_4 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_carryForward_4 <= tmp_150;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_carryForward_reg_process;


  
  tmp_151 <= tmp_121 WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_hasPrevSymbData_3;

  
  tmp_152 <= obj_CPAdditionObj_hasPrevSymbData WHEN s_6 = '0' ELSE
      tmp_151;

  
  tmp_153 <= obj_CPAdditionObj_hasPrevSymbData_4 WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_152;

  obj_CPAdditionObj_hasPrevSymbData_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_hasPrevSymbData_4 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_hasPrevSymbData_4 <= tmp_153;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_hasPrevSymbData_reg_process;


  obj_CPAdditionObj_sendOutput_1 <= '1';

  obj_CPAdditionObj_sendOutput_2 <= '1';

  obj_CPAdditionObj_sendOutput_3 <= '1';

  
  tmp_154 <= obj_CPAdditionObj_sendOutput_2 WHEN tmp_137 = '0' ELSE
      obj_CPAdditionObj_sendOutput_3;

  
  tmp_155 <= obj_CPAdditionObj_sendOutput_1 WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_154;

  obj_CPAdditionObj_sendOutput_4 <= '0';

  obj_CPAdditionObj_sendOutput_5 <= '1';

  
  tmp_156 <= obj_CPAdditionObj_sendOutput_4 WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_sendOutput_5;

  obj_CPAdditionObj_sendOutput_6 <= '1';

  
  tmp_157 <= tmp_156 WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_sendOutput_6;

  
  tmp_158 <= tmp_155 WHEN s_6 = '0' ELSE
      tmp_157;

  
  tmp_159 <= obj_CPAdditionObj_sendOutput WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_158;

  obj_CPAdditionObj_sendOutput_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_sendOutput_7 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_sendOutput_7 <= tmp_159;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_sendOutput_reg_process;


  obj_CPAdditionObj_dataOutReg_re <= to_signed(16#0000#, 16);
  obj_CPAdditionObj_dataOutReg_im <= to_signed(16#0000#, 16);

  p360tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_2;
  p360tmp_sub_temp <= to_unsigned(16#001#, 10) - p360tmp_sub_cast;
  tmp_160 <= p360tmp_sub_temp(0);

  tmp_161 <= tmp_135(0);

  p362tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_prevSymbStartIndex;
  p362tmp_sub_temp <= to_unsigned(16#001#, 10) - p362tmp_sub_cast;
  tmp_162 <= p362tmp_sub_temp(0);

  
  tmp_163 <= tmp_161 WHEN tmp_137 = '0' ELSE
      tmp_162;

  
  tmp_164 <= tmp_160 WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_163;

  
  tmp_165 <= tmp_125 WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      tmp_123;

  
  tmp_166 <= tmp_164 WHEN s_6 = '0' ELSE
      tmp_165;

  
  tmp_167 <= obj_CPAdditionObj_dataVec1Samples WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_166;

  obj_CPAdditionObj_dataVec1Samples_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVec1Samples <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVec1Samples <= tmp_167;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVec1Samples_reg_process;


  p309_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_dataVec1Samples;
  
  s_26 <= '1' WHEN p309_cast > to_unsigned(16#000#, 10) ELSE
      '0';

  s_27 <= obj_CPAdditionObj_startRead1Reg AND ( NOT obj_CPAdditionObj_startRead2Reg);

  s_28 <= ( NOT obj_CPAdditionObj_startRead1Reg) AND obj_CPAdditionObj_startRead2Reg;

  varargin_1_re_signed <= signed(varargin_1_re);

  varargin_1_im_signed <= signed(varargin_1_im);

  obj_CPAdditionObj_dataInReg1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataInReg1_reg_reg_re <= (OTHERS => to_signed(16#0000#, 16));
        obj_CPAdditionObj_dataInReg1_reg_reg_im <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataInReg1_reg_reg_im(0) <= varargin_1_im_signed;
        obj_CPAdditionObj_dataInReg1_reg_reg_im(1) <= obj_CPAdditionObj_dataInReg1_reg_reg_im(0);
        obj_CPAdditionObj_dataInReg1_reg_reg_re(0) <= varargin_1_re_signed;
        obj_CPAdditionObj_dataInReg1_reg_reg_re(1) <= obj_CPAdditionObj_dataInReg1_reg_reg_re(0);
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataInReg1_reg_process;

  obj_CPAdditionObj_dataInReg1_re <= obj_CPAdditionObj_dataInReg1_reg_reg_re(1);
  obj_CPAdditionObj_dataInReg1_im <= obj_CPAdditionObj_dataInReg1_reg_reg_im(1);

  obj_CPAdditionObj_writeAddrRAM2 <= to_unsigned(16#000#, 10);

  tmp_168 <= obj_CPAdditionObj_writeAddrRAM2_1 + to_unsigned(16#001#, 10);

  
  tmp_169 <= tmp_168 WHEN a0_1 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2;

  
  tmp_170 <= obj_CPAdditionObj_writeAddrRAM2_1 WHEN obj_CPAdditionObj_writeEnbRAM2 = '0' ELSE
      tmp_169;

  
  tmp_171 <= tmp_170 WHEN obj_CPAdditionObj_writeEnbRAM1 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2_1;

  obj_CPAdditionObj_writeAddrRAM2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_writeAddrRAM2_1 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_writeAddrRAM2_1 <= tmp_171;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_writeAddrRAM2_reg_process;


  obj_CPAdditionObj_FFTLengthAtOutMinusVecLen_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_FFTLengthAtOutMinusVecLen <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_FFTLengthAtOutMinusVecLen <= tmp_172;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_FFTLengthAtOutMinusVecLen_reg_process;


  
  tmp_172 <= obj_CPAdditionObj_FFTLengthAtOutMinusVecLen WHEN s_4 = '0' ELSE
      obj_CPAdditionObj_FFTLenMinusVecLen;

  obj_CPAdditionObj_readAddrRAM2 <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM2Reg <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM2Reg_1 <= to_unsigned(16#000#, 10);

  
  tmp_173 <= obj_CPAdditionObj_readAddrRAM2Reg_2 WHEN s_23 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2_1;

  
  tmp_174 <= obj_CPAdditionObj_readAddrRAM2Reg_2 WHEN s_22 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2Reg_1;

  
  tmp_175 <= tmp_174 WHEN s_21 = '0' ELSE
      tmp_173;

  
  tmp_176 <= obj_CPAdditionObj_readAddrRAM2Reg_2 WHEN s_20 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2Reg;

  
  tmp_177 <= obj_CPAdditionObj_readAddrRAM2Reg_2 WHEN s_19 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM2_1;

  
  tmp_178 <= tmp_177 WHEN s_18 = '0' ELSE
      tmp_176;

  
  tmp_179 <= tmp_178 WHEN s_17 = '0' ELSE
      tmp_175;

  
  tmp_180 <= obj_CPAdditionObj_readAddrRAM2Reg_2 WHEN s_24 = '0' ELSE
      tmp_179;

  
  tmp_181 <= tmp_180 WHEN s_16 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2Reg_2;

  obj_CPAdditionObj_readAddrRAM2Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_readAddrRAM2Reg_2 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_readAddrRAM2Reg_2 <= tmp_181;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_readAddrRAM2Reg_reg_process;


  
  tmp_183 <= obj_CPAdditionObj_readAddrRAM2Reg_2 WHEN tmp_34 = '0' ELSE
      tmp_182;

  tmp_184 <= obj_CPAdditionObj_readAddrRAM2_1 + to_unsigned(16#001#, 10);

  
  a0_7 <= '1' WHEN obj_CPAdditionObj_readAddrRAM2_1 = resize(tmp_172, 10) ELSE
      '0';

  
  tmp_185 <= tmp_184 WHEN a0_7 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2;

  
  tmp_186 <= obj_CPAdditionObj_readAddrRAM2_1 WHEN s_5 = '0' ELSE
      tmp_185;

  
  tmp_182 <= tmp_186 WHEN s_3 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM2_1;

  
  tmp_187 <= tmp_182 WHEN obj_CPAdditionObj_sym2Done_2 = '0' ELSE
      tmp_183;

  obj_CPAdditionObj_readAddrRAM2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_readAddrRAM2_1 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_readAddrRAM2_1 <= tmp_187;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_readAddrRAM2_reg_process;


  varargout_1_re_signed <= signed(varargout_1_re_1);

  varargout_1_im_signed <= signed(varargout_1_im_1);

  obj_CPAdditionObj_writeAddrRAM1 <= to_unsigned(16#000#, 10);

  tmp_188 <= obj_CPAdditionObj_writeAddrRAM1_1 + to_unsigned(16#001#, 10);

  
  tmp_189 <= tmp_188 WHEN a0_2 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM1;

  
  tmp_190 <= obj_CPAdditionObj_writeAddrRAM1_1 WHEN obj_CPAdditionObj_writeEnbRAM1 = '0' ELSE
      tmp_189;

  obj_CPAdditionObj_writeAddrRAM1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_writeAddrRAM1_1 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_writeAddrRAM1_1 <= tmp_190;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_writeAddrRAM1_reg_process;


  obj_CPAdditionObj_readAddrRAM1 <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM1Reg <= to_unsigned(16#000#, 10);

  obj_CPAdditionObj_readAddrRAM1Reg_1 <= to_unsigned(16#000#, 10);

  
  tmp_191 <= obj_CPAdditionObj_readAddrRAM1Reg_2 WHEN s_15 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM1_1;

  
  tmp_192 <= obj_CPAdditionObj_readAddrRAM1Reg_2 WHEN s_14 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM1Reg_1;

  
  tmp_193 <= tmp_192 WHEN s_13 = '0' ELSE
      tmp_191;

  
  tmp_194 <= obj_CPAdditionObj_readAddrRAM1Reg_2 WHEN s_12 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM1Reg;

  
  tmp_195 <= obj_CPAdditionObj_readAddrRAM1Reg_2 WHEN s_11 = '0' ELSE
      obj_CPAdditionObj_writeAddrRAM1_1;

  
  tmp_196 <= tmp_195 WHEN s_10 = '0' ELSE
      tmp_194;

  
  tmp_197 <= tmp_196 WHEN s_9 = '0' ELSE
      tmp_193;

  
  tmp_198 <= obj_CPAdditionObj_readAddrRAM1Reg_2 WHEN s_16 = '0' ELSE
      tmp_197;

  obj_CPAdditionObj_readAddrRAM1Reg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_readAddrRAM1Reg_2 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_readAddrRAM1Reg_2 <= tmp_198;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_readAddrRAM1Reg_reg_process;


  
  tmp_200 <= obj_CPAdditionObj_readAddrRAM1Reg_2 WHEN tmp_18 = '0' ELSE
      tmp_199;

  tmp_201 <= obj_CPAdditionObj_readAddrRAM1_1 + to_unsigned(16#001#, 10);

  
  a0_8 <= '1' WHEN obj_CPAdditionObj_readAddrRAM1_1 = resize(tmp_172, 10) ELSE
      '0';

  
  tmp_202 <= tmp_201 WHEN a0_8 = '0' ELSE
      obj_CPAdditionObj_readAddrRAM1;

  
  tmp_199 <= obj_CPAdditionObj_readAddrRAM1_1 WHEN s_3 = '0' ELSE
      tmp_202;

  
  tmp_203 <= tmp_199 WHEN obj_CPAdditionObj_sym1Done_2 = '0' ELSE
      tmp_200;

  obj_CPAdditionObj_readAddrRAM1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_readAddrRAM1_1 <= to_unsigned(16#000#, 10);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_readAddrRAM1_1 <= tmp_203;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_readAddrRAM1_reg_process;


  varargout_1_re_signed_1 <= signed(varargout_1_re_2);

  varargout_1_im_signed_1 <= signed(varargout_1_im_2);

  
  tmp_re_1 <= tmp_re WHEN s_28 = '0' ELSE
      varargout_1_re_signed;
  
  tmp_im_1 <= tmp_im WHEN s_28 = '0' ELSE
      varargout_1_im_signed;

  
  tmp_re_2 <= tmp_re_1 WHEN s_27 = '0' ELSE
      varargout_1_re_signed_1;
  
  tmp_im_2 <= tmp_im_1 WHEN s_27 = '0' ELSE
      varargout_1_im_signed_1;

  reduced_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        tmp_re <= to_signed(16#0000#, 16);
        tmp_im <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        tmp_re <= tmp_re_2;
        tmp_im <= tmp_im_2;
      END IF;
    END IF;
  END PROCESS reduced_2_process;


  obj_CPAdditionObj_dataVecReg_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVecReg_re <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataVecReg_im <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVecReg_re <= tmp_re;
        obj_CPAdditionObj_dataVecReg_im <= tmp_im;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVecReg_reg_process;


  
  tmp_re_3 <= tmp_re WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re;
  
  tmp_im_3 <= tmp_im WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im;

  
  tmp_re_4 <= tmp_re WHEN tmp_137 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re;
  
  tmp_im_4 <= tmp_im WHEN tmp_137 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im;

  
  tmp_re_5 <= tmp_re_3 WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_re_4;
  
  tmp_im_5 <= tmp_im_3 WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_im_4;

  
  tmp_re_6 <= tmp_re WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re;
  
  tmp_im_6 <= tmp_im WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im;

  
  tmp_re_7 <= tmp_re_5 WHEN s_6 = '0' ELSE
      tmp_re_6;
  
  tmp_im_7 <= tmp_im_5 WHEN s_6 = '0' ELSE
      tmp_im_6;

  
  tmp_re_8 <= obj_CPAdditionObj_dataVec2_re WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_re_7;
  
  tmp_im_8 <= obj_CPAdditionObj_dataVec2_im WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_im_7;

  obj_CPAdditionObj_dataVec2_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVec2_re <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataVec2_im <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVec2_re <= tmp_re_8;
        obj_CPAdditionObj_dataVec2_im <= tmp_im_8;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVec2_reg_process;


  p357_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_idxpos_2;
  
  s_29 <= '1' WHEN p357_cast = to_unsigned(16#000#, 10) ELSE
      '0';

  p359tmp_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & obj_CPAdditionObj_prevSymbStartIndex;
  p359tmp_sub_temp <= p359tmp_sub_cast - resize(obj_CPAdditionObj_numCurrVecSamples, 10);
  p359tmp_cast <= p359tmp_sub_temp(0);
  p359tmp_cast_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & p359tmp_cast;
  
  tmp_204 <= '1' WHEN p359tmp_cast_1 = to_unsigned(16#000#, 10) ELSE
      '0';

  
  tmp_re_9 <= obj_CPAdditionObj_dataVecReg_re WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_prevSymb_re;
  
  tmp_im_9 <= obj_CPAdditionObj_dataVecReg_im WHEN s_25 = '0' ELSE
      obj_CPAdditionObj_prevSymb_im;

  
  tmp_re_10 <= tmp_re_9 WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re;
  
  tmp_im_10 <= tmp_im_9 WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im;

  
  tmp_re_11 <= obj_CPAdditionObj_prevSymb_re WHEN s_6 = '0' ELSE
      tmp_re_10;
  
  tmp_im_11 <= obj_CPAdditionObj_prevSymb_im WHEN s_6 = '0' ELSE
      tmp_im_10;

  
  tmp_re_12 <= obj_CPAdditionObj_prevSymb_re WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_re_11;
  
  tmp_im_12 <= obj_CPAdditionObj_prevSymb_im WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_im_11;

  obj_CPAdditionObj_prevSymb_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_prevSymb_re <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_prevSymb_im <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_prevSymb_re <= tmp_re_12;
        obj_CPAdditionObj_prevSymb_im <= tmp_im_12;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_prevSymb_reg_process;


  
  tmp_re_13 <= obj_CPAdditionObj_dataVecReg_re WHEN obj_CPAdditionObj_idxpos_1 = '0' ELSE
      obj_CPAdditionObj_prevVecData_re;
  
  tmp_im_13 <= obj_CPAdditionObj_dataVecReg_im WHEN obj_CPAdditionObj_idxpos_1 = '0' ELSE
      obj_CPAdditionObj_prevVecData_im;

  
  tmp_re_14 <= obj_CPAdditionObj_prevVecData_re WHEN tmp_204 = '0' ELSE
      obj_CPAdditionObj_prevSymb_re;
  
  tmp_im_14 <= obj_CPAdditionObj_prevVecData_im WHEN tmp_204 = '0' ELSE
      obj_CPAdditionObj_prevSymb_im;

  
  tmp_re_15 <= tmp_re_14 WHEN s_29 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_re;
  
  tmp_im_15 <= tmp_im_14 WHEN s_29 = '0' ELSE
      obj_CPAdditionObj_dataVecReg_im;

  
  tmp_re_16 <= tmp_re_15 WHEN tmp_137 = '0' ELSE
      tmp_re_13;
  
  tmp_im_16 <= tmp_im_15 WHEN tmp_137 = '0' ELSE
      tmp_im_13;

  
  tmp_re_17 <= obj_CPAdditionObj_dataVecReg_re WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_re_16;
  
  tmp_im_17 <= obj_CPAdditionObj_dataVecReg_im WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_im_16;

  
  tmp_re_18 <= tmp_re_17 WHEN s_6 = '0' ELSE
      obj_CPAdditionObj_prevVecData_re;
  
  tmp_im_18 <= tmp_im_17 WHEN s_6 = '0' ELSE
      obj_CPAdditionObj_prevVecData_im;

  
  tmp_re_19 <= obj_CPAdditionObj_prevVecData_re WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_re_18;
  
  tmp_im_19 <= obj_CPAdditionObj_prevVecData_im WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_im_18;

  obj_CPAdditionObj_prevVecData_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_prevVecData_re <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_prevVecData_im <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_prevVecData_re <= tmp_re_19;
        obj_CPAdditionObj_prevVecData_im <= tmp_im_19;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_prevVecData_reg_process;


  
  tmp_re_20 <= obj_CPAdditionObj_dataVecReg_re WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_prevVecData_re;
  
  tmp_im_20 <= obj_CPAdditionObj_dataVecReg_im WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_prevVecData_im;

  
  tmp_re_21 <= tmp_re_15 WHEN tmp_137 = '0' ELSE
      obj_CPAdditionObj_prevSymb_re;
  
  tmp_im_21 <= tmp_im_15 WHEN tmp_137 = '0' ELSE
      obj_CPAdditionObj_prevSymb_im;

  
  tmp_re_22 <= tmp_re_20 WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_re_21;
  
  tmp_im_22 <= tmp_im_20 WHEN obj_CPAdditionObj_hasPrevSymbData_4 = '0' ELSE
      tmp_im_21;

  
  tmp_re_23 <= obj_CPAdditionObj_dataVecReg_re WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_prevVecData_re;
  
  tmp_im_23 <= obj_CPAdditionObj_dataVecReg_im WHEN obj_CPAdditionObj_carryForward_4 = '0' ELSE
      obj_CPAdditionObj_prevVecData_im;

  
  tmp_re_24 <= tmp_re_22 WHEN s_6 = '0' ELSE
      tmp_re_23;
  
  tmp_im_24 <= tmp_im_22 WHEN s_6 = '0' ELSE
      tmp_im_23;

  
  tmp_re_25 <= obj_CPAdditionObj_dataVec1_re WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_re_24;
  
  tmp_im_25 <= obj_CPAdditionObj_dataVec1_im WHEN obj_CPAdditionObj_startOutputReg = '0' ELSE
      tmp_im_24;

  obj_CPAdditionObj_dataVec1_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataVec1_re <= to_signed(16#0000#, 16);
        obj_CPAdditionObj_dataVec1_im <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataVec1_re <= tmp_re_25;
        obj_CPAdditionObj_dataVec1_im <= tmp_im_25;
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataVec1_reg_process;


  
  tmp_re_26 <= obj_CPAdditionObj_dataVec2_re WHEN s_26 = '0' ELSE
      obj_CPAdditionObj_dataVec1_re;
  
  tmp_im_26 <= obj_CPAdditionObj_dataVec2_im WHEN s_26 = '0' ELSE
      obj_CPAdditionObj_dataVec1_im;

  
  tmp_re_27 <= obj_CPAdditionObj_dataOutReg_re WHEN obj_CPAdditionObj_sendOutput_7 = '0' ELSE
      tmp_re_26;
  
  tmp_im_27 <= obj_CPAdditionObj_dataOutReg_im WHEN obj_CPAdditionObj_sendOutput_7 = '0' ELSE
      tmp_im_26;

  obj_CPAdditionObj_dataOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_dataOut_reg_reg_re <= (OTHERS => to_signed(16#0000#, 16));
        obj_CPAdditionObj_dataOut_reg_reg_im <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_dataOut_reg_reg_im(0) <= tmp_im_27;
        obj_CPAdditionObj_dataOut_reg_reg_im(1) <= obj_CPAdditionObj_dataOut_reg_reg_im(0);
        obj_CPAdditionObj_dataOut_reg_reg_re(0) <= tmp_re_27;
        obj_CPAdditionObj_dataOut_reg_reg_re(1) <= obj_CPAdditionObj_dataOut_reg_reg_re(0);
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_dataOut_reg_process;

  obj_CPAdditionObj_dataOut_re <= obj_CPAdditionObj_dataOut_reg_reg_re(1);
  obj_CPAdditionObj_dataOut_im <= obj_CPAdditionObj_dataOut_reg_reg_im(1);

  varargout_1_re <= std_logic_vector(obj_CPAdditionObj_dataOut_re);

  varargout_1_im <= std_logic_vector(obj_CPAdditionObj_dataOut_im);

  obj_CPAdditionObj_validOutReg <= '0';

  obj_CPAdditionObj_validOutReg_1 <= '1';

  
  tmp_205 <= obj_CPAdditionObj_validOutReg WHEN obj_CPAdditionObj_sendOutput_7 = '0' ELSE
      obj_CPAdditionObj_validOutReg_1;

  obj_CPAdditionObj_validOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_CPAdditionObj_validOut_reg_reg <= (OTHERS => '0');
      ELSIF enb_1_2_0 = '1' THEN
        obj_CPAdditionObj_validOut_reg_reg(0) <= tmp_205;
        obj_CPAdditionObj_validOut_reg_reg(1) <= obj_CPAdditionObj_validOut_reg_reg(0);
      END IF;
    END IF;
  END PROCESS obj_CPAdditionObj_validOut_reg_process;

  obj_CPAdditionObj_validOut <= obj_CPAdditionObj_validOut_reg_reg(1);

  varargout_2 <= obj_CPAdditionObj_validOut;

END rtl;

