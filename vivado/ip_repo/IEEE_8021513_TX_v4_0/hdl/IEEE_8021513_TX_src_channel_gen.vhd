-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/IEEE_8021513_TX_src_channel_gen.vhd
-- Created: 2024-11-13 11:48:22
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_TX_src_channel_gen
-- Source Path: HDLTx/full_tx/channel_gen
-- Hierarchy Level: 1
-- Model version: 4.212
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY IEEE_8021513_TX_src_channel_gen IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        new_frame                         :   IN    std_logic;
        data_out                          :   OUT   std_logic;
        ctrl_out_end                      :   OUT   std_logic;
        ctrl_out_valid                    :   OUT   std_logic
        );
END IEEE_8021513_TX_src_channel_gen;


ARCHITECTURE rtl OF IEEE_8021513_TX_src_channel_gen IS

  -- Component Declarations
  COMPONENT IEEE_8021513_TX_src_valid_to_ctrl
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          validIn                         :   IN    std_logic;
          ctrlOut_end                     :   OUT   std_logic;
          ctrlOut_valid                   :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : IEEE_8021513_TX_src_valid_to_ctrl
    USE ENTITY work.IEEE_8021513_TX_src_valid_to_ctrl(rtl);

  -- Signals
  SIGNAL count_step                       : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL count_from                       : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL HDL_Counter_out1                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL count                            : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL need_to_wrap                     : std_logic;
  SIGNAL count_value                      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL HDL_Counter_out2                 : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL range_hit                        : std_logic;
  SIGNAL Logical_Operator1_out1           : std_logic;
  SIGNAL Unit_Delay_Enabled_Synchronous_out1 : std_logic;
  SIGNAL Unit_Delay_Enabled_Synchronous_ectrl : std_logic;
  SIGNAL count_1                          : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Direct_Lookup_Table_n_D_out1     : std_logic;
  SIGNAL Direct_Lookup_Table_n_D_out1_1   : std_logic := '0';
  SIGNAL Delay_out1                       : std_logic;
  SIGNAL valid_to_ctrl_out1_end           : std_logic;
  SIGNAL valid_to_ctrl_out1_valid         : std_logic;

BEGIN
  u_valid_to_ctrl : IEEE_8021513_TX_src_valid_to_ctrl
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb_1_2_0 => enb_1_2_0,
              validIn => Unit_Delay_Enabled_Synchronous_out1,
              ctrlOut_end => valid_to_ctrl_out1_end,
              ctrlOut_valid => valid_to_ctrl_out1_valid
              );

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 349
  count_step <= to_unsigned(16#001#, 9);

  count_from <= to_unsigned(16#000#, 9);

  count <= HDL_Counter_out1 + count_step;

  
  count_value <= count WHEN need_to_wrap = '0' ELSE
      count_from;

  Logical_Operator_out1 <=  NOT HDL_Counter_out2;

  
  range_hit <= '1' WHEN HDL_Counter_out1 > to_unsigned(16#1FE#, 9) ELSE
      '0';

  
  need_to_wrap <= '1' WHEN HDL_Counter_out1 = to_unsigned(16#15D#, 9) ELSE
      '0';

  HDL_Counter_out2 <= need_to_wrap OR range_hit;

  Logical_Operator1_out1 <= new_frame OR HDL_Counter_out2;

  
  Unit_Delay_Enabled_Synchronous_ectrl <= Unit_Delay_Enabled_Synchronous_out1 WHEN Logical_Operator1_out1 = '0' ELSE
      Logical_Operator_out1;

  Unit_Delay_Enabled_Synchronous_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Unit_Delay_Enabled_Synchronous_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        Unit_Delay_Enabled_Synchronous_out1 <= Unit_Delay_Enabled_Synchronous_ectrl;
      END IF;
    END IF;
  END PROCESS Unit_Delay_Enabled_Synchronous_lowered_process;


  
  count_1 <= HDL_Counter_out1 WHEN Unit_Delay_Enabled_Synchronous_out1 = '0' ELSE
      count_value;

  HDL_Counter_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        HDL_Counter_out1 <= to_unsigned(16#000#, 9);
      ELSIF enb_1_2_0 = '1' THEN
        HDL_Counter_out1 <= count_1;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  Direct_Lookup_Table_n_D_out1 <= '1';

  PipelineRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        Direct_Lookup_Table_n_D_out1_1 <= Direct_Lookup_Table_n_D_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        Delay_out1 <= Direct_Lookup_Table_n_D_out1_1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  data_out <= Delay_out1;

  ctrl_out_end <= valid_to_ctrl_out1_end;

  ctrl_out_valid <= valid_to_ctrl_out1_valid;

END rtl;

