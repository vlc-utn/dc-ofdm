-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLLDPCDecoder/ldpc_1_16_12_ip_dut.vhd
-- Created: 2024-08-10 15:39:56
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ldpc_1_16_12_ip_dut
-- Source Path: ldpc_1_16_12_ip/ldpc_1_16_12_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ldpc_1_16_12_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        data_in                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        ctrl_in_start                     :   IN    std_logic;  -- ufix1
        ctrl_in_end                       :   IN    std_logic;  -- ufix1
        ctrl_in_valid                     :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        data_out                          :   OUT   std_logic;  -- ufix1
        ctrl_out_start                    :   OUT   std_logic;  -- ufix1
        ctrl_out_end                      :   OUT   std_logic;  -- ufix1
        ctrl_out_valid                    :   OUT   std_logic;  -- ufix1
        next_frame                        :   OUT   std_logic  -- ufix1
        );
END ldpc_1_16_12_ip_dut;


ARCHITECTURE rtl OF ldpc_1_16_12_ip_dut IS

  -- Component Declarations
  COMPONENT ldpc_1_16_12_ip_src_reduced_ldpc_rx_HDL_resource_test
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          data_in                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          ctrl_in_start                   :   IN    std_logic;  -- ufix1
          ctrl_in_end                     :   IN    std_logic;  -- ufix1
          ctrl_in_valid                   :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          data_out                        :   OUT   std_logic;  -- ufix1
          ctrl_out_start                  :   OUT   std_logic;  -- ufix1
          ctrl_out_end                    :   OUT   std_logic;  -- ufix1
          ctrl_out_valid                  :   OUT   std_logic;  -- ufix1
          next_frame                      :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ldpc_1_16_12_ip_src_reduced_ldpc_rx_HDL_resource_test
    USE ENTITY work.ldpc_1_16_12_ip_src_reduced_ldpc_rx_HDL_resource_test(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ctrl_in_start_sig                : std_logic;  -- ufix1
  SIGNAL ctrl_in_end_sig                  : std_logic;  -- ufix1
  SIGNAL ctrl_in_valid_sig                : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL data_out_sig                     : std_logic;  -- ufix1
  SIGNAL ctrl_out_start_sig               : std_logic;  -- ufix1
  SIGNAL ctrl_out_end_sig                 : std_logic;  -- ufix1
  SIGNAL ctrl_out_valid_sig               : std_logic;  -- ufix1
  SIGNAL next_frame_sig                   : std_logic;  -- ufix1

BEGIN
  u_ldpc_1_16_12_ip_src_reduced_ldpc_rx_HDL_resource_test : ldpc_1_16_12_ip_src_reduced_ldpc_rx_HDL_resource_test
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset_x => reset_x,
              data_in => data_in,  -- sfix16_En12
              ctrl_in_start => ctrl_in_start_sig,  -- ufix1
              ctrl_in_end => ctrl_in_end_sig,  -- ufix1
              ctrl_in_valid => ctrl_in_valid_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              data_out => data_out_sig,  -- ufix1
              ctrl_out_start => ctrl_out_start_sig,  -- ufix1
              ctrl_out_end => ctrl_out_end_sig,  -- ufix1
              ctrl_out_valid => ctrl_out_valid_sig,  -- ufix1
              next_frame => next_frame_sig  -- ufix1
              );

  ctrl_in_start_sig <= ctrl_in_start;

  ctrl_in_end_sig <= ctrl_in_end;

  ctrl_in_valid_sig <= ctrl_in_valid;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  data_out <= data_out_sig;

  ctrl_out_start <= ctrl_out_start_sig;

  ctrl_out_end <= ctrl_out_end_sig;

  ctrl_out_valid <= ctrl_out_valid_sig;

  next_frame <= next_frame_sig;

END rtl;

