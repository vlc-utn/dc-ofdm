-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLLDPCDecoder/ldpc_1_16_12_ip_src_AposterioriUnit.vhd
-- Created: 2024-08-10 15:39:48
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ldpc_1_16_12_ip_src_AposterioriUnit
-- Source Path: HDLLDPCDecoder/reduced_ldpc_rx_HDL_resource_test/Hc_12S_B80/DecoderCore/FunctionalUnit/AposterioriUnit
-- Hierarchy Level: 4
-- Model version: 1.12
-- 
-- Aposteriori Node Unit
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.ldpc_1_16_12_ip_src_reduced_ldpc_rx_HDL_resource_test_pac.ALL;

ENTITY ldpc_1_16_12_ip_src_AposterioriUnit IS
  PORT( alpha                             :   IN    vector_of_std_logic_vector18(0 TO 79);  -- sfix18_En12 [80]
        beta                              :   IN    vector_of_std_logic_vector16(0 TO 79);  -- sfix16_En12 [80]
        valid                             :   IN    std_logic;  -- ufix1
        gamma                             :   OUT   vector_of_std_logic_vector18(0 TO 79);  -- sfix18_En12 [80]
        valid_1                           :   OUT   std_logic  -- ufix1
        );
END ldpc_1_16_12_ip_src_AposterioriUnit;


ARCHITECTURE rtl OF ldpc_1_16_12_ip_src_AposterioriUnit IS

  -- Signals
  SIGNAL alpha_signed                     : vector_of_signed18(0 TO 79);  -- sfix18_En12 [80]
  SIGNAL beta_signed                      : vector_of_signed16(0 TO 79);  -- sfix16_En12 [80]
  SIGNAL add_Comp_add_cast                : vector_of_signed19(0 TO 79);  -- sfix19_En12 [80]
  SIGNAL add_Comp_add_cast_1              : vector_of_signed18(0 TO 79);  -- sfix18_En12 [80]
  SIGNAL add_Comp_add_cast_2              : vector_of_signed19(0 TO 79);  -- sfix19_En12 [80]
  SIGNAL add_Comp_add_temp                : vector_of_signed19(0 TO 79);  -- sfix19_En12 [80]
  SIGNAL add                              : vector_of_signed18(0 TO 79);  -- sfix18_En12 [80]

BEGIN
  outputgen2: FOR k IN 0 TO 79 GENERATE
    alpha_signed(k) <= signed(alpha(k));
  END GENERATE;

  outputgen1: FOR k IN 0 TO 79 GENERATE
    beta_signed(k) <= signed(beta(k));
  END GENERATE;


  add_gen: FOR t_0 IN 0 TO 79 GENERATE
    add_Comp_add_cast(t_0) <= resize(alpha_signed(t_0), 19);
    add_Comp_add_cast_1(t_0) <= resize(beta_signed(t_0), 18);
    add_Comp_add_cast_2(t_0) <= resize(add_Comp_add_cast_1(t_0), 19);
    add_Comp_add_temp(t_0) <= add_Comp_add_cast(t_0) + add_Comp_add_cast_2(t_0);
    
    add(t_0) <= "011111111111111111" WHEN (add_Comp_add_temp(t_0)(18) = '0') AND (add_Comp_add_temp(t_0)(17) /= '0') ELSE
        "100000000000000000" WHEN (add_Comp_add_temp(t_0)(18) = '1') AND (add_Comp_add_temp(t_0)(17) /= '1') ELSE
        add_Comp_add_temp(t_0)(17 DOWNTO 0);
  END GENERATE add_gen;


  outputgen: FOR k IN 0 TO 79 GENERATE
    gamma(k) <= std_logic_vector(add(k));
  END GENERATE;

  valid_1 <= valid;

END rtl;

