-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/IEEE_8021513_RX_src_Quadrant_Correction.vhd
-- Created: 2024-11-23 11:22:02
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_RX_src_Quadrant_Correction
-- Source Path: HDLRx/full_rx/rx_demodulator_full/ofdm_symbol_sync/phase_offset_calculator/HDL_CMA_core/Quadrant_Correction
-- Hierarchy Level: 5
-- Model version: 1.147
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY IEEE_8021513_RX_src_Quadrant_Correction IS
  PORT( zin                               :   IN    std_logic_vector(22 DOWNTO 0);  -- sfix23_En22
        QA_Control                        :   IN    std_logic_vector(4 DOWNTO 0);  -- ufix5
        zout                              :   OUT   std_logic_vector(22 DOWNTO 0)  -- sfix23_En22
        );
END IEEE_8021513_RX_src_Quadrant_Correction;


ARCHITECTURE rtl OF IEEE_8021513_RX_src_Quadrant_Correction IS

  -- Signals
  SIGNAL QA_Control_unsigned              : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL yZeroXPositive                   : std_logic;  -- ufix1
  SIGNAL yZeroXNegative                   : std_logic;  -- ufix1
  SIGNAL xyNegative                       : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL AbsRel                           : std_logic;  -- ufix1
  SIGNAL pidivtwo                         : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL zin_signed                       : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL pivdivtwosubout                  : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL mux1out                          : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL Negation_cast                    : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL Negation_cast_1                  : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL Negation_cast_2                  : signed(24 DOWNTO 0);  -- sfix25_En22
  SIGNAL mux1out_negate                   : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL pionepos                         : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL pi_subtraction                   : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL pioneneg                         : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL negpi_addition                   : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL mux2out                          : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL mux5out                          : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL zero                             : signed(22 DOWNTO 0);  -- sfix23_En22
  SIGNAL mux6out                          : signed(22 DOWNTO 0);  -- sfix23_En22

BEGIN
  QA_Control_unsigned <= unsigned(QA_Control);

  yZeroXPositive <= QA_Control_unsigned(4);

  yZeroXNegative <= QA_Control_unsigned(3);

  xyNegative <= QA_Control_unsigned(1 DOWNTO 0);

  AbsRel <= QA_Control_unsigned(2);

  pidivtwo <= to_signed(16#200000#, 23);

  zin_signed <= signed(zin);

  pivdivtwosubout <= pidivtwo - zin_signed;

  
  mux1out <= pivdivtwosubout WHEN AbsRel = '0' ELSE
      zin_signed;

  Negation_cast <= resize(mux1out, 24);
  Negation_cast_1 <=  - (Negation_cast);
  Negation_cast_2 <= resize(Negation_cast_1, 25);
  mux1out_negate <= Negation_cast_2(22 DOWNTO 0);

  pionepos <= to_signed(16#3FFFFF#, 23);

  pi_subtraction <= pionepos - mux1out;

  pioneneg <= to_signed(-16#400000#, 23);

  negpi_addition <= pioneneg + mux1out;

  
  mux2out <= mux1out WHEN xyNegative = to_unsigned(16#0#, 2) ELSE
      mux1out_negate WHEN xyNegative = to_unsigned(16#1#, 2) ELSE
      pi_subtraction WHEN xyNegative = to_unsigned(16#2#, 2) ELSE
      negpi_addition;

  
  mux5out <= mux2out WHEN yZeroXNegative = '0' ELSE
      pionepos;

  zero <= to_signed(16#000000#, 23);

  
  mux6out <= mux5out WHEN yZeroXPositive = '0' ELSE
      zero;

  zout <= std_logic_vector(mux6out);

END rtl;

