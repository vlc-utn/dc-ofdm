-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/full_tx_ip_sync_receive_clk.vhd
-- Created: 2024-06-30 19:39:47
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_tx_ip_sync_receive_clk
-- Source Path: full_tx_ip/full_tx_ip_axi_lite/full_tx_ip_pulse_sync/full_tx_ip_sync_receive_clk
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_tx_ip_sync_receive_clk IS
  PORT( i_receive_clk                     :   IN    std_logic;  -- ufix1
        i_receive_rst                     :   IN    std_logic;  -- ufix1
        i_level_send                      :   IN    std_logic;  -- ufix1
        o_receive_pulse                   :   OUT   std_logic;  -- ufix1
        o_receive_level                   :   OUT   std_logic  -- ufix1
        );
END full_tx_ip_sync_receive_clk;


ARCHITECTURE rtl OF full_tx_ip_sync_receive_clk IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL const_1                          : std_logic;  -- ufix1
  SIGNAL s_level_2FlopSync1               : std_logic;  -- ufix1
  SIGNAL s_level_2FlopSync2               : std_logic;  -- ufix1
  SIGNAL s_level_2FlopSync_delayed        : std_logic;  -- ufix1

  ATTRIBUTE cdc_info : string;
  ATTRIBUTE dont_touch : boolean;

  ATTRIBUTE cdc_info OF s_level_2FlopSync1 : SIGNAL IS "synchronizer_false_path";
  ATTRIBUTE dont_touch OF s_level_2FlopSync1 : SIGNAL IS true;

BEGIN
  const_1 <= '1';

  enb <= const_1;

  reg_level_2FlopSync1_process : PROCESS (i_receive_clk)
  BEGIN
    IF i_receive_clk'EVENT AND i_receive_clk = '1' THEN
      IF i_receive_rst = '1' THEN
        s_level_2FlopSync1 <= '0';
      ELSIF enb = '1' THEN
        s_level_2FlopSync1 <= i_level_send;
      END IF;
    END IF;
  END PROCESS reg_level_2FlopSync1_process;


  reg_level_2FlopSync2_process : PROCESS (i_receive_clk)
  BEGIN
    IF i_receive_clk'EVENT AND i_receive_clk = '1' THEN
      IF i_receive_rst = '1' THEN
        s_level_2FlopSync2 <= '0';
      ELSIF enb = '1' THEN
        s_level_2FlopSync2 <= s_level_2FlopSync1;
      END IF;
    END IF;
  END PROCESS reg_level_2FlopSync2_process;


  reg_process : PROCESS (i_receive_clk)
  BEGIN
    IF i_receive_clk'EVENT AND i_receive_clk = '1' THEN
      IF i_receive_rst = '1' THEN
        s_level_2FlopSync_delayed <= '0';
      ELSIF enb = '1' THEN
        s_level_2FlopSync_delayed <= s_level_2FlopSync2;
      END IF;
    END IF;
  END PROCESS reg_process;


  o_receive_pulse <= s_level_2FlopSync2 XOR s_level_2FlopSync_delayed;

  o_receive_level <= s_level_2FlopSync_delayed;

END rtl;

