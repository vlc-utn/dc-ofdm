-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/full_tx_ip_dut.vhd
-- Created: 2024-06-30 19:39:47
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_tx_ip_dut
-- Source Path: full_tx_ip/full_tx_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_tx_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        new_frame_in                      :   IN    std_logic;  -- ufix1
        reg0                              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        reg1                              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        reg2                              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        reg3                              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        data_in                           :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        valid_in                          :   IN    std_logic;  -- ufix1
        last_frame                        :   IN    std_logic;  -- ufix1
        ce_out_0                          :   OUT   std_logic;  -- ufix1
        ce_out_1                          :   OUT   std_logic;  -- ufix1
        data_out                          :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        valid_out                         :   OUT   std_logic;  -- ufix1
        ready                             :   OUT   std_logic  -- ufix1
        );
END full_tx_ip_dut;


ARCHITECTURE rtl OF full_tx_ip_dut IS

  -- Component Declarations
  COMPONENT full_tx_ip_src_full_tx
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          new_frame_in                    :   IN    std_logic;  -- ufix1
          reg0                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          reg1                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          reg2                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          reg3                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          valid_in                        :   IN    std_logic;  -- ufix1
          last_frame                      :   IN    std_logic;  -- ufix1
          ce_out_0                        :   OUT   std_logic;  -- ufix1
          ce_out_1                        :   OUT   std_logic;  -- ufix1
          data_out                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          valid_out                       :   OUT   std_logic;  -- ufix1
          ready                           :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_tx_ip_src_full_tx
    USE ENTITY work.full_tx_ip_src_full_tx(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL new_frame_in_sig                 : std_logic;  -- ufix1
  SIGNAL valid_in_sig                     : std_logic;  -- ufix1
  SIGNAL last_frame_sig                   : std_logic;  -- ufix1
  SIGNAL ce_out_0_sig                     : std_logic;  -- ufix1
  SIGNAL ce_out_1_sig                     : std_logic;  -- ufix1
  SIGNAL data_out_sig                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL valid_out_sig                    : std_logic;  -- ufix1
  SIGNAL ready_sig                        : std_logic;  -- ufix1

BEGIN
  u_full_tx_ip_src_full_tx : full_tx_ip_src_full_tx
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset_x => reset_x,
              new_frame_in => new_frame_in_sig,  -- ufix1
              reg0 => reg0,  -- ufix32
              reg1 => reg1,  -- ufix32
              reg2 => reg2,  -- ufix32
              reg3 => reg3,  -- ufix32
              data_in => data_in,  -- ufix8
              valid_in => valid_in_sig,  -- ufix1
              last_frame => last_frame_sig,  -- ufix1
              ce_out_0 => ce_out_0_sig,  -- ufix1
              ce_out_1 => ce_out_1_sig,  -- ufix1
              data_out => data_out_sig,  -- sfix16_En14
              valid_out => valid_out_sig,  -- ufix1
              ready => ready_sig  -- ufix1
              );

  new_frame_in_sig <= new_frame_in;

  valid_in_sig <= valid_in;

  last_frame_sig <= last_frame;

  enb <= dut_enable;

  ce_out_0 <= ce_out_0_sig;

  ce_out_1 <= ce_out_1_sig;

  data_out <= data_out_sig;

  valid_out <= valid_out_sig;

  ready <= ready_sig;

END rtl;

