-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/full_tx_ip_src_one_hot_coder.vhd
-- Created: 2024-06-30 19:38:40
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_tx_ip_src_one_hot_coder
-- Source Path: HDLTx/full_tx/write_frame_to_ram/ram_formatting/one_hot_coder
-- Hierarchy Level: 3
-- Model version: 4.75
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_tx_ip_src_one_hot_coder IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        channel_valid                     :   IN    std_logic;
        header_valid                      :   IN    std_logic;
        payload_valid                     :   IN    std_logic;
        data_select                       :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
        );
END full_tx_ip_src_one_hot_coder;


ARCHITECTURE rtl OF full_tx_ip_src_one_hot_coder IS

  -- Signals
  SIGNAL delayMatch_reg                   : std_logic_vector(2 DOWNTO 0);  -- ufix1 [3]
  SIGNAL header_valid_1                   : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL delayMatch1_reg                  : std_logic_vector(2 DOWNTO 0);  -- ufix1 [3]
  SIGNAL channel_valid_1                  : std_logic;
  SIGNAL Logical_Operator1_out1           : std_logic;
  SIGNAL Bit_Concat_out1                  : unsigned(1 DOWNTO 0);  -- ufix2

BEGIN
  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch_reg <= (OTHERS => '0');
      ELSIF enb_1_2_0 = '1' THEN
        delayMatch_reg(0) <= header_valid;
        delayMatch_reg(2 DOWNTO 1) <= delayMatch_reg(1 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  header_valid_1 <= delayMatch_reg(2);

  Logical_Operator_out1 <= header_valid_1 OR payload_valid;

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch1_reg <= (OTHERS => '0');
      ELSIF enb_1_2_0 = '1' THEN
        delayMatch1_reg(0) <= channel_valid;
        delayMatch1_reg(2 DOWNTO 1) <= delayMatch1_reg(1 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  channel_valid_1 <= delayMatch1_reg(2);

  Logical_Operator1_out1 <= payload_valid OR channel_valid_1;

  Bit_Concat_out1 <= unsigned'(Logical_Operator_out1 & Logical_Operator1_out1);

  data_select <= std_logic_vector(Bit_Concat_out1);

END rtl;

