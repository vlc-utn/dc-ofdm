-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLOFDMSS/ofdm_ss_ip_dut.vhd
-- Created: 2024-10-01 22:57:33
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_ss_ip_dut
-- Source Path: ofdm_ss_ip/ofdm_ss_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_ss_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        data_in_r                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        data_in_i                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        ce_out                            :   OUT   std_logic;  -- ufix1
        data_out_r                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        data_out_i                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        peak_out                          :   OUT   std_logic;  -- ufix1
        phase_offset                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        M_d                               :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        reset_ofdm                        :   OUT   std_logic  -- ufix1
        );
END ofdm_ss_ip_dut;


ARCHITECTURE rtl OF ofdm_ss_ip_dut IS

  -- Component Declarations
  COMPONENT ofdm_ss_ip_src_hdl_wrapper
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          data_in_r                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          data_in_i                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          ce_out                          :   OUT   std_logic;  -- ufix1
          data_out_r                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          data_out_i                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          peak_out                        :   OUT   std_logic;  -- ufix1
          phase_offset                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          M_d                             :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          reset_ofdm                      :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ofdm_ss_ip_src_hdl_wrapper
    USE ENTITY work.ofdm_ss_ip_src_hdl_wrapper(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL data_out_r_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL data_out_i_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL peak_out_sig                     : std_logic;  -- ufix1
  SIGNAL phase_offset_sig                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL M_d_sig                          : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL reset_ofdm_sig                   : std_logic;  -- ufix1

BEGIN
  u_ofdm_ss_ip_src_hdl_wrapper : ofdm_ss_ip_src_hdl_wrapper
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset_x => reset_x,
              data_in_r => data_in_r,  -- sfix16_En14
              data_in_i => data_in_i,  -- sfix16_En14
              ce_out => ce_out_sig,  -- ufix1
              data_out_r => data_out_r_sig,  -- sfix16_En14
              data_out_i => data_out_i_sig,  -- sfix16_En14
              peak_out => peak_out_sig,  -- ufix1
              phase_offset => phase_offset_sig,  -- sfix16_En15
              M_d => M_d_sig,  -- sfix16_En14
              reset_ofdm => reset_ofdm_sig  -- ufix1
              );

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  data_out_r <= data_out_r_sig;

  data_out_i <= data_out_i_sig;

  peak_out <= peak_out_sig;

  phase_offset <= phase_offset_sig;

  M_d <= M_d_sig;

  reset_ofdm <= reset_ofdm_sig;

END rtl;

