-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_CPRemoval_stage1.vhd
-- Created: 2024-08-10 11:14:30
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_CPRemoval_stage1
-- Source Path: 
-- Hierarchy Level: 4
-- Model version: 1.14
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_rx_ip_src_full_rx_pac.ALL;

ENTITY full_rx_ip_src_CPRemoval_stage1 IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        varargin_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        varargin_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        varargin_2                        :   IN    std_logic;
        varargin_3                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargin_5                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargin_6                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargin_7                        :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargout_1_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        varargout_1_im                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        varargout_2                       :   OUT   std_logic;
        varargout_3                       :   OUT   std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargout_5                       :   OUT   std_logic_vector(9 DOWNTO 0);  -- ufix10
        varargout_6                       :   OUT   std_logic_vector(9 DOWNTO 0)  -- ufix10
        );
END full_rx_ip_src_CPRemoval_stage1;


ARCHITECTURE rtl OF full_rx_ip_src_CPRemoval_stage1 IS

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL tmp                              : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_validInReg : std_logic;
  SIGNAL varargin_5_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_CPReg    : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargin_3_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_FFTReg   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_sampCnt  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_1                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_idxposF  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_CPLenSmpld : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_FCPPlusVec : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p88obj_CPRemoval_stage1Obj_FCPPlusVec_add_temp : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL obj_CPRemoval_stage1Obj_sampCnt_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_nextSymSamplesF : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p73obj_CPRemoval_stage1Obj_nextSymSamplesF_sub_temp : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL obj_CPRemoval_stage1Obj_nextSym  : std_logic;
  SIGNAL tmp_2                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p69tmp_sub_cast                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL p69tmp_sub_cast_1                : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL p69tmp_sub_temp                  : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL p69tmp_cast                      : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL obj_CPRemoval_stage1Obj_FFTPlusCPMinVec : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s                                : std_logic;
  SIGNAL tmp_3                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_4                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_1                              : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_FFTLenSampled : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_5                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_6                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_add_temp : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast_1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast_2 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_temp : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_cast : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL s_2                              : std_logic;
  SIGNAL tmp_7                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_8                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_sampCntReg : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_3                              : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_CPLenSampled : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_9                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_CPPlusVec : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p87obj_CPRemoval_stage1Obj_CPPlusVec_add_temp : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL tmp_10                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p75tmp_sub_temp                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL obj_CPRemoval_stage1Obj_nextSymSamples : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_4                              : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_idxpos   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_11                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_12                           : std_logic;
  SIGNAL tmp_13                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_14                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_idxpos_1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_15                           : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_ctrlSig  : std_logic;
  SIGNAL tmp_16                           : std_logic;
  SIGNAL tmp_17                           : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_ctrlSig_1 : std_logic;
  SIGNAL tmp_18                           : std_logic;
  SIGNAL tmp_19                           : std_logic;
  SIGNAL tmp_20                           : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_validInReg2_reg_reg : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL obj_CPRemoval_stage1Obj_validInReg2 : std_logic;
  SIGNAL s_5                              : std_logic;
  SIGNAL cond                             : std_logic;
  SIGNAL varargin_1_re_signed             : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL varargin_1_im_signed             : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataReg_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataReg_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataInReg_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataInReg_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re                           : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im                           : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataInReg1_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataInReg1_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataInReg2_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataInReg2_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re_1                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im_1                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataOutReg_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataOutReg_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_re_2                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_im_2                         : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataOut_reg_reg_re : vector_of_signed16(0 TO 2);  -- sfix16_En12 [3]
  SIGNAL obj_CPRemoval_stage1Obj_dataOut_reg_reg_im : vector_of_signed16(0 TO 2);  -- sfix16_En12 [3]
  SIGNAL obj_CPRemoval_stage1Obj_dataOut_re : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL obj_CPRemoval_stage1Obj_dataOut_im : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL s_6                              : std_logic;
  SIGNAL tmp_21                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL p91tmp_add_temp                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL obj_CPRemoval_stage1Obj_FFTPlusCPF : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL s_7                              : std_logic;
  SIGNAL out_rsvd                         : std_logic;
  SIGNAL out_rsvd_1                       : std_logic;
  SIGNAL out_rsvd_2                       : std_logic;
  SIGNAL tmp_22                           : std_logic;
  SIGNAL tmp_23                           : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_validOutReg : std_logic;
  SIGNAL s_8                              : std_logic;
  SIGNAL out_rsvd_3                       : std_logic;
  SIGNAL out_rsvd_4                       : std_logic;
  SIGNAL tmp_24                           : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_validOut_reg_reg : std_logic_vector(4 DOWNTO 0);  -- ufix1 [5]
  SIGNAL obj_CPRemoval_stage1Obj_validOut : std_logic;
  SIGNAL obj_CPRemoval_stage1Obj_FFTLengthDelay1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_FFTLengthDelay2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_FFTLengthDelay3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_FFTLengthReg : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargin_6_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_LGaurdSub1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_LGaurdSubReg : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_25                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_LGaurdDelay1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_LGaurdDelay2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_LGaurdDelay3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_LGaurdSubRegOut : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL varargin_7_unsigned              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_RGaurdSub1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_RGaurdSubReg : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_26                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_RGaurdDelay1 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_RGaurdDelay2 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_RGaurdDelay3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL obj_CPRemoval_stage1Obj_RGaurdSubRegOut : unsigned(9 DOWNTO 0);  -- ufix10

BEGIN
  tmp <= varargin_2;

  obj_CPRemoval_stage1Obj_validInReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_validInReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_validInReg <= tmp;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_validInReg_reg_process;


  varargin_5_unsigned <= unsigned(varargin_5);

  obj_CPRemoval_stage1Obj_CPReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_CPReg <= to_unsigned(16#010#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_CPReg <= varargin_5_unsigned;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_CPReg_reg_process;


  varargin_3_unsigned <= unsigned(varargin_3);

  obj_CPRemoval_stage1Obj_FFTReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_FFTReg <= to_unsigned(16#040#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_FFTReg <= varargin_3_unsigned;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_FFTReg_reg_process;


  obj_CPRemoval_stage1Obj_sampCnt <= to_unsigned(16#000#, 10);

  obj_CPRemoval_stage1Obj_idxposF_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_idxposF <= to_unsigned(16#000#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_idxposF <= tmp_1;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_idxposF_reg_process;


  p88obj_CPRemoval_stage1Obj_FCPPlusVec_add_temp <= resize(obj_CPRemoval_stage1Obj_CPLenSmpld, 11) + to_unsigned(16#001#, 11);
  
  obj_CPRemoval_stage1Obj_FCPPlusVec <= "1111111111" WHEN p88obj_CPRemoval_stage1Obj_FCPPlusVec_add_temp(10) /= '0' ELSE
      p88obj_CPRemoval_stage1Obj_FCPPlusVec_add_temp(9 DOWNTO 0);

  p73obj_CPRemoval_stage1Obj_nextSymSamplesF_sub_temp <= resize(obj_CPRemoval_stage1Obj_FCPPlusVec, 11) - resize(obj_CPRemoval_stage1Obj_sampCnt_1, 11);
  
  obj_CPRemoval_stage1Obj_nextSymSamplesF <= "1111111111" WHEN p73obj_CPRemoval_stage1Obj_nextSymSamplesF_sub_temp(10) /= '0' ELSE
      p73obj_CPRemoval_stage1Obj_nextSymSamplesF_sub_temp(9 DOWNTO 0);

  
  obj_CPRemoval_stage1Obj_nextSym <= '1' WHEN obj_CPRemoval_stage1Obj_nextSymSamplesF < to_unsigned(16#001#, 10) ELSE
      '0';

  
  tmp_1 <= obj_CPRemoval_stage1Obj_idxposF WHEN obj_CPRemoval_stage1Obj_nextSym = '0' ELSE
      obj_CPRemoval_stage1Obj_nextSymSamplesF;

  p69tmp_sub_cast <= resize(tmp_1, 11);
  p69tmp_sub_cast_1 <= signed(resize(p69tmp_sub_cast, 12));
  p69tmp_sub_temp <= to_signed(16#001#, 12) - p69tmp_sub_cast_1;
  
  p69tmp_cast <= "00000000000" WHEN p69tmp_sub_temp(11) = '1' ELSE
      unsigned(p69tmp_sub_temp(10 DOWNTO 0));
  tmp_2 <= p69tmp_cast(9 DOWNTO 0);

  
  s <= '1' WHEN obj_CPRemoval_stage1Obj_sampCnt_1 = obj_CPRemoval_stage1Obj_FFTPlusCPMinVec ELSE
      '0';

  
  tmp_3 <= tmp_2 WHEN s = '0' ELSE
      obj_CPRemoval_stage1Obj_sampCnt;

  tmp_4 <= obj_CPRemoval_stage1Obj_sampCnt_1 + to_unsigned(16#001#, 10);

  
  tmp_5 <= obj_CPRemoval_stage1Obj_FFTLenSampled WHEN s_1 = '0' ELSE
      obj_CPRemoval_stage1Obj_FFTReg;

  obj_CPRemoval_stage1Obj_FFTLenSampled_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_FFTLenSampled <= to_unsigned(16#100#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_FFTLenSampled <= tmp_5;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_FFTLenSampled_reg_process;


  s_1 <= hdlcoder_to_stdlogic(obj_CPRemoval_stage1Obj_sampCnt_1 < to_unsigned(16#001#, 10)) AND obj_CPRemoval_stage1Obj_validInReg;

  
  tmp_6 <= obj_CPRemoval_stage1Obj_CPLenSmpld WHEN s_1 = '0' ELSE
      obj_CPRemoval_stage1Obj_CPReg;

  obj_CPRemoval_stage1Obj_CPLenSmpld_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_CPLenSmpld <= to_unsigned(16#010#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_CPLenSmpld <= tmp_6;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_CPLenSmpld_reg_process;


  p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_add_temp <= resize(obj_CPRemoval_stage1Obj_CPLenSmpld, 11) + resize(obj_CPRemoval_stage1Obj_FFTLenSampled, 11);
  
  p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast <= "1111111111" WHEN p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_add_temp(10) /= '0' ELSE
      p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_add_temp(9 DOWNTO 0);
  p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast_1 <= resize(p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast, 11);
  p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast_2 <= signed(resize(p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast_1, 12));
  p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_temp <= p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_cast_2 - to_signed(16#001#, 12);
  
  p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_cast <= "00000000000" WHEN p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_temp(11) = '1' ELSE
      unsigned(p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_sub_temp(10 DOWNTO 0));
  
  obj_CPRemoval_stage1Obj_FFTPlusCPMinVec <= "1111111111" WHEN p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_cast(10) /= '0' ELSE
      p89obj_CPRemoval_stage1Obj_FFTPlusCPMinVec_cast(9 DOWNTO 0);

  
  s_2 <= '1' WHEN obj_CPRemoval_stage1Obj_sampCnt_1 >= obj_CPRemoval_stage1Obj_FFTPlusCPMinVec ELSE
      '0';

  
  tmp_7 <= tmp_4 WHEN s_2 = '0' ELSE
      tmp_3;

  
  tmp_8 <= obj_CPRemoval_stage1Obj_sampCnt_1 WHEN obj_CPRemoval_stage1Obj_validInReg = '0' ELSE
      tmp_7;

  obj_CPRemoval_stage1Obj_sampCnt_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_sampCnt_1 <= to_unsigned(16#000#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_sampCnt_1 <= tmp_8;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_sampCnt_reg_process;


  obj_CPRemoval_stage1Obj_sampCntReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_sampCntReg <= to_unsigned(16#000#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_sampCntReg <= obj_CPRemoval_stage1Obj_sampCnt_1;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_sampCntReg_reg_process;


  
  s_3 <= '1' WHEN obj_CPRemoval_stage1Obj_sampCntReg = to_unsigned(16#000#, 10) ELSE
      '0';

  
  tmp_9 <= obj_CPRemoval_stage1Obj_CPLenSampled WHEN s_1 = '0' ELSE
      obj_CPRemoval_stage1Obj_CPReg;

  obj_CPRemoval_stage1Obj_CPLenSampled_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_CPLenSampled <= to_unsigned(16#001#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_CPLenSampled <= tmp_9;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_CPLenSampled_reg_process;


  p87obj_CPRemoval_stage1Obj_CPPlusVec_add_temp <= resize(obj_CPRemoval_stage1Obj_CPLenSampled, 11) + to_unsigned(16#001#, 11);
  
  obj_CPRemoval_stage1Obj_CPPlusVec <= "1111111111" WHEN p87obj_CPRemoval_stage1Obj_CPPlusVec_add_temp(10) /= '0' ELSE
      p87obj_CPRemoval_stage1Obj_CPPlusVec_add_temp(9 DOWNTO 0);

  p75tmp_sub_temp <= resize(obj_CPRemoval_stage1Obj_CPPlusVec, 11) - resize(obj_CPRemoval_stage1Obj_sampCnt_1, 11);
  
  tmp_10 <= "1111111111" WHEN p75tmp_sub_temp(10) /= '0' ELSE
      p75tmp_sub_temp(9 DOWNTO 0);

  obj_CPRemoval_stage1Obj_nextSymSamples_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_nextSymSamples <= to_unsigned(16#001#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_nextSymSamples <= tmp_10;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_nextSymSamples_reg_process;


  
  s_4 <= '1' WHEN obj_CPRemoval_stage1Obj_nextSymSamples < to_unsigned(16#001#, 10) ELSE
      '0';

  obj_CPRemoval_stage1Obj_idxpos <= to_unsigned(16#001#, 10);

  
  tmp_12 <= '1' WHEN tmp_11 /= to_unsigned(16#000#, 10) ELSE
      '0';

  
  tmp_13 <= tmp_11 WHEN tmp_12 = '0' ELSE
      obj_CPRemoval_stage1Obj_idxpos;

  obj_CPRemoval_stage1Obj_idxpos_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_idxpos_1 <= to_unsigned(16#000#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_idxpos_1 <= tmp_14;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_idxpos_reg_process;


  
  tmp_11 <= obj_CPRemoval_stage1Obj_idxpos_1 WHEN s_4 = '0' ELSE
      obj_CPRemoval_stage1Obj_nextSymSamples;

  
  tmp_14 <= tmp_11 WHEN s_3 = '0' ELSE
      tmp_13;

  
  tmp_15 <= '1' WHEN tmp_14 /= to_unsigned(16#000#, 10) ELSE
      '0';

  obj_CPRemoval_stage1Obj_ctrlSig <= '0';

  
  tmp_17 <= tmp_16 WHEN s_2 = '0' ELSE
      obj_CPRemoval_stage1Obj_ctrlSig;

  tmp_18 <=  NOT obj_CPRemoval_stage1Obj_ctrlSig_1;

  
  tmp_19 <= obj_CPRemoval_stage1Obj_ctrlSig_1 WHEN tmp_15 = '0' ELSE
      tmp_18;

  
  tmp_16 <= obj_CPRemoval_stage1Obj_ctrlSig_1 WHEN obj_CPRemoval_stage1Obj_validInReg = '0' ELSE
      tmp_19;

  
  tmp_20 <= tmp_16 WHEN obj_CPRemoval_stage1Obj_validInReg = '0' ELSE
      tmp_17;

  obj_CPRemoval_stage1Obj_ctrlSig_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_ctrlSig_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_ctrlSig_1 <= tmp_20;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_ctrlSig_reg_process;


  obj_CPRemoval_stage1Obj_validInReg2_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_validInReg2_reg_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_validInReg2_reg_reg(0) <= obj_CPRemoval_stage1Obj_validInReg;
        obj_CPRemoval_stage1Obj_validInReg2_reg_reg(1) <= obj_CPRemoval_stage1Obj_validInReg2_reg_reg(0);
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_validInReg2_reg_process;

  obj_CPRemoval_stage1Obj_validInReg2 <= obj_CPRemoval_stage1Obj_validInReg2_reg_reg(1);

  s_5 <= ( NOT obj_CPRemoval_stage1Obj_ctrlSig_1) OR obj_CPRemoval_stage1Obj_validInReg2;

  
  cond <= '1' WHEN obj_CPRemoval_stage1Obj_idxpos_1 < to_unsigned(16#001#, 10) ELSE
      '0';

  varargin_1_re_signed <= signed(varargin_1_re);

  varargin_1_im_signed <= signed(varargin_1_im);

  obj_CPRemoval_stage1Obj_dataReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_dataReg_re <= to_signed(16#0000#, 16);
      obj_CPRemoval_stage1Obj_dataReg_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_dataReg_re <= varargin_1_re_signed;
        obj_CPRemoval_stage1Obj_dataReg_im <= varargin_1_im_signed;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_dataReg_reg_process;


  
  tmp_re <= obj_CPRemoval_stage1Obj_dataInReg_re WHEN obj_CPRemoval_stage1Obj_validInReg = '0' ELSE
      obj_CPRemoval_stage1Obj_dataReg_re;
  
  tmp_im <= obj_CPRemoval_stage1Obj_dataInReg_im WHEN obj_CPRemoval_stage1Obj_validInReg = '0' ELSE
      obj_CPRemoval_stage1Obj_dataReg_im;

  obj_CPRemoval_stage1Obj_dataInReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_dataInReg_re <= to_signed(16#0000#, 16);
      obj_CPRemoval_stage1Obj_dataInReg_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_dataInReg_re <= tmp_re;
        obj_CPRemoval_stage1Obj_dataInReg_im <= tmp_im;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_dataInReg_reg_process;


  obj_CPRemoval_stage1Obj_dataInReg1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_dataInReg1_re <= to_signed(16#0000#, 16);
      obj_CPRemoval_stage1Obj_dataInReg1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_dataInReg1_re <= obj_CPRemoval_stage1Obj_dataInReg_re;
        obj_CPRemoval_stage1Obj_dataInReg1_im <= obj_CPRemoval_stage1Obj_dataInReg_im;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_dataInReg1_reg_process;


  obj_CPRemoval_stage1Obj_dataInReg2_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_dataInReg2_re <= to_signed(16#0000#, 16);
      obj_CPRemoval_stage1Obj_dataInReg2_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_dataInReg2_re <= obj_CPRemoval_stage1Obj_dataInReg1_re;
        obj_CPRemoval_stage1Obj_dataInReg2_im <= obj_CPRemoval_stage1Obj_dataInReg1_im;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_dataInReg2_reg_process;


  
  tmp_re_1 <= obj_CPRemoval_stage1Obj_dataInReg1_re WHEN cond = '0' ELSE
      obj_CPRemoval_stage1Obj_dataInReg2_re;
  
  tmp_im_1 <= obj_CPRemoval_stage1Obj_dataInReg1_im WHEN cond = '0' ELSE
      obj_CPRemoval_stage1Obj_dataInReg2_im;

  
  tmp_re_2 <= obj_CPRemoval_stage1Obj_dataOutReg_re WHEN s_5 = '0' ELSE
      tmp_re_1;
  
  tmp_im_2 <= obj_CPRemoval_stage1Obj_dataOutReg_im WHEN s_5 = '0' ELSE
      tmp_im_1;

  obj_CPRemoval_stage1Obj_dataOutReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_dataOutReg_re <= to_signed(16#0000#, 16);
      obj_CPRemoval_stage1Obj_dataOutReg_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_dataOutReg_re <= tmp_re_2;
        obj_CPRemoval_stage1Obj_dataOutReg_im <= tmp_im_2;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_dataOutReg_reg_process;


  obj_CPRemoval_stage1Obj_dataOut_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_dataOut_reg_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      obj_CPRemoval_stage1Obj_dataOut_reg_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_dataOut_reg_reg_im(0) <= obj_CPRemoval_stage1Obj_dataOutReg_im;
        obj_CPRemoval_stage1Obj_dataOut_reg_reg_im(1 TO 2) <= obj_CPRemoval_stage1Obj_dataOut_reg_reg_im(0 TO 1);
        obj_CPRemoval_stage1Obj_dataOut_reg_reg_re(0) <= obj_CPRemoval_stage1Obj_dataOutReg_re;
        obj_CPRemoval_stage1Obj_dataOut_reg_reg_re(1 TO 2) <= obj_CPRemoval_stage1Obj_dataOut_reg_reg_re(0 TO 1);
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_dataOut_reg_process;

  obj_CPRemoval_stage1Obj_dataOut_re <= obj_CPRemoval_stage1Obj_dataOut_reg_reg_re(2);
  obj_CPRemoval_stage1Obj_dataOut_im <= obj_CPRemoval_stage1Obj_dataOut_reg_reg_im(2);

  varargout_1_re <= std_logic_vector(obj_CPRemoval_stage1Obj_dataOut_re);

  varargout_1_im <= std_logic_vector(obj_CPRemoval_stage1Obj_dataOut_im);

  
  s_6 <= '1' WHEN obj_CPRemoval_stage1Obj_sampCntReg >= obj_CPRemoval_stage1Obj_CPLenSampled ELSE
      '0';

  p91tmp_add_temp <= resize(obj_CPRemoval_stage1Obj_CPLenSampled, 11) + resize(obj_CPRemoval_stage1Obj_FFTLenSampled, 11);
  
  tmp_21 <= "1111111111" WHEN p91tmp_add_temp(10) /= '0' ELSE
      p91tmp_add_temp(9 DOWNTO 0);

  obj_CPRemoval_stage1Obj_FFTPlusCPF_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_FFTPlusCPF <= to_unsigned(16#040#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_FFTPlusCPF <= tmp_21;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_FFTPlusCPF_reg_process;


  
  s_7 <= '1' WHEN obj_CPRemoval_stage1Obj_sampCntReg < obj_CPRemoval_stage1Obj_FFTPlusCPF ELSE
      '0';

  out_rsvd <= '0';

  out_rsvd_1 <= '0';

  out_rsvd_2 <= '1';

  
  tmp_22 <= out_rsvd WHEN s_7 = '0' ELSE
      out_rsvd_2;

  
  tmp_23 <= out_rsvd_1 WHEN s_6 = '0' ELSE
      tmp_22;

  obj_CPRemoval_stage1Obj_validOutReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_validOutReg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_validOutReg <= tmp_23;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_validOutReg_reg_process;


  s_8 <= obj_CPRemoval_stage1Obj_validOutReg AND obj_CPRemoval_stage1Obj_validInReg2;

  out_rsvd_3 <= '0';

  out_rsvd_4 <= '1';

  
  tmp_24 <= out_rsvd_3 WHEN s_8 = '0' ELSE
      out_rsvd_4;

  obj_CPRemoval_stage1Obj_validOut_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_validOut_reg_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_validOut_reg_reg(0) <= tmp_24;
        obj_CPRemoval_stage1Obj_validOut_reg_reg(4 DOWNTO 1) <= obj_CPRemoval_stage1Obj_validOut_reg_reg(3 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_validOut_reg_process;

  obj_CPRemoval_stage1Obj_validOut <= obj_CPRemoval_stage1Obj_validOut_reg_reg(4);

  obj_CPRemoval_stage1Obj_FFTLengthDelay1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_FFTLengthDelay1 <= to_unsigned(16#040#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_FFTLengthDelay1 <= obj_CPRemoval_stage1Obj_FFTLenSampled;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_FFTLengthDelay1_reg_process;


  obj_CPRemoval_stage1Obj_FFTLengthDelay2_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_FFTLengthDelay2 <= to_unsigned(16#040#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_FFTLengthDelay2 <= obj_CPRemoval_stage1Obj_FFTLengthDelay1;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_FFTLengthDelay2_reg_process;


  obj_CPRemoval_stage1Obj_FFTLengthDelay3_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_FFTLengthDelay3 <= to_unsigned(16#040#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_FFTLengthDelay3 <= obj_CPRemoval_stage1Obj_FFTLengthDelay2;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_FFTLengthDelay3_reg_process;


  obj_CPRemoval_stage1Obj_FFTLengthReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_FFTLengthReg <= to_unsigned(16#040#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_FFTLengthReg <= obj_CPRemoval_stage1Obj_FFTLengthDelay3;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_FFTLengthReg_reg_process;


  varargout_3 <= std_logic_vector(obj_CPRemoval_stage1Obj_FFTLengthReg);

  varargin_6_unsigned <= unsigned(varargin_6);

  obj_CPRemoval_stage1Obj_LGaurdSub1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_LGaurdSub1 <= to_unsigned(16#006#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_LGaurdSub1 <= varargin_6_unsigned;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_LGaurdSub1_reg_process;


  
  tmp_25 <= obj_CPRemoval_stage1Obj_LGaurdSubReg WHEN s_1 = '0' ELSE
      obj_CPRemoval_stage1Obj_LGaurdSub1;

  obj_CPRemoval_stage1Obj_LGaurdSubReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_LGaurdSubReg <= to_unsigned(16#006#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_LGaurdSubReg <= tmp_25;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_LGaurdSubReg_reg_process;


  obj_CPRemoval_stage1Obj_LGaurdDelay1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_LGaurdDelay1 <= to_unsigned(16#006#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_LGaurdDelay1 <= obj_CPRemoval_stage1Obj_LGaurdSubReg;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_LGaurdDelay1_reg_process;


  obj_CPRemoval_stage1Obj_LGaurdDelay2_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_LGaurdDelay2 <= to_unsigned(16#006#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_LGaurdDelay2 <= obj_CPRemoval_stage1Obj_LGaurdDelay1;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_LGaurdDelay2_reg_process;


  obj_CPRemoval_stage1Obj_LGaurdDelay3_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_LGaurdDelay3 <= to_unsigned(16#006#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_LGaurdDelay3 <= obj_CPRemoval_stage1Obj_LGaurdDelay2;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_LGaurdDelay3_reg_process;


  obj_CPRemoval_stage1Obj_LGaurdSubRegOut_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_LGaurdSubRegOut <= to_unsigned(16#006#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_LGaurdSubRegOut <= obj_CPRemoval_stage1Obj_LGaurdDelay3;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_LGaurdSubRegOut_reg_process;


  varargout_5 <= std_logic_vector(obj_CPRemoval_stage1Obj_LGaurdSubRegOut);

  varargin_7_unsigned <= unsigned(varargin_7);

  obj_CPRemoval_stage1Obj_RGaurdSub1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_RGaurdSub1 <= to_unsigned(16#005#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_RGaurdSub1 <= varargin_7_unsigned;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_RGaurdSub1_reg_process;


  
  tmp_26 <= obj_CPRemoval_stage1Obj_RGaurdSubReg WHEN s_1 = '0' ELSE
      obj_CPRemoval_stage1Obj_RGaurdSub1;

  obj_CPRemoval_stage1Obj_RGaurdSubReg_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_RGaurdSubReg <= to_unsigned(16#005#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_RGaurdSubReg <= tmp_26;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_RGaurdSubReg_reg_process;


  obj_CPRemoval_stage1Obj_RGaurdDelay1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_RGaurdDelay1 <= to_unsigned(16#005#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_RGaurdDelay1 <= obj_CPRemoval_stage1Obj_RGaurdSubReg;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_RGaurdDelay1_reg_process;


  obj_CPRemoval_stage1Obj_RGaurdDelay2_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_RGaurdDelay2 <= to_unsigned(16#005#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_RGaurdDelay2 <= obj_CPRemoval_stage1Obj_RGaurdDelay1;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_RGaurdDelay2_reg_process;


  obj_CPRemoval_stage1Obj_RGaurdDelay3_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_RGaurdDelay3 <= to_unsigned(16#005#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_RGaurdDelay3 <= obj_CPRemoval_stage1Obj_RGaurdDelay2;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_RGaurdDelay3_reg_process;


  obj_CPRemoval_stage1Obj_RGaurdSubRegOut_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      obj_CPRemoval_stage1Obj_RGaurdSubRegOut <= to_unsigned(16#005#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        obj_CPRemoval_stage1Obj_RGaurdSubRegOut <= obj_CPRemoval_stage1Obj_RGaurdDelay3;
      END IF;
    END IF;
  END PROCESS obj_CPRemoval_stage1Obj_RGaurdSubRegOut_reg_process;


  varargout_6 <= std_logic_vector(obj_CPRemoval_stage1Obj_RGaurdSubRegOut);

  varargout_2 <= obj_CPRemoval_stage1Obj_validOut;

END rtl;

