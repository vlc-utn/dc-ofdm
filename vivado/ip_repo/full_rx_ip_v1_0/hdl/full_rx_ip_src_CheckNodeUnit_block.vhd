-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_CheckNodeUnit_block.vhd
-- Created: 2024-10-02 12:29:28
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_CheckNodeUnit_block
-- Source Path: HDLRx/full_rx/rx_payload_full/reduced_ldpc_rx/Hc_12S_B80/DecoderCore/FunctionalUnit/CheckNodeUnit
-- Hierarchy Level: 6
-- Model version: 1.100
-- 
-- Check Node Unit
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_rx_ip_src_full_rx_pac.ALL;

ENTITY full_rx_ip_src_CheckNodeUnit_block IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        data                              :   IN    vector_of_std_logic_vector16(0 TO 79);  -- sfix16_En12 [80]
        valid                             :   IN    std_logic;  -- ufix1
        count                             :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        reset                             :   IN    std_logic;  -- ufix1
        cnuDecomp1                        :   OUT   vector_of_std_logic_vector7(0 TO 79);  -- ufix7 [80]
        cnuDecomp2                        :   OUT   vector_of_std_logic_vector4(0 TO 79);  -- ufix4 [80]
        cnuDecomp3                        :   OUT   vector_of_std_logic_vector30(0 TO 79);  -- ufix30 [80]
        cnuvalid                          :   OUT   std_logic  -- ufix1
        );
END full_rx_ip_src_CheckNodeUnit_block;


ARCHITECTURE rtl OF full_rx_ip_src_CheckNodeUnit_block IS

  -- Constants
  CONSTANT minCalculation_data            : vector_of_unsigned7(0 TO 8) := 
    (to_unsigned(16#01#, 7), to_unsigned(16#40#, 7), to_unsigned(16#20#, 7), to_unsigned(16#10#, 7),
     to_unsigned(16#08#, 7), to_unsigned(16#04#, 7), to_unsigned(16#02#, 7), to_unsigned(16#01#, 7),
     to_unsigned(16#01#, 7));  -- ufix7 [9]

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;

  -- HDLCODER_TO_SIGNED
  FUNCTION hdlcoder_to_signed(arg: boolean; width: integer) RETURN signed IS
  BEGIN
    IF arg THEN
      RETURN to_signed(1, width);
    ELSE
      RETURN to_signed(0, width);
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL data_signed                      : vector_of_signed16(0 TO 79);  -- sfix16_En12 [80]
  SIGNAL alpha_reg                        : vector_of_signed16(0 TO 159);  -- sfix16 [160]
  SIGNAL dataReg                          : vector_of_signed16(0 TO 79);  -- sfix16_En12 [80]
  SIGNAL alpha_reg_1                      : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL validReg                         : std_logic;  -- ufix1
  SIGNAL count_unsigned                   : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL alpha_reg_2                      : vector_of_unsigned3(0 TO 1);  -- ufix3 [2]
  SIGNAL countReg                         : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL const1                           : std_logic;  -- ufix1
  SIGNAL AddComp_add_cast                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL countU                           : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL validD                           : std_logic;  -- ufix1
  SIGNAL validDNeg                        : std_logic;  -- ufix1
  SIGNAL intReset                         : std_logic;  -- ufix1
  SIGNAL extReset                         : std_logic;  -- ufix1
  SIGNAL dataAbs                          : vector_of_unsigned16(0 TO 79);  -- ufix16_En12 [80]
  SIGNAL minCalculation_minVal1           : vector_of_unsigned16(0 TO 79);  -- ufix16 [80]
  SIGNAL minCalculation_minVal2           : vector_of_unsigned16(0 TO 79);  -- ufix16 [80]
  SIGNAL minCalculation_dataAbs           : vector_of_unsigned16(0 TO 79);  -- ufix16 [80]
  SIGNAL minCalculation_minIdx            : vector_of_unsigned3(0 TO 79);  -- ufix3 [80]
  SIGNAL minCalculation_countIdx          : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL minCalculation_signsAll          : vector_of_unsigned7(0 TO 79);  -- ufix7 [80]
  SIGNAL minCalculation_prodSign          : std_logic_vector(79 DOWNTO 0);  -- ufix1 [80]
  SIGNAL minCalculation_validOut          : std_logic;
  SIGNAL minCalculation_validReg          : std_logic;
  SIGNAL minCalculation_countIdxReg1      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL minCalculation_minVal1_next      : vector_of_unsigned16(0 TO 79);  -- ufix16_En12 [80]
  SIGNAL minCalculation_minVal2_next      : vector_of_unsigned16(0 TO 79);  -- ufix16_En12 [80]
  SIGNAL minCalculation_dataAbs_next      : vector_of_unsigned16(0 TO 79);  -- ufix16_En12 [80]
  SIGNAL minCalculation_minIdx_next       : vector_of_unsigned3(0 TO 79);  -- ufix3 [80]
  SIGNAL minCalculation_countIdx_next     : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL minCalculation_signsAll_next     : vector_of_unsigned7(0 TO 79);  -- ufix7 [80]
  SIGNAL minCalculation_prodSign_next     : std_logic_vector(79 DOWNTO 0);  -- ufix1 [80]
  SIGNAL minCalculation_validOut_next     : std_logic;
  SIGNAL minCalculation_validReg_next     : std_logic;
  SIGNAL minCalculation_countIdxReg1_next : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL minVal1                          : vector_of_unsigned16(0 TO 79);  -- ufix16_En12 [80]
  SIGNAL minVal2                          : vector_of_unsigned16(0 TO 79);  -- ufix16_En12 [80]
  SIGNAL minindex                         : vector_of_unsigned3(0 TO 79);  -- ufix3 [80]
  SIGNAL signs1                           : vector_of_unsigned7(0 TO 79);  -- ufix7 [80]
  SIGNAL prodsign                         : std_logic_vector(79 DOWNTO 0);  -- ufix1 [80]
  SIGNAL validD_1                         : std_logic;  -- ufix1
  SIGNAL prodsign_0                       : std_logic;  -- ufix1
  SIGNAL prodsign_1                       : std_logic;  -- ufix1
  SIGNAL prodsign_2                       : std_logic;  -- ufix1
  SIGNAL prodsign_3                       : std_logic;  -- ufix1
  SIGNAL prodsign_4                       : std_logic;  -- ufix1
  SIGNAL prodsign_5                       : std_logic;  -- ufix1
  SIGNAL prodsign_6                       : std_logic;  -- ufix1
  SIGNAL prodsign_7                       : std_logic;  -- ufix1
  SIGNAL prodsign_8                       : std_logic;  -- ufix1
  SIGNAL prodsign_9                       : std_logic;  -- ufix1
  SIGNAL prodsign_10                      : std_logic;  -- ufix1
  SIGNAL prodsign_11                      : std_logic;  -- ufix1
  SIGNAL prodsign_12                      : std_logic;  -- ufix1
  SIGNAL prodsign_13                      : std_logic;  -- ufix1
  SIGNAL prodsign_14                      : std_logic;  -- ufix1
  SIGNAL prodsign_15                      : std_logic;  -- ufix1
  SIGNAL prodsign_16                      : std_logic;  -- ufix1
  SIGNAL prodsign_17                      : std_logic;  -- ufix1
  SIGNAL prodsign_18                      : std_logic;  -- ufix1
  SIGNAL prodsign_19                      : std_logic;  -- ufix1
  SIGNAL prodsign_20                      : std_logic;  -- ufix1
  SIGNAL prodsign_21                      : std_logic;  -- ufix1
  SIGNAL prodsign_22                      : std_logic;  -- ufix1
  SIGNAL prodsign_23                      : std_logic;  -- ufix1
  SIGNAL prodsign_24                      : std_logic;  -- ufix1
  SIGNAL prodsign_25                      : std_logic;  -- ufix1
  SIGNAL prodsign_26                      : std_logic;  -- ufix1
  SIGNAL prodsign_27                      : std_logic;  -- ufix1
  SIGNAL prodsign_28                      : std_logic;  -- ufix1
  SIGNAL prodsign_29                      : std_logic;  -- ufix1
  SIGNAL prodsign_30                      : std_logic;  -- ufix1
  SIGNAL prodsign_31                      : std_logic;  -- ufix1
  SIGNAL prodsign_32                      : std_logic;  -- ufix1
  SIGNAL prodsign_33                      : std_logic;  -- ufix1
  SIGNAL prodsign_34                      : std_logic;  -- ufix1
  SIGNAL prodsign_35                      : std_logic;  -- ufix1
  SIGNAL prodsign_36                      : std_logic;  -- ufix1
  SIGNAL prodsign_37                      : std_logic;  -- ufix1
  SIGNAL prodsign_38                      : std_logic;  -- ufix1
  SIGNAL prodsign_39                      : std_logic;  -- ufix1
  SIGNAL prodsign_40                      : std_logic;  -- ufix1
  SIGNAL prodsign_41                      : std_logic;  -- ufix1
  SIGNAL prodsign_42                      : std_logic;  -- ufix1
  SIGNAL prodsign_43                      : std_logic;  -- ufix1
  SIGNAL prodsign_44                      : std_logic;  -- ufix1
  SIGNAL prodsign_45                      : std_logic;  -- ufix1
  SIGNAL prodsign_46                      : std_logic;  -- ufix1
  SIGNAL prodsign_47                      : std_logic;  -- ufix1
  SIGNAL prodsign_48                      : std_logic;  -- ufix1
  SIGNAL prodsign_49                      : std_logic;  -- ufix1
  SIGNAL prodsign_50                      : std_logic;  -- ufix1
  SIGNAL prodsign_51                      : std_logic;  -- ufix1
  SIGNAL prodsign_52                      : std_logic;  -- ufix1
  SIGNAL prodsign_53                      : std_logic;  -- ufix1
  SIGNAL prodsign_54                      : std_logic;  -- ufix1
  SIGNAL prodsign_55                      : std_logic;  -- ufix1
  SIGNAL prodsign_56                      : std_logic;  -- ufix1
  SIGNAL prodsign_57                      : std_logic;  -- ufix1
  SIGNAL prodsign_58                      : std_logic;  -- ufix1
  SIGNAL prodsign_59                      : std_logic;  -- ufix1
  SIGNAL prodsign_60                      : std_logic;  -- ufix1
  SIGNAL prodsign_61                      : std_logic;  -- ufix1
  SIGNAL prodsign_62                      : std_logic;  -- ufix1
  SIGNAL prodsign_63                      : std_logic;  -- ufix1
  SIGNAL prodsign_64                      : std_logic;  -- ufix1
  SIGNAL prodsign_65                      : std_logic;  -- ufix1
  SIGNAL prodsign_66                      : std_logic;  -- ufix1
  SIGNAL prodsign_67                      : std_logic;  -- ufix1
  SIGNAL prodsign_68                      : std_logic;  -- ufix1
  SIGNAL prodsign_69                      : std_logic;  -- ufix1
  SIGNAL prodsign_70                      : std_logic;  -- ufix1
  SIGNAL prodsign_71                      : std_logic;  -- ufix1
  SIGNAL prodsign_72                      : std_logic;  -- ufix1
  SIGNAL prodsign_73                      : std_logic;  -- ufix1
  SIGNAL prodsign_74                      : std_logic;  -- ufix1
  SIGNAL prodsign_75                      : std_logic;  -- ufix1
  SIGNAL prodsign_76                      : std_logic;  -- ufix1
  SIGNAL prodsign_77                      : std_logic;  -- ufix1
  SIGNAL prodsign_78                      : std_logic;  -- ufix1
  SIGNAL prodsign_79                      : std_logic;  -- ufix1
  SIGNAL minindex_0                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_1                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_1                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_2                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_2                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_3                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_3                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_4                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_4                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_5                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_5                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_6                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_6                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_7                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_7                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_8                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_8                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_9                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_9                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_10                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_10                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_11                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_11                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_12                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_12                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_13                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_13                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_14                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_14                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_15                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_15                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_16                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_16                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_17                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_17                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_18                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_18                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_19                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_19                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_20                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_20                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_21                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_21                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_22                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_22                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_23                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_23                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_24                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_24                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_25                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_25                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_26                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_26                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_27                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_27                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_28                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_28                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_29                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_29                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_30                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_30                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_31                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_31                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_32                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_32                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_33                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_33                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_34                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_34                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_35                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_35                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_36                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_36                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_37                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_37                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_38                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_38                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_39                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_39                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_40                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_40                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_41                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_41                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_42                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_42                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_43                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_43                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_44                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_44                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_45                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_45                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_46                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_46                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_47                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_47                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_48                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_48                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_49                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_49                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_50                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_50                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_51                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_51                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_52                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_52                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_53                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_53                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_54                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_54                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_55                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_55                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_56                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_56                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_57                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_57                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_58                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_58                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_59                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_59                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_60                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_60                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_61                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_61                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_62                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_62                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_63                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_63                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_64                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_64                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_65                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_65                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_66                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_66                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_67                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_67                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_68                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_68                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_69                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_69                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_70                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_70                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_71                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_71                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_72                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_72                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_73                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_73                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_74                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_74                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_75                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_75                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_76                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_76                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_77                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_77                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_78                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_78                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_79                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL minindex_79                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL betacomp2_arr_80                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL betacomp2D                       : vector_of_unsigned4(0 TO 79);  -- ufix4 [80]
  SIGNAL min1_DTC                         : vector_of_unsigned15(0 TO 79);  -- ufix15_En12 [80]
  SIGNAL min1_DTC_0                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min2_DTC                         : vector_of_unsigned15(0 TO 79);  -- ufix15_En12 [80]
  SIGNAL min1_DTC_1                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_2                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_3                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_4                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_5                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_6                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_7                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_8                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_9                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_10                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_11                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_12                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_13                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_14                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_15                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_16                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_17                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_18                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_19                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_20                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_21                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_22                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_23                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_24                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_25                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_26                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_27                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_28                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_29                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_30                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_31                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_32                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_33                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_34                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_35                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_36                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_37                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_38                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_39                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_40                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_41                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_42                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_43                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_44                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_45                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_46                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_47                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_48                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_49                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_50                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_51                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_52                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_53                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_54                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_55                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_56                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_57                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_58                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_59                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_60                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_61                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_62                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_63                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_64                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_65                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_66                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_67                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_68                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_69                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_70                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_71                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_72                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_73                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_74                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_75                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_76                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_77                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_78                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min1_DTC_79                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL min2_DTC_0                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_1                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_1                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_2                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_2                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_3                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_3                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_4                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_4                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_5                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_5                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_6                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_6                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_7                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_7                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_8                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_8                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_9                  : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_9                       : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_10                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_10                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_11                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_11                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_12                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_12                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_13                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_13                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_14                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_14                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_15                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_15                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_16                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_16                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_17                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_17                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_18                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_18                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_19                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_19                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_20                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_20                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_21                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_21                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_22                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_22                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_23                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_23                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_24                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_24                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_25                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_25                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_26                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_26                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_27                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_27                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_28                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_28                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_29                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_29                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_30                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_30                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_31                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_31                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_32                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_32                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_33                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_33                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_34                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_34                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_35                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_35                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_36                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_36                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_37                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_37                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_38                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_38                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_39                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_39                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_40                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_40                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_41                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_41                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_42                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_42                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_43                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_43                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_44                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_44                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_45                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_45                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_46                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_46                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_47                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_47                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_48                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_48                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_49                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_49                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_50                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_50                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_51                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_51                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_52                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_52                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_53                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_53                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_54                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_54                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_55                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_55                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_56                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_56                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_57                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_57                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_58                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_58                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_59                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_59                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_60                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_60                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_61                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_61                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_62                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_62                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_63                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_63                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_64                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_64                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_65                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_65                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_66                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_66                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_67                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_67                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_68                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_68                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_69                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_69                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_70                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_70                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_71                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_71                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_72                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_72                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_73                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_73                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_74                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_74                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_75                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_75                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_76                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_76                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_77                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_77                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_78                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_78                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_79                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL min2_DTC_79                      : unsigned(14 DOWNTO 0);  -- ufix15_En12
  SIGNAL betacomp3_arr_80                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL betacomp3D                       : vector_of_unsigned30(0 TO 79);  -- ufix30 [80]

BEGIN
  outputgen3: FOR k1 IN 0 TO 79 GENERATE
    data_signed(k1) <= signed(data(k1));
  END GENERATE;

  c_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        alpha_reg <= (OTHERS => to_signed(16#0000#, 16));
      ELSIF enb = '1' THEN
        alpha_reg(0 TO 79) <= data_signed(0 TO 79);
        alpha_reg(80 TO 159) <= alpha_reg(0 TO 79);
      END IF;
    END IF;
  END PROCESS c_process;

  dataReg(0 TO 79) <= alpha_reg(80 TO 159);

  c_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        alpha_reg_1 <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        alpha_reg_1(0) <= valid;
        alpha_reg_1(1) <= alpha_reg_1(0);
      END IF;
    END IF;
  END PROCESS c_1_process;

  validReg <= alpha_reg_1(1);

  count_unsigned <= unsigned(count);

  c_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        alpha_reg_2 <= (OTHERS => to_unsigned(16#0#, 3));
      ELSIF enb = '1' THEN
        alpha_reg_2(0) <= count_unsigned;
        alpha_reg_2(1) <= alpha_reg_2(0);
      END IF;
    END IF;
  END PROCESS c_2_process;

  countReg <= alpha_reg_2(1);

  const1 <= '1';

  AddComp_add_cast <= '0' & '0' & const1;
  countU <= countReg + AddComp_add_cast;

  c_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        validD <= '0';
      ELSIF enb = '1' THEN
        validD <= valid;
      END IF;
    END IF;
  END PROCESS c_3_process;


  validDNeg <=  NOT validD;

  intReset <= valid AND validDNeg;

  extReset <= reset OR intReset;

  abs_rsvd_output : PROCESS (dataReg)
    VARIABLE extend_temp : signed(16 DOWNTO 0);
    VARIABLE cast : vector_of_signed17(0 TO 79);
  BEGIN
    extend_temp := to_signed(16#00000#, 17);

    FOR k IN 0 TO 79 LOOP
      IF dataReg(k) < to_signed(16#0000#, 16) THEN 
        cast(k) := resize(dataReg(k), 17);
        extend_temp :=  - (cast(k));
      ELSE 
        extend_temp := resize(dataReg(k), 17);
      END IF;
      dataAbs(k) <= unsigned(extend_temp(15 DOWNTO 0));
    END LOOP;

  END PROCESS abs_rsvd_output;


  minCalculation_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        minCalculation_countIdx <= to_unsigned(16#0#, 3);
        minCalculation_minVal1 <= (OTHERS => to_unsigned(16#FFFF#, 16));
        minCalculation_minVal2 <= (OTHERS => to_unsigned(16#FFFF#, 16));
        minCalculation_dataAbs <= (OTHERS => to_unsigned(16#0000#, 16));
        minCalculation_minIdx <= (OTHERS => to_unsigned(16#0#, 3));
        minCalculation_signsAll <= (OTHERS => to_unsigned(16#7F#, 7));
        minCalculation_prodSign <= (OTHERS => '1');
        minCalculation_validOut <= '0';
        minCalculation_validReg <= '0';
        minCalculation_countIdxReg1 <= to_unsigned(16#0#, 3);
      ELSIF enb = '1' THEN
        minCalculation_countIdx <= minCalculation_countIdx_next;
        minCalculation_minVal1 <= minCalculation_minVal1_next;
        minCalculation_minVal2 <= minCalculation_minVal2_next;
        minCalculation_dataAbs <= minCalculation_dataAbs_next;
        minCalculation_minIdx <= minCalculation_minIdx_next;
        minCalculation_signsAll <= minCalculation_signsAll_next;
        minCalculation_prodSign <= minCalculation_prodSign_next;
        minCalculation_validOut <= minCalculation_validOut_next;
        minCalculation_validReg <= minCalculation_validReg_next;
        minCalculation_countIdxReg1 <= minCalculation_countIdxReg1_next;
      END IF;
    END IF;
  END PROCESS minCalculation_process;

  minCalculation_output : PROCESS (countU, dataAbs, dataReg, extReset, minCalculation_countIdx,
       minCalculation_countIdxReg1, minCalculation_dataAbs,
       minCalculation_minIdx, minCalculation_minVal1, minCalculation_minVal2,
       minCalculation_prodSign, minCalculation_signsAll,
       minCalculation_validOut, minCalculation_validReg, validReg)
    VARIABLE xorval : unsigned(6 DOWNTO 0);
    VARIABLE signVal : std_logic;
    VARIABLE minVal1_temp : vector_of_unsigned16(0 TO 79);
    VARIABLE minVal2_temp : vector_of_unsigned16(0 TO 79);
    VARIABLE minIdx_temp : vector_of_unsigned3(0 TO 79);
    VARIABLE countIdx_temp : unsigned(2 DOWNTO 0);
    VARIABLE signsAll_temp : vector_of_unsigned7(0 TO 79);
    VARIABLE prodSign_temp : std_logic_vector(79 DOWNTO 0);
    VARIABLE add_temp : unsigned(3 DOWNTO 0);
    VARIABLE sub_cast : signed(31 DOWNTO 0);
    VARIABLE cast1 : vector_of_signed32(0 TO 79);
  BEGIN
    signVal := '0';
    countIdx_temp := minCalculation_countIdx;
    minVal1_temp := minCalculation_minVal1;
    minVal2_temp := minCalculation_minVal2;
    minIdx_temp := minCalculation_minIdx;
    signsAll_temp := minCalculation_signsAll;
    prodSign_temp := minCalculation_prodSign;
    IF (extReset /= '0') OR (minCalculation_countIdxReg1 = countU) THEN 
      countIdx_temp := to_unsigned(16#0#, 3);
    ELSIF validReg /= '0' THEN 
      countIdx_temp := minCalculation_countIdx + to_unsigned(16#1#, 3);
    END IF;
    add_temp := resize(countIdx_temp, 4) + to_unsigned(16#1#, 4);
    sub_cast := signed(resize(add_temp, 32));
    xorval := minCalculation_data(to_integer(sub_cast - 1));
    IF extReset /= '0' THEN 
      countIdx_temp := to_unsigned(16#0#, 3);
      minVal1_temp := (OTHERS => to_unsigned(16#F000#, 16));
      minVal2_temp := (OTHERS => to_unsigned(16#F000#, 16));
      minIdx_temp := (OTHERS => to_unsigned(16#0#, 3));
      signsAll_temp := (OTHERS => to_unsigned(16#7F#, 7));
      prodSign_temp := (OTHERS => '1');
    ELSE 
      IF validReg /= '0' THEN 
        FOR index IN 0 TO 79 LOOP
          signVal := dataReg(index)(15);
          cast1(index) := '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & signVal;
          prodSign_temp(index) := hdlcoder_to_stdlogic(hdlcoder_to_signed(prodSign_temp(index) /= '0', 32) /= cast1(index));
          IF signVal = '1' THEN 
            signsAll_temp(index) := signsAll_temp(index) XOR xorval;
          END IF;
        END LOOP;
      END IF;
      IF minCalculation_validReg = '1' THEN 
        FOR index_0 IN 0 TO 79 LOOP
          IF minCalculation_dataAbs(index_0) < minVal1_temp(index_0) THEN 
            minVal2_temp(index_0) := minVal1_temp(index_0);
            minVal1_temp(index_0) := minCalculation_dataAbs(index_0);
            minIdx_temp(index_0) := minCalculation_countIdx;
          ELSIF minCalculation_dataAbs(index_0) < minVal2_temp(index_0) THEN 
            minVal2_temp(index_0) := minCalculation_dataAbs(index_0);
          END IF;
        END LOOP;
      END IF;
    END IF;
    minCalculation_dataAbs_next <= dataAbs;
    minCalculation_validReg_next <= validReg;
    IF validReg /= '0' THEN 
      minCalculation_validOut_next <= hdlcoder_to_stdlogic(countIdx_temp = countU);
    ELSE 
      minCalculation_validOut_next <= '0';
    END IF;
    validD_1 <= minCalculation_validOut;
    minCalculation_countIdx_next <= countIdx_temp;
    minVal1 <= minVal1_temp;
    minVal2 <= minVal2_temp;
    minindex <= minIdx_temp;
    signs1 <= minCalculation_signsAll;
    prodsign <= minCalculation_prodSign;
    minCalculation_minVal1_next <= minVal1_temp;
    minCalculation_minVal2_next <= minVal2_temp;
    minCalculation_minIdx_next <= minIdx_temp;
    minCalculation_signsAll_next <= signsAll_temp;
    minCalculation_prodSign_next <= prodSign_temp;
    minCalculation_countIdxReg1_next <= minCalculation_countIdx;
  END PROCESS minCalculation_output;


  outputgen2: FOR k1 IN 0 TO 79 GENERATE
    cnuDecomp1(k1) <= std_logic_vector(signs1(k1));
  END GENERATE;

  prodsign_0 <= prodsign(0);

  prodsign_1 <= prodsign(1);

  prodsign_2 <= prodsign(2);

  prodsign_3 <= prodsign(3);

  prodsign_4 <= prodsign(4);

  prodsign_5 <= prodsign(5);

  prodsign_6 <= prodsign(6);

  prodsign_7 <= prodsign(7);

  prodsign_8 <= prodsign(8);

  prodsign_9 <= prodsign(9);

  prodsign_10 <= prodsign(10);

  prodsign_11 <= prodsign(11);

  prodsign_12 <= prodsign(12);

  prodsign_13 <= prodsign(13);

  prodsign_14 <= prodsign(14);

  prodsign_15 <= prodsign(15);

  prodsign_16 <= prodsign(16);

  prodsign_17 <= prodsign(17);

  prodsign_18 <= prodsign(18);

  prodsign_19 <= prodsign(19);

  prodsign_20 <= prodsign(20);

  prodsign_21 <= prodsign(21);

  prodsign_22 <= prodsign(22);

  prodsign_23 <= prodsign(23);

  prodsign_24 <= prodsign(24);

  prodsign_25 <= prodsign(25);

  prodsign_26 <= prodsign(26);

  prodsign_27 <= prodsign(27);

  prodsign_28 <= prodsign(28);

  prodsign_29 <= prodsign(29);

  prodsign_30 <= prodsign(30);

  prodsign_31 <= prodsign(31);

  prodsign_32 <= prodsign(32);

  prodsign_33 <= prodsign(33);

  prodsign_34 <= prodsign(34);

  prodsign_35 <= prodsign(35);

  prodsign_36 <= prodsign(36);

  prodsign_37 <= prodsign(37);

  prodsign_38 <= prodsign(38);

  prodsign_39 <= prodsign(39);

  prodsign_40 <= prodsign(40);

  prodsign_41 <= prodsign(41);

  prodsign_42 <= prodsign(42);

  prodsign_43 <= prodsign(43);

  prodsign_44 <= prodsign(44);

  prodsign_45 <= prodsign(45);

  prodsign_46 <= prodsign(46);

  prodsign_47 <= prodsign(47);

  prodsign_48 <= prodsign(48);

  prodsign_49 <= prodsign(49);

  prodsign_50 <= prodsign(50);

  prodsign_51 <= prodsign(51);

  prodsign_52 <= prodsign(52);

  prodsign_53 <= prodsign(53);

  prodsign_54 <= prodsign(54);

  prodsign_55 <= prodsign(55);

  prodsign_56 <= prodsign(56);

  prodsign_57 <= prodsign(57);

  prodsign_58 <= prodsign(58);

  prodsign_59 <= prodsign(59);

  prodsign_60 <= prodsign(60);

  prodsign_61 <= prodsign(61);

  prodsign_62 <= prodsign(62);

  prodsign_63 <= prodsign(63);

  prodsign_64 <= prodsign(64);

  prodsign_65 <= prodsign(65);

  prodsign_66 <= prodsign(66);

  prodsign_67 <= prodsign(67);

  prodsign_68 <= prodsign(68);

  prodsign_69 <= prodsign(69);

  prodsign_70 <= prodsign(70);

  prodsign_71 <= prodsign(71);

  prodsign_72 <= prodsign(72);

  prodsign_73 <= prodsign(73);

  prodsign_74 <= prodsign(74);

  prodsign_75 <= prodsign(75);

  prodsign_76 <= prodsign(76);

  prodsign_77 <= prodsign(77);

  prodsign_78 <= prodsign(78);

  prodsign_79 <= prodsign(79);

  minindex_0 <= minindex(0);

  betacomp2_arr_1 <= prodsign_0 & minindex_0;

  minindex_1 <= minindex(1);

  betacomp2_arr_2 <= prodsign_1 & minindex_1;

  minindex_2 <= minindex(2);

  betacomp2_arr_3 <= prodsign_2 & minindex_2;

  minindex_3 <= minindex(3);

  betacomp2_arr_4 <= prodsign_3 & minindex_3;

  minindex_4 <= minindex(4);

  betacomp2_arr_5 <= prodsign_4 & minindex_4;

  minindex_5 <= minindex(5);

  betacomp2_arr_6 <= prodsign_5 & minindex_5;

  minindex_6 <= minindex(6);

  betacomp2_arr_7 <= prodsign_6 & minindex_6;

  minindex_7 <= minindex(7);

  betacomp2_arr_8 <= prodsign_7 & minindex_7;

  minindex_8 <= minindex(8);

  betacomp2_arr_9 <= prodsign_8 & minindex_8;

  minindex_9 <= minindex(9);

  betacomp2_arr_10 <= prodsign_9 & minindex_9;

  minindex_10 <= minindex(10);

  betacomp2_arr_11 <= prodsign_10 & minindex_10;

  minindex_11 <= minindex(11);

  betacomp2_arr_12 <= prodsign_11 & minindex_11;

  minindex_12 <= minindex(12);

  betacomp2_arr_13 <= prodsign_12 & minindex_12;

  minindex_13 <= minindex(13);

  betacomp2_arr_14 <= prodsign_13 & minindex_13;

  minindex_14 <= minindex(14);

  betacomp2_arr_15 <= prodsign_14 & minindex_14;

  minindex_15 <= minindex(15);

  betacomp2_arr_16 <= prodsign_15 & minindex_15;

  minindex_16 <= minindex(16);

  betacomp2_arr_17 <= prodsign_16 & minindex_16;

  minindex_17 <= minindex(17);

  betacomp2_arr_18 <= prodsign_17 & minindex_17;

  minindex_18 <= minindex(18);

  betacomp2_arr_19 <= prodsign_18 & minindex_18;

  minindex_19 <= minindex(19);

  betacomp2_arr_20 <= prodsign_19 & minindex_19;

  minindex_20 <= minindex(20);

  betacomp2_arr_21 <= prodsign_20 & minindex_20;

  minindex_21 <= minindex(21);

  betacomp2_arr_22 <= prodsign_21 & minindex_21;

  minindex_22 <= minindex(22);

  betacomp2_arr_23 <= prodsign_22 & minindex_22;

  minindex_23 <= minindex(23);

  betacomp2_arr_24 <= prodsign_23 & minindex_23;

  minindex_24 <= minindex(24);

  betacomp2_arr_25 <= prodsign_24 & minindex_24;

  minindex_25 <= minindex(25);

  betacomp2_arr_26 <= prodsign_25 & minindex_25;

  minindex_26 <= minindex(26);

  betacomp2_arr_27 <= prodsign_26 & minindex_26;

  minindex_27 <= minindex(27);

  betacomp2_arr_28 <= prodsign_27 & minindex_27;

  minindex_28 <= minindex(28);

  betacomp2_arr_29 <= prodsign_28 & minindex_28;

  minindex_29 <= minindex(29);

  betacomp2_arr_30 <= prodsign_29 & minindex_29;

  minindex_30 <= minindex(30);

  betacomp2_arr_31 <= prodsign_30 & minindex_30;

  minindex_31 <= minindex(31);

  betacomp2_arr_32 <= prodsign_31 & minindex_31;

  minindex_32 <= minindex(32);

  betacomp2_arr_33 <= prodsign_32 & minindex_32;

  minindex_33 <= minindex(33);

  betacomp2_arr_34 <= prodsign_33 & minindex_33;

  minindex_34 <= minindex(34);

  betacomp2_arr_35 <= prodsign_34 & minindex_34;

  minindex_35 <= minindex(35);

  betacomp2_arr_36 <= prodsign_35 & minindex_35;

  minindex_36 <= minindex(36);

  betacomp2_arr_37 <= prodsign_36 & minindex_36;

  minindex_37 <= minindex(37);

  betacomp2_arr_38 <= prodsign_37 & minindex_37;

  minindex_38 <= minindex(38);

  betacomp2_arr_39 <= prodsign_38 & minindex_38;

  minindex_39 <= minindex(39);

  betacomp2_arr_40 <= prodsign_39 & minindex_39;

  minindex_40 <= minindex(40);

  betacomp2_arr_41 <= prodsign_40 & minindex_40;

  minindex_41 <= minindex(41);

  betacomp2_arr_42 <= prodsign_41 & minindex_41;

  minindex_42 <= minindex(42);

  betacomp2_arr_43 <= prodsign_42 & minindex_42;

  minindex_43 <= minindex(43);

  betacomp2_arr_44 <= prodsign_43 & minindex_43;

  minindex_44 <= minindex(44);

  betacomp2_arr_45 <= prodsign_44 & minindex_44;

  minindex_45 <= minindex(45);

  betacomp2_arr_46 <= prodsign_45 & minindex_45;

  minindex_46 <= minindex(46);

  betacomp2_arr_47 <= prodsign_46 & minindex_46;

  minindex_47 <= minindex(47);

  betacomp2_arr_48 <= prodsign_47 & minindex_47;

  minindex_48 <= minindex(48);

  betacomp2_arr_49 <= prodsign_48 & minindex_48;

  minindex_49 <= minindex(49);

  betacomp2_arr_50 <= prodsign_49 & minindex_49;

  minindex_50 <= minindex(50);

  betacomp2_arr_51 <= prodsign_50 & minindex_50;

  minindex_51 <= minindex(51);

  betacomp2_arr_52 <= prodsign_51 & minindex_51;

  minindex_52 <= minindex(52);

  betacomp2_arr_53 <= prodsign_52 & minindex_52;

  minindex_53 <= minindex(53);

  betacomp2_arr_54 <= prodsign_53 & minindex_53;

  minindex_54 <= minindex(54);

  betacomp2_arr_55 <= prodsign_54 & minindex_54;

  minindex_55 <= minindex(55);

  betacomp2_arr_56 <= prodsign_55 & minindex_55;

  minindex_56 <= minindex(56);

  betacomp2_arr_57 <= prodsign_56 & minindex_56;

  minindex_57 <= minindex(57);

  betacomp2_arr_58 <= prodsign_57 & minindex_57;

  minindex_58 <= minindex(58);

  betacomp2_arr_59 <= prodsign_58 & minindex_58;

  minindex_59 <= minindex(59);

  betacomp2_arr_60 <= prodsign_59 & minindex_59;

  minindex_60 <= minindex(60);

  betacomp2_arr_61 <= prodsign_60 & minindex_60;

  minindex_61 <= minindex(61);

  betacomp2_arr_62 <= prodsign_61 & minindex_61;

  minindex_62 <= minindex(62);

  betacomp2_arr_63 <= prodsign_62 & minindex_62;

  minindex_63 <= minindex(63);

  betacomp2_arr_64 <= prodsign_63 & minindex_63;

  minindex_64 <= minindex(64);

  betacomp2_arr_65 <= prodsign_64 & minindex_64;

  minindex_65 <= minindex(65);

  betacomp2_arr_66 <= prodsign_65 & minindex_65;

  minindex_66 <= minindex(66);

  betacomp2_arr_67 <= prodsign_66 & minindex_66;

  minindex_67 <= minindex(67);

  betacomp2_arr_68 <= prodsign_67 & minindex_67;

  minindex_68 <= minindex(68);

  betacomp2_arr_69 <= prodsign_68 & minindex_68;

  minindex_69 <= minindex(69);

  betacomp2_arr_70 <= prodsign_69 & minindex_69;

  minindex_70 <= minindex(70);

  betacomp2_arr_71 <= prodsign_70 & minindex_70;

  minindex_71 <= minindex(71);

  betacomp2_arr_72 <= prodsign_71 & minindex_71;

  minindex_72 <= minindex(72);

  betacomp2_arr_73 <= prodsign_72 & minindex_72;

  minindex_73 <= minindex(73);

  betacomp2_arr_74 <= prodsign_73 & minindex_73;

  minindex_74 <= minindex(74);

  betacomp2_arr_75 <= prodsign_74 & minindex_74;

  minindex_75 <= minindex(75);

  betacomp2_arr_76 <= prodsign_75 & minindex_75;

  minindex_76 <= minindex(76);

  betacomp2_arr_77 <= prodsign_76 & minindex_76;

  minindex_77 <= minindex(77);

  betacomp2_arr_78 <= prodsign_77 & minindex_77;

  minindex_78 <= minindex(78);

  betacomp2_arr_79 <= prodsign_78 & minindex_78;

  minindex_79 <= minindex(79);

  betacomp2_arr_80 <= prodsign_79 & minindex_79;

  betacomp2D(0) <= betacomp2_arr_1;
  betacomp2D(1) <= betacomp2_arr_2;
  betacomp2D(2) <= betacomp2_arr_3;
  betacomp2D(3) <= betacomp2_arr_4;
  betacomp2D(4) <= betacomp2_arr_5;
  betacomp2D(5) <= betacomp2_arr_6;
  betacomp2D(6) <= betacomp2_arr_7;
  betacomp2D(7) <= betacomp2_arr_8;
  betacomp2D(8) <= betacomp2_arr_9;
  betacomp2D(9) <= betacomp2_arr_10;
  betacomp2D(10) <= betacomp2_arr_11;
  betacomp2D(11) <= betacomp2_arr_12;
  betacomp2D(12) <= betacomp2_arr_13;
  betacomp2D(13) <= betacomp2_arr_14;
  betacomp2D(14) <= betacomp2_arr_15;
  betacomp2D(15) <= betacomp2_arr_16;
  betacomp2D(16) <= betacomp2_arr_17;
  betacomp2D(17) <= betacomp2_arr_18;
  betacomp2D(18) <= betacomp2_arr_19;
  betacomp2D(19) <= betacomp2_arr_20;
  betacomp2D(20) <= betacomp2_arr_21;
  betacomp2D(21) <= betacomp2_arr_22;
  betacomp2D(22) <= betacomp2_arr_23;
  betacomp2D(23) <= betacomp2_arr_24;
  betacomp2D(24) <= betacomp2_arr_25;
  betacomp2D(25) <= betacomp2_arr_26;
  betacomp2D(26) <= betacomp2_arr_27;
  betacomp2D(27) <= betacomp2_arr_28;
  betacomp2D(28) <= betacomp2_arr_29;
  betacomp2D(29) <= betacomp2_arr_30;
  betacomp2D(30) <= betacomp2_arr_31;
  betacomp2D(31) <= betacomp2_arr_32;
  betacomp2D(32) <= betacomp2_arr_33;
  betacomp2D(33) <= betacomp2_arr_34;
  betacomp2D(34) <= betacomp2_arr_35;
  betacomp2D(35) <= betacomp2_arr_36;
  betacomp2D(36) <= betacomp2_arr_37;
  betacomp2D(37) <= betacomp2_arr_38;
  betacomp2D(38) <= betacomp2_arr_39;
  betacomp2D(39) <= betacomp2_arr_40;
  betacomp2D(40) <= betacomp2_arr_41;
  betacomp2D(41) <= betacomp2_arr_42;
  betacomp2D(42) <= betacomp2_arr_43;
  betacomp2D(43) <= betacomp2_arr_44;
  betacomp2D(44) <= betacomp2_arr_45;
  betacomp2D(45) <= betacomp2_arr_46;
  betacomp2D(46) <= betacomp2_arr_47;
  betacomp2D(47) <= betacomp2_arr_48;
  betacomp2D(48) <= betacomp2_arr_49;
  betacomp2D(49) <= betacomp2_arr_50;
  betacomp2D(50) <= betacomp2_arr_51;
  betacomp2D(51) <= betacomp2_arr_52;
  betacomp2D(52) <= betacomp2_arr_53;
  betacomp2D(53) <= betacomp2_arr_54;
  betacomp2D(54) <= betacomp2_arr_55;
  betacomp2D(55) <= betacomp2_arr_56;
  betacomp2D(56) <= betacomp2_arr_57;
  betacomp2D(57) <= betacomp2_arr_58;
  betacomp2D(58) <= betacomp2_arr_59;
  betacomp2D(59) <= betacomp2_arr_60;
  betacomp2D(60) <= betacomp2_arr_61;
  betacomp2D(61) <= betacomp2_arr_62;
  betacomp2D(62) <= betacomp2_arr_63;
  betacomp2D(63) <= betacomp2_arr_64;
  betacomp2D(64) <= betacomp2_arr_65;
  betacomp2D(65) <= betacomp2_arr_66;
  betacomp2D(66) <= betacomp2_arr_67;
  betacomp2D(67) <= betacomp2_arr_68;
  betacomp2D(68) <= betacomp2_arr_69;
  betacomp2D(69) <= betacomp2_arr_70;
  betacomp2D(70) <= betacomp2_arr_71;
  betacomp2D(71) <= betacomp2_arr_72;
  betacomp2D(72) <= betacomp2_arr_73;
  betacomp2D(73) <= betacomp2_arr_74;
  betacomp2D(74) <= betacomp2_arr_75;
  betacomp2D(75) <= betacomp2_arr_76;
  betacomp2D(76) <= betacomp2_arr_77;
  betacomp2D(77) <= betacomp2_arr_78;
  betacomp2D(78) <= betacomp2_arr_79;
  betacomp2D(79) <= betacomp2_arr_80;

  outputgen1: FOR k1 IN 0 TO 79 GENERATE
    cnuDecomp2(k1) <= std_logic_vector(betacomp2D(k1));
  END GENERATE;


  min1_DTC_gen: FOR ii IN 0 TO 79 GENERATE
    
    min1_DTC(ii) <= "111111111111111" WHEN minVal1(ii)(15) /= '0' ELSE
        minVal1(ii)(14 DOWNTO 0);
  END GENERATE min1_DTC_gen;


  min1_DTC_0 <= min1_DTC(0);


  min2_DTC_gen: FOR ii1 IN 0 TO 79 GENERATE
    
    min2_DTC(ii1) <= "111111111111111" WHEN minVal2(ii1)(15) /= '0' ELSE
        minVal2(ii1)(14 DOWNTO 0);
  END GENERATE min2_DTC_gen;


  min1_DTC_1 <= min1_DTC(1);

  min1_DTC_2 <= min1_DTC(2);

  min1_DTC_3 <= min1_DTC(3);

  min1_DTC_4 <= min1_DTC(4);

  min1_DTC_5 <= min1_DTC(5);

  min1_DTC_6 <= min1_DTC(6);

  min1_DTC_7 <= min1_DTC(7);

  min1_DTC_8 <= min1_DTC(8);

  min1_DTC_9 <= min1_DTC(9);

  min1_DTC_10 <= min1_DTC(10);

  min1_DTC_11 <= min1_DTC(11);

  min1_DTC_12 <= min1_DTC(12);

  min1_DTC_13 <= min1_DTC(13);

  min1_DTC_14 <= min1_DTC(14);

  min1_DTC_15 <= min1_DTC(15);

  min1_DTC_16 <= min1_DTC(16);

  min1_DTC_17 <= min1_DTC(17);

  min1_DTC_18 <= min1_DTC(18);

  min1_DTC_19 <= min1_DTC(19);

  min1_DTC_20 <= min1_DTC(20);

  min1_DTC_21 <= min1_DTC(21);

  min1_DTC_22 <= min1_DTC(22);

  min1_DTC_23 <= min1_DTC(23);

  min1_DTC_24 <= min1_DTC(24);

  min1_DTC_25 <= min1_DTC(25);

  min1_DTC_26 <= min1_DTC(26);

  min1_DTC_27 <= min1_DTC(27);

  min1_DTC_28 <= min1_DTC(28);

  min1_DTC_29 <= min1_DTC(29);

  min1_DTC_30 <= min1_DTC(30);

  min1_DTC_31 <= min1_DTC(31);

  min1_DTC_32 <= min1_DTC(32);

  min1_DTC_33 <= min1_DTC(33);

  min1_DTC_34 <= min1_DTC(34);

  min1_DTC_35 <= min1_DTC(35);

  min1_DTC_36 <= min1_DTC(36);

  min1_DTC_37 <= min1_DTC(37);

  min1_DTC_38 <= min1_DTC(38);

  min1_DTC_39 <= min1_DTC(39);

  min1_DTC_40 <= min1_DTC(40);

  min1_DTC_41 <= min1_DTC(41);

  min1_DTC_42 <= min1_DTC(42);

  min1_DTC_43 <= min1_DTC(43);

  min1_DTC_44 <= min1_DTC(44);

  min1_DTC_45 <= min1_DTC(45);

  min1_DTC_46 <= min1_DTC(46);

  min1_DTC_47 <= min1_DTC(47);

  min1_DTC_48 <= min1_DTC(48);

  min1_DTC_49 <= min1_DTC(49);

  min1_DTC_50 <= min1_DTC(50);

  min1_DTC_51 <= min1_DTC(51);

  min1_DTC_52 <= min1_DTC(52);

  min1_DTC_53 <= min1_DTC(53);

  min1_DTC_54 <= min1_DTC(54);

  min1_DTC_55 <= min1_DTC(55);

  min1_DTC_56 <= min1_DTC(56);

  min1_DTC_57 <= min1_DTC(57);

  min1_DTC_58 <= min1_DTC(58);

  min1_DTC_59 <= min1_DTC(59);

  min1_DTC_60 <= min1_DTC(60);

  min1_DTC_61 <= min1_DTC(61);

  min1_DTC_62 <= min1_DTC(62);

  min1_DTC_63 <= min1_DTC(63);

  min1_DTC_64 <= min1_DTC(64);

  min1_DTC_65 <= min1_DTC(65);

  min1_DTC_66 <= min1_DTC(66);

  min1_DTC_67 <= min1_DTC(67);

  min1_DTC_68 <= min1_DTC(68);

  min1_DTC_69 <= min1_DTC(69);

  min1_DTC_70 <= min1_DTC(70);

  min1_DTC_71 <= min1_DTC(71);

  min1_DTC_72 <= min1_DTC(72);

  min1_DTC_73 <= min1_DTC(73);

  min1_DTC_74 <= min1_DTC(74);

  min1_DTC_75 <= min1_DTC(75);

  min1_DTC_76 <= min1_DTC(76);

  min1_DTC_77 <= min1_DTC(77);

  min1_DTC_78 <= min1_DTC(78);

  min1_DTC_79 <= min1_DTC(79);

  min2_DTC_0 <= min2_DTC(0);

  betacomp3_arr_1 <= min1_DTC_0 & min2_DTC_0;

  min2_DTC_1 <= min2_DTC(1);

  betacomp3_arr_2 <= min1_DTC_1 & min2_DTC_1;

  min2_DTC_2 <= min2_DTC(2);

  betacomp3_arr_3 <= min1_DTC_2 & min2_DTC_2;

  min2_DTC_3 <= min2_DTC(3);

  betacomp3_arr_4 <= min1_DTC_3 & min2_DTC_3;

  min2_DTC_4 <= min2_DTC(4);

  betacomp3_arr_5 <= min1_DTC_4 & min2_DTC_4;

  min2_DTC_5 <= min2_DTC(5);

  betacomp3_arr_6 <= min1_DTC_5 & min2_DTC_5;

  min2_DTC_6 <= min2_DTC(6);

  betacomp3_arr_7 <= min1_DTC_6 & min2_DTC_6;

  min2_DTC_7 <= min2_DTC(7);

  betacomp3_arr_8 <= min1_DTC_7 & min2_DTC_7;

  min2_DTC_8 <= min2_DTC(8);

  betacomp3_arr_9 <= min1_DTC_8 & min2_DTC_8;

  min2_DTC_9 <= min2_DTC(9);

  betacomp3_arr_10 <= min1_DTC_9 & min2_DTC_9;

  min2_DTC_10 <= min2_DTC(10);

  betacomp3_arr_11 <= min1_DTC_10 & min2_DTC_10;

  min2_DTC_11 <= min2_DTC(11);

  betacomp3_arr_12 <= min1_DTC_11 & min2_DTC_11;

  min2_DTC_12 <= min2_DTC(12);

  betacomp3_arr_13 <= min1_DTC_12 & min2_DTC_12;

  min2_DTC_13 <= min2_DTC(13);

  betacomp3_arr_14 <= min1_DTC_13 & min2_DTC_13;

  min2_DTC_14 <= min2_DTC(14);

  betacomp3_arr_15 <= min1_DTC_14 & min2_DTC_14;

  min2_DTC_15 <= min2_DTC(15);

  betacomp3_arr_16 <= min1_DTC_15 & min2_DTC_15;

  min2_DTC_16 <= min2_DTC(16);

  betacomp3_arr_17 <= min1_DTC_16 & min2_DTC_16;

  min2_DTC_17 <= min2_DTC(17);

  betacomp3_arr_18 <= min1_DTC_17 & min2_DTC_17;

  min2_DTC_18 <= min2_DTC(18);

  betacomp3_arr_19 <= min1_DTC_18 & min2_DTC_18;

  min2_DTC_19 <= min2_DTC(19);

  betacomp3_arr_20 <= min1_DTC_19 & min2_DTC_19;

  min2_DTC_20 <= min2_DTC(20);

  betacomp3_arr_21 <= min1_DTC_20 & min2_DTC_20;

  min2_DTC_21 <= min2_DTC(21);

  betacomp3_arr_22 <= min1_DTC_21 & min2_DTC_21;

  min2_DTC_22 <= min2_DTC(22);

  betacomp3_arr_23 <= min1_DTC_22 & min2_DTC_22;

  min2_DTC_23 <= min2_DTC(23);

  betacomp3_arr_24 <= min1_DTC_23 & min2_DTC_23;

  min2_DTC_24 <= min2_DTC(24);

  betacomp3_arr_25 <= min1_DTC_24 & min2_DTC_24;

  min2_DTC_25 <= min2_DTC(25);

  betacomp3_arr_26 <= min1_DTC_25 & min2_DTC_25;

  min2_DTC_26 <= min2_DTC(26);

  betacomp3_arr_27 <= min1_DTC_26 & min2_DTC_26;

  min2_DTC_27 <= min2_DTC(27);

  betacomp3_arr_28 <= min1_DTC_27 & min2_DTC_27;

  min2_DTC_28 <= min2_DTC(28);

  betacomp3_arr_29 <= min1_DTC_28 & min2_DTC_28;

  min2_DTC_29 <= min2_DTC(29);

  betacomp3_arr_30 <= min1_DTC_29 & min2_DTC_29;

  min2_DTC_30 <= min2_DTC(30);

  betacomp3_arr_31 <= min1_DTC_30 & min2_DTC_30;

  min2_DTC_31 <= min2_DTC(31);

  betacomp3_arr_32 <= min1_DTC_31 & min2_DTC_31;

  min2_DTC_32 <= min2_DTC(32);

  betacomp3_arr_33 <= min1_DTC_32 & min2_DTC_32;

  min2_DTC_33 <= min2_DTC(33);

  betacomp3_arr_34 <= min1_DTC_33 & min2_DTC_33;

  min2_DTC_34 <= min2_DTC(34);

  betacomp3_arr_35 <= min1_DTC_34 & min2_DTC_34;

  min2_DTC_35 <= min2_DTC(35);

  betacomp3_arr_36 <= min1_DTC_35 & min2_DTC_35;

  min2_DTC_36 <= min2_DTC(36);

  betacomp3_arr_37 <= min1_DTC_36 & min2_DTC_36;

  min2_DTC_37 <= min2_DTC(37);

  betacomp3_arr_38 <= min1_DTC_37 & min2_DTC_37;

  min2_DTC_38 <= min2_DTC(38);

  betacomp3_arr_39 <= min1_DTC_38 & min2_DTC_38;

  min2_DTC_39 <= min2_DTC(39);

  betacomp3_arr_40 <= min1_DTC_39 & min2_DTC_39;

  min2_DTC_40 <= min2_DTC(40);

  betacomp3_arr_41 <= min1_DTC_40 & min2_DTC_40;

  min2_DTC_41 <= min2_DTC(41);

  betacomp3_arr_42 <= min1_DTC_41 & min2_DTC_41;

  min2_DTC_42 <= min2_DTC(42);

  betacomp3_arr_43 <= min1_DTC_42 & min2_DTC_42;

  min2_DTC_43 <= min2_DTC(43);

  betacomp3_arr_44 <= min1_DTC_43 & min2_DTC_43;

  min2_DTC_44 <= min2_DTC(44);

  betacomp3_arr_45 <= min1_DTC_44 & min2_DTC_44;

  min2_DTC_45 <= min2_DTC(45);

  betacomp3_arr_46 <= min1_DTC_45 & min2_DTC_45;

  min2_DTC_46 <= min2_DTC(46);

  betacomp3_arr_47 <= min1_DTC_46 & min2_DTC_46;

  min2_DTC_47 <= min2_DTC(47);

  betacomp3_arr_48 <= min1_DTC_47 & min2_DTC_47;

  min2_DTC_48 <= min2_DTC(48);

  betacomp3_arr_49 <= min1_DTC_48 & min2_DTC_48;

  min2_DTC_49 <= min2_DTC(49);

  betacomp3_arr_50 <= min1_DTC_49 & min2_DTC_49;

  min2_DTC_50 <= min2_DTC(50);

  betacomp3_arr_51 <= min1_DTC_50 & min2_DTC_50;

  min2_DTC_51 <= min2_DTC(51);

  betacomp3_arr_52 <= min1_DTC_51 & min2_DTC_51;

  min2_DTC_52 <= min2_DTC(52);

  betacomp3_arr_53 <= min1_DTC_52 & min2_DTC_52;

  min2_DTC_53 <= min2_DTC(53);

  betacomp3_arr_54 <= min1_DTC_53 & min2_DTC_53;

  min2_DTC_54 <= min2_DTC(54);

  betacomp3_arr_55 <= min1_DTC_54 & min2_DTC_54;

  min2_DTC_55 <= min2_DTC(55);

  betacomp3_arr_56 <= min1_DTC_55 & min2_DTC_55;

  min2_DTC_56 <= min2_DTC(56);

  betacomp3_arr_57 <= min1_DTC_56 & min2_DTC_56;

  min2_DTC_57 <= min2_DTC(57);

  betacomp3_arr_58 <= min1_DTC_57 & min2_DTC_57;

  min2_DTC_58 <= min2_DTC(58);

  betacomp3_arr_59 <= min1_DTC_58 & min2_DTC_58;

  min2_DTC_59 <= min2_DTC(59);

  betacomp3_arr_60 <= min1_DTC_59 & min2_DTC_59;

  min2_DTC_60 <= min2_DTC(60);

  betacomp3_arr_61 <= min1_DTC_60 & min2_DTC_60;

  min2_DTC_61 <= min2_DTC(61);

  betacomp3_arr_62 <= min1_DTC_61 & min2_DTC_61;

  min2_DTC_62 <= min2_DTC(62);

  betacomp3_arr_63 <= min1_DTC_62 & min2_DTC_62;

  min2_DTC_63 <= min2_DTC(63);

  betacomp3_arr_64 <= min1_DTC_63 & min2_DTC_63;

  min2_DTC_64 <= min2_DTC(64);

  betacomp3_arr_65 <= min1_DTC_64 & min2_DTC_64;

  min2_DTC_65 <= min2_DTC(65);

  betacomp3_arr_66 <= min1_DTC_65 & min2_DTC_65;

  min2_DTC_66 <= min2_DTC(66);

  betacomp3_arr_67 <= min1_DTC_66 & min2_DTC_66;

  min2_DTC_67 <= min2_DTC(67);

  betacomp3_arr_68 <= min1_DTC_67 & min2_DTC_67;

  min2_DTC_68 <= min2_DTC(68);

  betacomp3_arr_69 <= min1_DTC_68 & min2_DTC_68;

  min2_DTC_69 <= min2_DTC(69);

  betacomp3_arr_70 <= min1_DTC_69 & min2_DTC_69;

  min2_DTC_70 <= min2_DTC(70);

  betacomp3_arr_71 <= min1_DTC_70 & min2_DTC_70;

  min2_DTC_71 <= min2_DTC(71);

  betacomp3_arr_72 <= min1_DTC_71 & min2_DTC_71;

  min2_DTC_72 <= min2_DTC(72);

  betacomp3_arr_73 <= min1_DTC_72 & min2_DTC_72;

  min2_DTC_73 <= min2_DTC(73);

  betacomp3_arr_74 <= min1_DTC_73 & min2_DTC_73;

  min2_DTC_74 <= min2_DTC(74);

  betacomp3_arr_75 <= min1_DTC_74 & min2_DTC_74;

  min2_DTC_75 <= min2_DTC(75);

  betacomp3_arr_76 <= min1_DTC_75 & min2_DTC_75;

  min2_DTC_76 <= min2_DTC(76);

  betacomp3_arr_77 <= min1_DTC_76 & min2_DTC_76;

  min2_DTC_77 <= min2_DTC(77);

  betacomp3_arr_78 <= min1_DTC_77 & min2_DTC_77;

  min2_DTC_78 <= min2_DTC(78);

  betacomp3_arr_79 <= min1_DTC_78 & min2_DTC_78;

  min2_DTC_79 <= min2_DTC(79);

  betacomp3_arr_80 <= min1_DTC_79 & min2_DTC_79;

  betacomp3D(0) <= betacomp3_arr_1;
  betacomp3D(1) <= betacomp3_arr_2;
  betacomp3D(2) <= betacomp3_arr_3;
  betacomp3D(3) <= betacomp3_arr_4;
  betacomp3D(4) <= betacomp3_arr_5;
  betacomp3D(5) <= betacomp3_arr_6;
  betacomp3D(6) <= betacomp3_arr_7;
  betacomp3D(7) <= betacomp3_arr_8;
  betacomp3D(8) <= betacomp3_arr_9;
  betacomp3D(9) <= betacomp3_arr_10;
  betacomp3D(10) <= betacomp3_arr_11;
  betacomp3D(11) <= betacomp3_arr_12;
  betacomp3D(12) <= betacomp3_arr_13;
  betacomp3D(13) <= betacomp3_arr_14;
  betacomp3D(14) <= betacomp3_arr_15;
  betacomp3D(15) <= betacomp3_arr_16;
  betacomp3D(16) <= betacomp3_arr_17;
  betacomp3D(17) <= betacomp3_arr_18;
  betacomp3D(18) <= betacomp3_arr_19;
  betacomp3D(19) <= betacomp3_arr_20;
  betacomp3D(20) <= betacomp3_arr_21;
  betacomp3D(21) <= betacomp3_arr_22;
  betacomp3D(22) <= betacomp3_arr_23;
  betacomp3D(23) <= betacomp3_arr_24;
  betacomp3D(24) <= betacomp3_arr_25;
  betacomp3D(25) <= betacomp3_arr_26;
  betacomp3D(26) <= betacomp3_arr_27;
  betacomp3D(27) <= betacomp3_arr_28;
  betacomp3D(28) <= betacomp3_arr_29;
  betacomp3D(29) <= betacomp3_arr_30;
  betacomp3D(30) <= betacomp3_arr_31;
  betacomp3D(31) <= betacomp3_arr_32;
  betacomp3D(32) <= betacomp3_arr_33;
  betacomp3D(33) <= betacomp3_arr_34;
  betacomp3D(34) <= betacomp3_arr_35;
  betacomp3D(35) <= betacomp3_arr_36;
  betacomp3D(36) <= betacomp3_arr_37;
  betacomp3D(37) <= betacomp3_arr_38;
  betacomp3D(38) <= betacomp3_arr_39;
  betacomp3D(39) <= betacomp3_arr_40;
  betacomp3D(40) <= betacomp3_arr_41;
  betacomp3D(41) <= betacomp3_arr_42;
  betacomp3D(42) <= betacomp3_arr_43;
  betacomp3D(43) <= betacomp3_arr_44;
  betacomp3D(44) <= betacomp3_arr_45;
  betacomp3D(45) <= betacomp3_arr_46;
  betacomp3D(46) <= betacomp3_arr_47;
  betacomp3D(47) <= betacomp3_arr_48;
  betacomp3D(48) <= betacomp3_arr_49;
  betacomp3D(49) <= betacomp3_arr_50;
  betacomp3D(50) <= betacomp3_arr_51;
  betacomp3D(51) <= betacomp3_arr_52;
  betacomp3D(52) <= betacomp3_arr_53;
  betacomp3D(53) <= betacomp3_arr_54;
  betacomp3D(54) <= betacomp3_arr_55;
  betacomp3D(55) <= betacomp3_arr_56;
  betacomp3D(56) <= betacomp3_arr_57;
  betacomp3D(57) <= betacomp3_arr_58;
  betacomp3D(58) <= betacomp3_arr_59;
  betacomp3D(59) <= betacomp3_arr_60;
  betacomp3D(60) <= betacomp3_arr_61;
  betacomp3D(61) <= betacomp3_arr_62;
  betacomp3D(62) <= betacomp3_arr_63;
  betacomp3D(63) <= betacomp3_arr_64;
  betacomp3D(64) <= betacomp3_arr_65;
  betacomp3D(65) <= betacomp3_arr_66;
  betacomp3D(66) <= betacomp3_arr_67;
  betacomp3D(67) <= betacomp3_arr_68;
  betacomp3D(68) <= betacomp3_arr_69;
  betacomp3D(69) <= betacomp3_arr_70;
  betacomp3D(70) <= betacomp3_arr_71;
  betacomp3D(71) <= betacomp3_arr_72;
  betacomp3D(72) <= betacomp3_arr_73;
  betacomp3D(73) <= betacomp3_arr_74;
  betacomp3D(74) <= betacomp3_arr_75;
  betacomp3D(75) <= betacomp3_arr_76;
  betacomp3D(76) <= betacomp3_arr_77;
  betacomp3D(77) <= betacomp3_arr_78;
  betacomp3D(78) <= betacomp3_arr_79;
  betacomp3D(79) <= betacomp3_arr_80;

  outputgen: FOR k1 IN 0 TO 79 GENERATE
    cnuDecomp3(k1) <= std_logic_vector(betacomp3D(k1));
  END GENERATE;

  c_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        cnuvalid <= '0';
      ELSIF enb = '1' THEN
        cnuvalid <= validD_1;
      END IF;
    END IF;
  END PROCESS c_4_process;


END rtl;

