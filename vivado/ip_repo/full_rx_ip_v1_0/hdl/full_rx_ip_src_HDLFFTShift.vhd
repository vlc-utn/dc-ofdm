-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_HDLFFTShift.vhd
-- Created: 2024-10-02 12:29:27
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_HDLFFTShift
-- Source Path: 
-- Hierarchy Level: 4
-- Model version: 1.100
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_rx_ip_src_HDLFFTShift IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        varargin_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargin_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargin_2                        :   IN    std_logic;
        varargin_3                        :   IN    std_logic;
        varargout_1_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargout_1_im                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        varargout_2                       :   OUT   std_logic
        );
END full_rx_ip_src_HDLFFTShift;


ARCHITECTURE rtl OF full_rx_ip_src_HDLFFTShift IS

  -- Signals
  SIGNAL varargout_2_1                    : std_logic;
  SIGNAL reset                            : std_logic;
  SIGNAL varargin_1_re_signed             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargin_1_im_signed             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp                              : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_FFTShiftTDObj_count          : std_logic;
  SIGNAL obj_FFTShiftTDObj_count_1        : std_logic;
  SIGNAL obj_FFTShiftTDObj_count_2        : std_logic;
  SIGNAL obj_FFTShiftTDObj_count_3        : std_logic;
  SIGNAL tmp_1                            : std_logic;
  SIGNAL tmp_2                            : std_logic;
  SIGNAL tmp_3                            : std_logic;
  SIGNAL tmp_4                            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL yfi                              : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL p31yfi_cast                      : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL p31yfi_cast_1                    : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_5                            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_6                            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_FFTShiftTDObj_rePart         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_7                            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_FFTShiftTDObj_rePart_1       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_8                            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_9                            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL yfi_1                            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL p30yfi_cast                      : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL p30yfi_cast_1                    : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_10                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_11                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_FFTShiftTDObj_imPart         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL tmp_12                           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_FFTShiftTDObj_imPart_1       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargout_1_re_tmp               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL varargout_1_im_tmp               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL obj_FFTShiftTDObj_validOut       : std_logic;
  SIGNAL tmp_13                           : std_logic;
  SIGNAL obj_FFTShiftTDObj_validOut_1     : std_logic;

BEGIN
  varargout_2_1 <= varargin_2;

  reset <= varargin_3;

  varargin_1_re_signed <= signed(varargin_1_re);

  varargin_1_im_signed <= signed(varargin_1_im);

  tmp <= varargin_1_re_signed;

  obj_FFTShiftTDObj_count <= '1';

  obj_FFTShiftTDObj_count_1 <= '0';

  obj_FFTShiftTDObj_count_2 <= '0';

  
  tmp_1 <= obj_FFTShiftTDObj_count WHEN obj_FFTShiftTDObj_count_3 = '0' ELSE
      obj_FFTShiftTDObj_count_1;

  
  tmp_2 <= obj_FFTShiftTDObj_count_3 WHEN varargout_2_1 = '0' ELSE
      tmp_1;

  
  tmp_3 <= tmp_2 WHEN reset = '0' ELSE
      obj_FFTShiftTDObj_count_2;

  obj_FFTShiftTDObj_count_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_FFTShiftTDObj_count_3 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_FFTShiftTDObj_count_3 <= tmp_3;
      END IF;
    END IF;
  END PROCESS obj_FFTShiftTDObj_count_reg_process;


  tmp_4 <= varargin_1_re_signed;

  p31yfi_cast <= resize(varargin_1_re_signed, 17);
  p31yfi_cast_1 <=  - (p31yfi_cast);
  
  yfi <= X"7FFF" WHEN (p31yfi_cast_1(16) = '0') AND (p31yfi_cast_1(15) /= '0') ELSE
      X"8000" WHEN (p31yfi_cast_1(16) = '1') AND (p31yfi_cast_1(15) /= '1') ELSE
      p31yfi_cast_1(15 DOWNTO 0);

  
  tmp_5 <= tmp_4 WHEN obj_FFTShiftTDObj_count_3 = '0' ELSE
      yfi;

  
  tmp_6 <= tmp WHEN varargout_2_1 = '0' ELSE
      tmp_5;

  obj_FFTShiftTDObj_rePart <= to_signed(16#0000#, 16);

  
  tmp_7 <= tmp_6 WHEN reset = '0' ELSE
      obj_FFTShiftTDObj_rePart;

  obj_FFTShiftTDObj_rePart_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_FFTShiftTDObj_rePart_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_FFTShiftTDObj_rePart_1 <= tmp_7;
      END IF;
    END IF;
  END PROCESS obj_FFTShiftTDObj_rePart_reg_process;


  tmp_8 <= varargin_1_im_signed;

  tmp_9 <= varargin_1_im_signed;

  p30yfi_cast <= resize(varargin_1_im_signed, 17);
  p30yfi_cast_1 <=  - (p30yfi_cast);
  
  yfi_1 <= X"7FFF" WHEN (p30yfi_cast_1(16) = '0') AND (p30yfi_cast_1(15) /= '0') ELSE
      X"8000" WHEN (p30yfi_cast_1(16) = '1') AND (p30yfi_cast_1(15) /= '1') ELSE
      p30yfi_cast_1(15 DOWNTO 0);

  
  tmp_10 <= tmp_9 WHEN obj_FFTShiftTDObj_count_3 = '0' ELSE
      yfi_1;

  
  tmp_11 <= tmp_8 WHEN varargout_2_1 = '0' ELSE
      tmp_10;

  obj_FFTShiftTDObj_imPart <= to_signed(16#0000#, 16);

  
  tmp_12 <= tmp_11 WHEN reset = '0' ELSE
      obj_FFTShiftTDObj_imPart;

  obj_FFTShiftTDObj_imPart_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_FFTShiftTDObj_imPart_1 <= to_signed(16#0000#, 16);
      ELSIF enb_1_2_0 = '1' THEN
        obj_FFTShiftTDObj_imPart_1 <= tmp_12;
      END IF;
    END IF;
  END PROCESS obj_FFTShiftTDObj_imPart_reg_process;


  varargout_1_re_tmp <= obj_FFTShiftTDObj_rePart_1;
  varargout_1_im_tmp <= obj_FFTShiftTDObj_imPart_1;

  varargout_1_re <= std_logic_vector(varargout_1_re_tmp);

  varargout_1_im <= std_logic_vector(varargout_1_im_tmp);

  obj_FFTShiftTDObj_validOut <= '0';

  
  tmp_13 <= varargout_2_1 WHEN reset = '0' ELSE
      obj_FFTShiftTDObj_validOut;

  obj_FFTShiftTDObj_validOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_FFTShiftTDObj_validOut_1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        obj_FFTShiftTDObj_validOut_1 <= tmp_13;
      END IF;
    END IF;
  END PROCESS obj_FFTShiftTDObj_validOut_reg_process;


  varargout_2 <= obj_FFTShiftTDObj_validOut_1;

END rtl;

