-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_SinLookUpTableGen.vhd
-- Created: 2024-08-10 11:14:30
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_SinLookUpTableGen
-- Source Path: HDLRx/full_rx/rx_demodulator_full/downshifter/NCO/WaveformGen/SinLookUpTableGen
-- Hierarchy Level: 5
-- Model version: 1.14
-- 
-- Sin Look Up Table Generation Component
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_rx_ip_src_full_rx_pac.ALL;

ENTITY full_rx_ip_src_SinLookUpTableGen IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        lutaddr                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        lutSine                           :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
        );
END full_rx_ip_src_SinLookUpTableGen;


ARCHITECTURE rtl OF full_rx_ip_src_SinLookUpTableGen IS

  -- Constants
  CONSTANT DirectLookupTable_data         : vector_of_signed16(0 TO 511) := 
    (to_signed(16#0000#, 16), to_signed(16#0006#, 16), to_signed(16#000D#, 16), to_signed(16#0013#, 16),
     to_signed(16#0019#, 16), to_signed(16#001F#, 16), to_signed(16#0026#, 16), to_signed(16#002C#, 16),
     to_signed(16#0032#, 16), to_signed(16#0039#, 16), to_signed(16#003F#, 16), to_signed(16#0045#, 16),
     to_signed(16#004B#, 16), to_signed(16#0052#, 16), to_signed(16#0058#, 16), to_signed(16#005E#, 16),
     to_signed(16#0065#, 16), to_signed(16#006B#, 16), to_signed(16#0071#, 16), to_signed(16#0077#, 16),
     to_signed(16#007E#, 16), to_signed(16#0084#, 16), to_signed(16#008A#, 16), to_signed(16#0090#, 16),
     to_signed(16#0097#, 16), to_signed(16#009D#, 16), to_signed(16#00A3#, 16), to_signed(16#00AA#, 16),
     to_signed(16#00B0#, 16), to_signed(16#00B6#, 16), to_signed(16#00BC#, 16), to_signed(16#00C3#, 16),
     to_signed(16#00C9#, 16), to_signed(16#00CF#, 16), to_signed(16#00D6#, 16), to_signed(16#00DC#, 16),
     to_signed(16#00E2#, 16), to_signed(16#00E8#, 16), to_signed(16#00EF#, 16), to_signed(16#00F5#, 16),
     to_signed(16#00FB#, 16), to_signed(16#0101#, 16), to_signed(16#0108#, 16), to_signed(16#010E#, 16),
     to_signed(16#0114#, 16), to_signed(16#011B#, 16), to_signed(16#0121#, 16), to_signed(16#0127#, 16),
     to_signed(16#012D#, 16), to_signed(16#0134#, 16), to_signed(16#013A#, 16), to_signed(16#0140#, 16),
     to_signed(16#0146#, 16), to_signed(16#014D#, 16), to_signed(16#0153#, 16), to_signed(16#0159#, 16),
     to_signed(16#015F#, 16), to_signed(16#0166#, 16), to_signed(16#016C#, 16), to_signed(16#0172#, 16),
     to_signed(16#0178#, 16), to_signed(16#017F#, 16), to_signed(16#0185#, 16), to_signed(16#018B#, 16),
     to_signed(16#0191#, 16), to_signed(16#0198#, 16), to_signed(16#019E#, 16), to_signed(16#01A4#, 16),
     to_signed(16#01AA#, 16), to_signed(16#01B1#, 16), to_signed(16#01B7#, 16), to_signed(16#01BD#, 16),
     to_signed(16#01C3#, 16), to_signed(16#01CA#, 16), to_signed(16#01D0#, 16), to_signed(16#01D6#, 16),
     to_signed(16#01DC#, 16), to_signed(16#01E3#, 16), to_signed(16#01E9#, 16), to_signed(16#01EF#, 16),
     to_signed(16#01F5#, 16), to_signed(16#01FC#, 16), to_signed(16#0202#, 16), to_signed(16#0208#, 16),
     to_signed(16#020E#, 16), to_signed(16#0215#, 16), to_signed(16#021B#, 16), to_signed(16#0221#, 16),
     to_signed(16#0227#, 16), to_signed(16#022D#, 16), to_signed(16#0234#, 16), to_signed(16#023A#, 16),
     to_signed(16#0240#, 16), to_signed(16#0246#, 16), to_signed(16#024D#, 16), to_signed(16#0253#, 16),
     to_signed(16#0259#, 16), to_signed(16#025F#, 16), to_signed(16#0265#, 16), to_signed(16#026C#, 16),
     to_signed(16#0272#, 16), to_signed(16#0278#, 16), to_signed(16#027E#, 16), to_signed(16#0284#, 16),
     to_signed(16#028B#, 16), to_signed(16#0291#, 16), to_signed(16#0297#, 16), to_signed(16#029D#, 16),
     to_signed(16#02A3#, 16), to_signed(16#02AA#, 16), to_signed(16#02B0#, 16), to_signed(16#02B6#, 16),
     to_signed(16#02BC#, 16), to_signed(16#02C2#, 16), to_signed(16#02C9#, 16), to_signed(16#02CF#, 16),
     to_signed(16#02D5#, 16), to_signed(16#02DB#, 16), to_signed(16#02E1#, 16), to_signed(16#02E8#, 16),
     to_signed(16#02EE#, 16), to_signed(16#02F4#, 16), to_signed(16#02FA#, 16), to_signed(16#0300#, 16),
     to_signed(16#0306#, 16), to_signed(16#030D#, 16), to_signed(16#0313#, 16), to_signed(16#0319#, 16),
     to_signed(16#031F#, 16), to_signed(16#0325#, 16), to_signed(16#032B#, 16), to_signed(16#0332#, 16),
     to_signed(16#0338#, 16), to_signed(16#033E#, 16), to_signed(16#0344#, 16), to_signed(16#034A#, 16),
     to_signed(16#0350#, 16), to_signed(16#0356#, 16), to_signed(16#035D#, 16), to_signed(16#0363#, 16),
     to_signed(16#0369#, 16), to_signed(16#036F#, 16), to_signed(16#0375#, 16), to_signed(16#037B#, 16),
     to_signed(16#0381#, 16), to_signed(16#0388#, 16), to_signed(16#038E#, 16), to_signed(16#0394#, 16),
     to_signed(16#039A#, 16), to_signed(16#03A0#, 16), to_signed(16#03A6#, 16), to_signed(16#03AC#, 16),
     to_signed(16#03B2#, 16), to_signed(16#03B9#, 16), to_signed(16#03BF#, 16), to_signed(16#03C5#, 16),
     to_signed(16#03CB#, 16), to_signed(16#03D1#, 16), to_signed(16#03D7#, 16), to_signed(16#03DD#, 16),
     to_signed(16#03E3#, 16), to_signed(16#03E9#, 16), to_signed(16#03EF#, 16), to_signed(16#03F6#, 16),
     to_signed(16#03FC#, 16), to_signed(16#0402#, 16), to_signed(16#0408#, 16), to_signed(16#040E#, 16),
     to_signed(16#0414#, 16), to_signed(16#041A#, 16), to_signed(16#0420#, 16), to_signed(16#0426#, 16),
     to_signed(16#042C#, 16), to_signed(16#0432#, 16), to_signed(16#0438#, 16), to_signed(16#043E#, 16),
     to_signed(16#0444#, 16), to_signed(16#044B#, 16), to_signed(16#0451#, 16), to_signed(16#0457#, 16),
     to_signed(16#045D#, 16), to_signed(16#0463#, 16), to_signed(16#0469#, 16), to_signed(16#046F#, 16),
     to_signed(16#0475#, 16), to_signed(16#047B#, 16), to_signed(16#0481#, 16), to_signed(16#0487#, 16),
     to_signed(16#048D#, 16), to_signed(16#0493#, 16), to_signed(16#0499#, 16), to_signed(16#049F#, 16),
     to_signed(16#04A5#, 16), to_signed(16#04AB#, 16), to_signed(16#04B1#, 16), to_signed(16#04B7#, 16),
     to_signed(16#04BD#, 16), to_signed(16#04C3#, 16), to_signed(16#04C9#, 16), to_signed(16#04CF#, 16),
     to_signed(16#04D5#, 16), to_signed(16#04DB#, 16), to_signed(16#04E1#, 16), to_signed(16#04E7#, 16),
     to_signed(16#04ED#, 16), to_signed(16#04F3#, 16), to_signed(16#04F9#, 16), to_signed(16#04FF#, 16),
     to_signed(16#0505#, 16), to_signed(16#050B#, 16), to_signed(16#0511#, 16), to_signed(16#0517#, 16),
     to_signed(16#051D#, 16), to_signed(16#0523#, 16), to_signed(16#0529#, 16), to_signed(16#052F#, 16),
     to_signed(16#0534#, 16), to_signed(16#053A#, 16), to_signed(16#0540#, 16), to_signed(16#0546#, 16),
     to_signed(16#054C#, 16), to_signed(16#0552#, 16), to_signed(16#0558#, 16), to_signed(16#055E#, 16),
     to_signed(16#0564#, 16), to_signed(16#056A#, 16), to_signed(16#0570#, 16), to_signed(16#0576#, 16),
     to_signed(16#057C#, 16), to_signed(16#0581#, 16), to_signed(16#0587#, 16), to_signed(16#058D#, 16),
     to_signed(16#0593#, 16), to_signed(16#0599#, 16), to_signed(16#059F#, 16), to_signed(16#05A5#, 16),
     to_signed(16#05AB#, 16), to_signed(16#05B1#, 16), to_signed(16#05B6#, 16), to_signed(16#05BC#, 16),
     to_signed(16#05C2#, 16), to_signed(16#05C8#, 16), to_signed(16#05CE#, 16), to_signed(16#05D4#, 16),
     to_signed(16#05DA#, 16), to_signed(16#05DF#, 16), to_signed(16#05E5#, 16), to_signed(16#05EB#, 16),
     to_signed(16#05F1#, 16), to_signed(16#05F7#, 16), to_signed(16#05FD#, 16), to_signed(16#0602#, 16),
     to_signed(16#0608#, 16), to_signed(16#060E#, 16), to_signed(16#0614#, 16), to_signed(16#061A#, 16),
     to_signed(16#061F#, 16), to_signed(16#0625#, 16), to_signed(16#062B#, 16), to_signed(16#0631#, 16),
     to_signed(16#0637#, 16), to_signed(16#063C#, 16), to_signed(16#0642#, 16), to_signed(16#0648#, 16),
     to_signed(16#064E#, 16), to_signed(16#0654#, 16), to_signed(16#0659#, 16), to_signed(16#065F#, 16),
     to_signed(16#0665#, 16), to_signed(16#066B#, 16), to_signed(16#0670#, 16), to_signed(16#0676#, 16),
     to_signed(16#067C#, 16), to_signed(16#0682#, 16), to_signed(16#0687#, 16), to_signed(16#068D#, 16),
     to_signed(16#0693#, 16), to_signed(16#0699#, 16), to_signed(16#069E#, 16), to_signed(16#06A4#, 16),
     to_signed(16#06AA#, 16), to_signed(16#06AF#, 16), to_signed(16#06B5#, 16), to_signed(16#06BB#, 16),
     to_signed(16#06C1#, 16), to_signed(16#06C6#, 16), to_signed(16#06CC#, 16), to_signed(16#06D2#, 16),
     to_signed(16#06D7#, 16), to_signed(16#06DD#, 16), to_signed(16#06E3#, 16), to_signed(16#06E8#, 16),
     to_signed(16#06EE#, 16), to_signed(16#06F4#, 16), to_signed(16#06F9#, 16), to_signed(16#06FF#, 16),
     to_signed(16#0705#, 16), to_signed(16#070A#, 16), to_signed(16#0710#, 16), to_signed(16#0715#, 16),
     to_signed(16#071B#, 16), to_signed(16#0721#, 16), to_signed(16#0726#, 16), to_signed(16#072C#, 16),
     to_signed(16#0732#, 16), to_signed(16#0737#, 16), to_signed(16#073D#, 16), to_signed(16#0742#, 16),
     to_signed(16#0748#, 16), to_signed(16#074E#, 16), to_signed(16#0753#, 16), to_signed(16#0759#, 16),
     to_signed(16#075E#, 16), to_signed(16#0764#, 16), to_signed(16#076A#, 16), to_signed(16#076F#, 16),
     to_signed(16#0775#, 16), to_signed(16#077A#, 16), to_signed(16#0780#, 16), to_signed(16#0785#, 16),
     to_signed(16#078B#, 16), to_signed(16#0790#, 16), to_signed(16#0796#, 16), to_signed(16#079B#, 16),
     to_signed(16#07A1#, 16), to_signed(16#07A6#, 16), to_signed(16#07AC#, 16), to_signed(16#07B2#, 16),
     to_signed(16#07B7#, 16), to_signed(16#07BD#, 16), to_signed(16#07C2#, 16), to_signed(16#07C8#, 16),
     to_signed(16#07CD#, 16), to_signed(16#07D2#, 16), to_signed(16#07D8#, 16), to_signed(16#07DD#, 16),
     to_signed(16#07E3#, 16), to_signed(16#07E8#, 16), to_signed(16#07EE#, 16), to_signed(16#07F3#, 16),
     to_signed(16#07F9#, 16), to_signed(16#07FE#, 16), to_signed(16#0804#, 16), to_signed(16#0809#, 16),
     to_signed(16#080E#, 16), to_signed(16#0814#, 16), to_signed(16#0819#, 16), to_signed(16#081F#, 16),
     to_signed(16#0824#, 16), to_signed(16#082A#, 16), to_signed(16#082F#, 16), to_signed(16#0834#, 16),
     to_signed(16#083A#, 16), to_signed(16#083F#, 16), to_signed(16#0845#, 16), to_signed(16#084A#, 16),
     to_signed(16#084F#, 16), to_signed(16#0855#, 16), to_signed(16#085A#, 16), to_signed(16#085F#, 16),
     to_signed(16#0865#, 16), to_signed(16#086A#, 16), to_signed(16#086F#, 16), to_signed(16#0875#, 16),
     to_signed(16#087A#, 16), to_signed(16#087F#, 16), to_signed(16#0885#, 16), to_signed(16#088A#, 16),
     to_signed(16#088F#, 16), to_signed(16#0895#, 16), to_signed(16#089A#, 16), to_signed(16#089F#, 16),
     to_signed(16#08A5#, 16), to_signed(16#08AA#, 16), to_signed(16#08AF#, 16), to_signed(16#08B4#, 16),
     to_signed(16#08BA#, 16), to_signed(16#08BF#, 16), to_signed(16#08C4#, 16), to_signed(16#08C9#, 16),
     to_signed(16#08CF#, 16), to_signed(16#08D4#, 16), to_signed(16#08D9#, 16), to_signed(16#08DE#, 16),
     to_signed(16#08E4#, 16), to_signed(16#08E9#, 16), to_signed(16#08EE#, 16), to_signed(16#08F3#, 16),
     to_signed(16#08F8#, 16), to_signed(16#08FE#, 16), to_signed(16#0903#, 16), to_signed(16#0908#, 16),
     to_signed(16#090D#, 16), to_signed(16#0912#, 16), to_signed(16#0918#, 16), to_signed(16#091D#, 16),
     to_signed(16#0922#, 16), to_signed(16#0927#, 16), to_signed(16#092C#, 16), to_signed(16#0931#, 16),
     to_signed(16#0937#, 16), to_signed(16#093C#, 16), to_signed(16#0941#, 16), to_signed(16#0946#, 16),
     to_signed(16#094B#, 16), to_signed(16#0950#, 16), to_signed(16#0955#, 16), to_signed(16#095A#, 16),
     to_signed(16#095F#, 16), to_signed(16#0965#, 16), to_signed(16#096A#, 16), to_signed(16#096F#, 16),
     to_signed(16#0974#, 16), to_signed(16#0979#, 16), to_signed(16#097E#, 16), to_signed(16#0983#, 16),
     to_signed(16#0988#, 16), to_signed(16#098D#, 16), to_signed(16#0992#, 16), to_signed(16#0997#, 16),
     to_signed(16#099C#, 16), to_signed(16#09A1#, 16), to_signed(16#09A6#, 16), to_signed(16#09AB#, 16),
     to_signed(16#09B0#, 16), to_signed(16#09B5#, 16), to_signed(16#09BA#, 16), to_signed(16#09BF#, 16),
     to_signed(16#09C4#, 16), to_signed(16#09C9#, 16), to_signed(16#09CE#, 16), to_signed(16#09D3#, 16),
     to_signed(16#09D8#, 16), to_signed(16#09DD#, 16), to_signed(16#09E2#, 16), to_signed(16#09E7#, 16),
     to_signed(16#09EC#, 16), to_signed(16#09F1#, 16), to_signed(16#09F6#, 16), to_signed(16#09FB#, 16),
     to_signed(16#09FF#, 16), to_signed(16#0A04#, 16), to_signed(16#0A09#, 16), to_signed(16#0A0E#, 16),
     to_signed(16#0A13#, 16), to_signed(16#0A18#, 16), to_signed(16#0A1D#, 16), to_signed(16#0A22#, 16),
     to_signed(16#0A26#, 16), to_signed(16#0A2B#, 16), to_signed(16#0A30#, 16), to_signed(16#0A35#, 16),
     to_signed(16#0A3A#, 16), to_signed(16#0A3F#, 16), to_signed(16#0A44#, 16), to_signed(16#0A48#, 16),
     to_signed(16#0A4D#, 16), to_signed(16#0A52#, 16), to_signed(16#0A57#, 16), to_signed(16#0A5C#, 16),
     to_signed(16#0A60#, 16), to_signed(16#0A65#, 16), to_signed(16#0A6A#, 16), to_signed(16#0A6F#, 16),
     to_signed(16#0A73#, 16), to_signed(16#0A78#, 16), to_signed(16#0A7D#, 16), to_signed(16#0A82#, 16),
     to_signed(16#0A86#, 16), to_signed(16#0A8B#, 16), to_signed(16#0A90#, 16), to_signed(16#0A95#, 16),
     to_signed(16#0A99#, 16), to_signed(16#0A9E#, 16), to_signed(16#0AA3#, 16), to_signed(16#0AA7#, 16),
     to_signed(16#0AAC#, 16), to_signed(16#0AB1#, 16), to_signed(16#0AB5#, 16), to_signed(16#0ABA#, 16),
     to_signed(16#0ABF#, 16), to_signed(16#0AC3#, 16), to_signed(16#0AC8#, 16), to_signed(16#0ACD#, 16),
     to_signed(16#0AD1#, 16), to_signed(16#0AD6#, 16), to_signed(16#0ADB#, 16), to_signed(16#0ADF#, 16),
     to_signed(16#0AE4#, 16), to_signed(16#0AE8#, 16), to_signed(16#0AED#, 16), to_signed(16#0AF2#, 16),
     to_signed(16#0AF6#, 16), to_signed(16#0AFB#, 16), to_signed(16#0AFF#, 16), to_signed(16#0B04#, 16),
     to_signed(16#0B08#, 16), to_signed(16#0B0D#, 16), to_signed(16#0B11#, 16), to_signed(16#0B16#, 16),
     to_signed(16#0B1B#, 16), to_signed(16#0B1F#, 16), to_signed(16#0B24#, 16), to_signed(16#0B28#, 16),
     to_signed(16#0B2D#, 16), to_signed(16#0B31#, 16), to_signed(16#0B36#, 16), to_signed(16#0B3A#, 16),
     to_signed(16#0B3E#, 16), to_signed(16#0B43#, 16), to_signed(16#0B47#, 16), to_signed(16#0B4C#, 16));  -- sfix16 [512]

  -- Signals
  SIGNAL lutaddr_unsigned                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL lutaddrInReg                     : unsigned(8 DOWNTO 0) := to_unsigned(16#000#, 9);  -- ufix9
  SIGNAL lutSineout                       : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL lutSineoutreg1                   : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16_En12
  SIGNAL lutSine_tmp                      : signed(15 DOWNTO 0);  -- sfix16_En12

BEGIN
  lutaddr_unsigned <= unsigned(lutaddr);

  -- Look up table address input register
  LUTaddrRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutaddrInReg <= lutaddr_unsigned;
      END IF;
    END IF;
  END PROCESS LUTaddrRegister_process;


  -- Octant Sine wave table
  lutSineout <= DirectLookupTable_data(to_integer(lutaddrInReg));

  -- Sin lookup table output register
  LUTSineoutResetRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutSineoutreg1 <= lutSineout;
      END IF;
    END IF;
  END PROCESS LUTSineoutResetRegister_process;


  LUTSineoutRegister_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      lutSine_tmp <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutSine_tmp <= lutSineoutreg1;
      END IF;
    END IF;
  END PROCESS LUTSineoutRegister_process;


  lutSine <= std_logic_vector(lutSine_tmp);

END rtl;

