-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_CosLookUpTableGen.vhd
-- Created: 2024-08-10 11:14:30
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_CosLookUpTableGen
-- Source Path: HDLRx/full_rx/rx_demodulator_full/downshifter/NCO/WaveformGen/CosLookUpTableGen
-- Hierarchy Level: 5
-- Model version: 1.14
-- 
-- Cos Look Up Table Generation Component
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_rx_ip_src_full_rx_pac.ALL;

ENTITY full_rx_ip_src_CosLookUpTableGen IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        lutaddr                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        lutCosine                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
        );
END full_rx_ip_src_CosLookUpTableGen;


ARCHITECTURE rtl OF full_rx_ip_src_CosLookUpTableGen IS

  -- Constants
  CONSTANT DirectLookupTable_data         : vector_of_signed16(0 TO 511) := 
    (to_signed(16#1000#, 16), to_signed(16#1000#, 16), to_signed(16#1000#, 16), to_signed(16#1000#, 16),
     to_signed(16#1000#, 16), to_signed(16#1000#, 16), to_signed(16#1000#, 16), to_signed(16#1000#, 16),
     to_signed(16#1000#, 16), to_signed(16#1000#, 16), to_signed(16#1000#, 16), to_signed(16#0FFF#, 16),
     to_signed(16#0FFF#, 16), to_signed(16#0FFF#, 16), to_signed(16#0FFF#, 16), to_signed(16#0FFF#, 16),
     to_signed(16#0FFF#, 16), to_signed(16#0FFF#, 16), to_signed(16#0FFE#, 16), to_signed(16#0FFE#, 16),
     to_signed(16#0FFE#, 16), to_signed(16#0FFE#, 16), to_signed(16#0FFE#, 16), to_signed(16#0FFD#, 16),
     to_signed(16#0FFD#, 16), to_signed(16#0FFD#, 16), to_signed(16#0FFD#, 16), to_signed(16#0FFC#, 16),
     to_signed(16#0FFC#, 16), to_signed(16#0FFC#, 16), to_signed(16#0FFC#, 16), to_signed(16#0FFB#, 16),
     to_signed(16#0FFB#, 16), to_signed(16#0FFB#, 16), to_signed(16#0FFA#, 16), to_signed(16#0FFA#, 16),
     to_signed(16#0FFA#, 16), to_signed(16#0FF9#, 16), to_signed(16#0FF9#, 16), to_signed(16#0FF9#, 16),
     to_signed(16#0FF8#, 16), to_signed(16#0FF8#, 16), to_signed(16#0FF8#, 16), to_signed(16#0FF7#, 16),
     to_signed(16#0FF7#, 16), to_signed(16#0FF6#, 16), to_signed(16#0FF6#, 16), to_signed(16#0FF5#, 16),
     to_signed(16#0FF5#, 16), to_signed(16#0FF4#, 16), to_signed(16#0FF4#, 16), to_signed(16#0FF3#, 16),
     to_signed(16#0FF3#, 16), to_signed(16#0FF2#, 16), to_signed(16#0FF2#, 16), to_signed(16#0FF1#, 16),
     to_signed(16#0FF1#, 16), to_signed(16#0FF0#, 16), to_signed(16#0FF0#, 16), to_signed(16#0FEF#, 16),
     to_signed(16#0FEF#, 16), to_signed(16#0FEE#, 16), to_signed(16#0FED#, 16), to_signed(16#0FED#, 16),
     to_signed(16#0FEC#, 16), to_signed(16#0FEC#, 16), to_signed(16#0FEB#, 16), to_signed(16#0FEA#, 16),
     to_signed(16#0FEA#, 16), to_signed(16#0FE9#, 16), to_signed(16#0FE8#, 16), to_signed(16#0FE8#, 16),
     to_signed(16#0FE7#, 16), to_signed(16#0FE6#, 16), to_signed(16#0FE6#, 16), to_signed(16#0FE5#, 16),
     to_signed(16#0FE4#, 16), to_signed(16#0FE3#, 16), to_signed(16#0FE3#, 16), to_signed(16#0FE2#, 16),
     to_signed(16#0FE1#, 16), to_signed(16#0FE0#, 16), to_signed(16#0FE0#, 16), to_signed(16#0FDF#, 16),
     to_signed(16#0FDE#, 16), to_signed(16#0FDD#, 16), to_signed(16#0FDC#, 16), to_signed(16#0FDC#, 16),
     to_signed(16#0FDB#, 16), to_signed(16#0FDA#, 16), to_signed(16#0FD9#, 16), to_signed(16#0FD8#, 16),
     to_signed(16#0FD7#, 16), to_signed(16#0FD6#, 16), to_signed(16#0FD5#, 16), to_signed(16#0FD5#, 16),
     to_signed(16#0FD4#, 16), to_signed(16#0FD3#, 16), to_signed(16#0FD2#, 16), to_signed(16#0FD1#, 16),
     to_signed(16#0FD0#, 16), to_signed(16#0FCF#, 16), to_signed(16#0FCE#, 16), to_signed(16#0FCD#, 16),
     to_signed(16#0FCC#, 16), to_signed(16#0FCB#, 16), to_signed(16#0FCA#, 16), to_signed(16#0FC9#, 16),
     to_signed(16#0FC8#, 16), to_signed(16#0FC7#, 16), to_signed(16#0FC6#, 16), to_signed(16#0FC5#, 16),
     to_signed(16#0FC4#, 16), to_signed(16#0FC3#, 16), to_signed(16#0FC2#, 16), to_signed(16#0FC0#, 16),
     to_signed(16#0FBF#, 16), to_signed(16#0FBE#, 16), to_signed(16#0FBD#, 16), to_signed(16#0FBC#, 16),
     to_signed(16#0FBB#, 16), to_signed(16#0FBA#, 16), to_signed(16#0FB8#, 16), to_signed(16#0FB7#, 16),
     to_signed(16#0FB6#, 16), to_signed(16#0FB5#, 16), to_signed(16#0FB4#, 16), to_signed(16#0FB3#, 16),
     to_signed(16#0FB1#, 16), to_signed(16#0FB0#, 16), to_signed(16#0FAF#, 16), to_signed(16#0FAE#, 16),
     to_signed(16#0FAC#, 16), to_signed(16#0FAB#, 16), to_signed(16#0FAA#, 16), to_signed(16#0FA8#, 16),
     to_signed(16#0FA7#, 16), to_signed(16#0FA6#, 16), to_signed(16#0FA5#, 16), to_signed(16#0FA3#, 16),
     to_signed(16#0FA2#, 16), to_signed(16#0FA1#, 16), to_signed(16#0F9F#, 16), to_signed(16#0F9E#, 16),
     to_signed(16#0F9C#, 16), to_signed(16#0F9B#, 16), to_signed(16#0F9A#, 16), to_signed(16#0F98#, 16),
     to_signed(16#0F97#, 16), to_signed(16#0F95#, 16), to_signed(16#0F94#, 16), to_signed(16#0F93#, 16),
     to_signed(16#0F91#, 16), to_signed(16#0F90#, 16), to_signed(16#0F8E#, 16), to_signed(16#0F8D#, 16),
     to_signed(16#0F8B#, 16), to_signed(16#0F8A#, 16), to_signed(16#0F88#, 16), to_signed(16#0F87#, 16),
     to_signed(16#0F85#, 16), to_signed(16#0F84#, 16), to_signed(16#0F82#, 16), to_signed(16#0F81#, 16),
     to_signed(16#0F7F#, 16), to_signed(16#0F7D#, 16), to_signed(16#0F7C#, 16), to_signed(16#0F7A#, 16),
     to_signed(16#0F79#, 16), to_signed(16#0F77#, 16), to_signed(16#0F76#, 16), to_signed(16#0F74#, 16),
     to_signed(16#0F72#, 16), to_signed(16#0F71#, 16), to_signed(16#0F6F#, 16), to_signed(16#0F6D#, 16),
     to_signed(16#0F6C#, 16), to_signed(16#0F6A#, 16), to_signed(16#0F68#, 16), to_signed(16#0F67#, 16),
     to_signed(16#0F65#, 16), to_signed(16#0F63#, 16), to_signed(16#0F61#, 16), to_signed(16#0F60#, 16),
     to_signed(16#0F5E#, 16), to_signed(16#0F5C#, 16), to_signed(16#0F5A#, 16), to_signed(16#0F59#, 16),
     to_signed(16#0F57#, 16), to_signed(16#0F55#, 16), to_signed(16#0F53#, 16), to_signed(16#0F51#, 16),
     to_signed(16#0F50#, 16), to_signed(16#0F4E#, 16), to_signed(16#0F4C#, 16), to_signed(16#0F4A#, 16),
     to_signed(16#0F48#, 16), to_signed(16#0F46#, 16), to_signed(16#0F45#, 16), to_signed(16#0F43#, 16),
     to_signed(16#0F41#, 16), to_signed(16#0F3F#, 16), to_signed(16#0F3D#, 16), to_signed(16#0F3B#, 16),
     to_signed(16#0F39#, 16), to_signed(16#0F37#, 16), to_signed(16#0F35#, 16), to_signed(16#0F33#, 16),
     to_signed(16#0F31#, 16), to_signed(16#0F2F#, 16), to_signed(16#0F2D#, 16), to_signed(16#0F2B#, 16),
     to_signed(16#0F29#, 16), to_signed(16#0F27#, 16), to_signed(16#0F25#, 16), to_signed(16#0F23#, 16),
     to_signed(16#0F21#, 16), to_signed(16#0F1F#, 16), to_signed(16#0F1D#, 16), to_signed(16#0F1B#, 16),
     to_signed(16#0F19#, 16), to_signed(16#0F17#, 16), to_signed(16#0F15#, 16), to_signed(16#0F13#, 16),
     to_signed(16#0F11#, 16), to_signed(16#0F0E#, 16), to_signed(16#0F0C#, 16), to_signed(16#0F0A#, 16),
     to_signed(16#0F08#, 16), to_signed(16#0F06#, 16), to_signed(16#0F04#, 16), to_signed(16#0F02#, 16),
     to_signed(16#0EFF#, 16), to_signed(16#0EFD#, 16), to_signed(16#0EFB#, 16), to_signed(16#0EF9#, 16),
     to_signed(16#0EF7#, 16), to_signed(16#0EF4#, 16), to_signed(16#0EF2#, 16), to_signed(16#0EF0#, 16),
     to_signed(16#0EEE#, 16), to_signed(16#0EEB#, 16), to_signed(16#0EE9#, 16), to_signed(16#0EE7#, 16),
     to_signed(16#0EE4#, 16), to_signed(16#0EE2#, 16), to_signed(16#0EE0#, 16), to_signed(16#0EDD#, 16),
     to_signed(16#0EDB#, 16), to_signed(16#0ED9#, 16), to_signed(16#0ED6#, 16), to_signed(16#0ED4#, 16),
     to_signed(16#0ED2#, 16), to_signed(16#0ECF#, 16), to_signed(16#0ECD#, 16), to_signed(16#0ECB#, 16),
     to_signed(16#0EC8#, 16), to_signed(16#0EC6#, 16), to_signed(16#0EC3#, 16), to_signed(16#0EC1#, 16),
     to_signed(16#0EBF#, 16), to_signed(16#0EBC#, 16), to_signed(16#0EBA#, 16), to_signed(16#0EB7#, 16),
     to_signed(16#0EB5#, 16), to_signed(16#0EB2#, 16), to_signed(16#0EB0#, 16), to_signed(16#0EAD#, 16),
     to_signed(16#0EAB#, 16), to_signed(16#0EA8#, 16), to_signed(16#0EA6#, 16), to_signed(16#0EA3#, 16),
     to_signed(16#0EA1#, 16), to_signed(16#0E9E#, 16), to_signed(16#0E9B#, 16), to_signed(16#0E99#, 16),
     to_signed(16#0E96#, 16), to_signed(16#0E94#, 16), to_signed(16#0E91#, 16), to_signed(16#0E8F#, 16),
     to_signed(16#0E8C#, 16), to_signed(16#0E89#, 16), to_signed(16#0E87#, 16), to_signed(16#0E84#, 16),
     to_signed(16#0E81#, 16), to_signed(16#0E7F#, 16), to_signed(16#0E7C#, 16), to_signed(16#0E79#, 16),
     to_signed(16#0E77#, 16), to_signed(16#0E74#, 16), to_signed(16#0E71#, 16), to_signed(16#0E6F#, 16),
     to_signed(16#0E6C#, 16), to_signed(16#0E69#, 16), to_signed(16#0E66#, 16), to_signed(16#0E64#, 16),
     to_signed(16#0E61#, 16), to_signed(16#0E5E#, 16), to_signed(16#0E5B#, 16), to_signed(16#0E59#, 16),
     to_signed(16#0E56#, 16), to_signed(16#0E53#, 16), to_signed(16#0E50#, 16), to_signed(16#0E4D#, 16),
     to_signed(16#0E4B#, 16), to_signed(16#0E48#, 16), to_signed(16#0E45#, 16), to_signed(16#0E42#, 16),
     to_signed(16#0E3F#, 16), to_signed(16#0E3C#, 16), to_signed(16#0E3A#, 16), to_signed(16#0E37#, 16),
     to_signed(16#0E34#, 16), to_signed(16#0E31#, 16), to_signed(16#0E2E#, 16), to_signed(16#0E2B#, 16),
     to_signed(16#0E28#, 16), to_signed(16#0E25#, 16), to_signed(16#0E22#, 16), to_signed(16#0E1F#, 16),
     to_signed(16#0E1C#, 16), to_signed(16#0E19#, 16), to_signed(16#0E16#, 16), to_signed(16#0E13#, 16),
     to_signed(16#0E10#, 16), to_signed(16#0E0D#, 16), to_signed(16#0E0A#, 16), to_signed(16#0E07#, 16),
     to_signed(16#0E04#, 16), to_signed(16#0E01#, 16), to_signed(16#0DFE#, 16), to_signed(16#0DFB#, 16),
     to_signed(16#0DF8#, 16), to_signed(16#0DF5#, 16), to_signed(16#0DF2#, 16), to_signed(16#0DEF#, 16),
     to_signed(16#0DEC#, 16), to_signed(16#0DE9#, 16), to_signed(16#0DE6#, 16), to_signed(16#0DE3#, 16),
     to_signed(16#0DDF#, 16), to_signed(16#0DDC#, 16), to_signed(16#0DD9#, 16), to_signed(16#0DD6#, 16),
     to_signed(16#0DD3#, 16), to_signed(16#0DD0#, 16), to_signed(16#0DCC#, 16), to_signed(16#0DC9#, 16),
     to_signed(16#0DC6#, 16), to_signed(16#0DC3#, 16), to_signed(16#0DC0#, 16), to_signed(16#0DBC#, 16),
     to_signed(16#0DB9#, 16), to_signed(16#0DB6#, 16), to_signed(16#0DB3#, 16), to_signed(16#0DB0#, 16),
     to_signed(16#0DAC#, 16), to_signed(16#0DA9#, 16), to_signed(16#0DA6#, 16), to_signed(16#0DA2#, 16),
     to_signed(16#0D9F#, 16), to_signed(16#0D9C#, 16), to_signed(16#0D99#, 16), to_signed(16#0D95#, 16),
     to_signed(16#0D92#, 16), to_signed(16#0D8F#, 16), to_signed(16#0D8B#, 16), to_signed(16#0D88#, 16),
     to_signed(16#0D85#, 16), to_signed(16#0D81#, 16), to_signed(16#0D7E#, 16), to_signed(16#0D7A#, 16),
     to_signed(16#0D77#, 16), to_signed(16#0D74#, 16), to_signed(16#0D70#, 16), to_signed(16#0D6D#, 16),
     to_signed(16#0D69#, 16), to_signed(16#0D66#, 16), to_signed(16#0D62#, 16), to_signed(16#0D5F#, 16),
     to_signed(16#0D5C#, 16), to_signed(16#0D58#, 16), to_signed(16#0D55#, 16), to_signed(16#0D51#, 16),
     to_signed(16#0D4E#, 16), to_signed(16#0D4A#, 16), to_signed(16#0D47#, 16), to_signed(16#0D43#, 16),
     to_signed(16#0D40#, 16), to_signed(16#0D3C#, 16), to_signed(16#0D39#, 16), to_signed(16#0D35#, 16),
     to_signed(16#0D32#, 16), to_signed(16#0D2E#, 16), to_signed(16#0D2A#, 16), to_signed(16#0D27#, 16),
     to_signed(16#0D23#, 16), to_signed(16#0D20#, 16), to_signed(16#0D1C#, 16), to_signed(16#0D18#, 16),
     to_signed(16#0D15#, 16), to_signed(16#0D11#, 16), to_signed(16#0D0E#, 16), to_signed(16#0D0A#, 16),
     to_signed(16#0D06#, 16), to_signed(16#0D03#, 16), to_signed(16#0CFF#, 16), to_signed(16#0CFB#, 16),
     to_signed(16#0CF8#, 16), to_signed(16#0CF4#, 16), to_signed(16#0CF0#, 16), to_signed(16#0CED#, 16),
     to_signed(16#0CE9#, 16), to_signed(16#0CE5#, 16), to_signed(16#0CE1#, 16), to_signed(16#0CDE#, 16),
     to_signed(16#0CDA#, 16), to_signed(16#0CD6#, 16), to_signed(16#0CD2#, 16), to_signed(16#0CCF#, 16),
     to_signed(16#0CCB#, 16), to_signed(16#0CC7#, 16), to_signed(16#0CC3#, 16), to_signed(16#0CC0#, 16),
     to_signed(16#0CBC#, 16), to_signed(16#0CB8#, 16), to_signed(16#0CB4#, 16), to_signed(16#0CB0#, 16),
     to_signed(16#0CAC#, 16), to_signed(16#0CA9#, 16), to_signed(16#0CA5#, 16), to_signed(16#0CA1#, 16),
     to_signed(16#0C9D#, 16), to_signed(16#0C99#, 16), to_signed(16#0C95#, 16), to_signed(16#0C91#, 16),
     to_signed(16#0C8E#, 16), to_signed(16#0C8A#, 16), to_signed(16#0C86#, 16), to_signed(16#0C82#, 16),
     to_signed(16#0C7E#, 16), to_signed(16#0C7A#, 16), to_signed(16#0C76#, 16), to_signed(16#0C72#, 16),
     to_signed(16#0C6E#, 16), to_signed(16#0C6A#, 16), to_signed(16#0C66#, 16), to_signed(16#0C62#, 16),
     to_signed(16#0C5E#, 16), to_signed(16#0C5A#, 16), to_signed(16#0C56#, 16), to_signed(16#0C52#, 16),
     to_signed(16#0C4E#, 16), to_signed(16#0C4A#, 16), to_signed(16#0C46#, 16), to_signed(16#0C42#, 16),
     to_signed(16#0C3E#, 16), to_signed(16#0C3A#, 16), to_signed(16#0C36#, 16), to_signed(16#0C32#, 16),
     to_signed(16#0C2E#, 16), to_signed(16#0C2A#, 16), to_signed(16#0C26#, 16), to_signed(16#0C22#, 16),
     to_signed(16#0C1E#, 16), to_signed(16#0C19#, 16), to_signed(16#0C15#, 16), to_signed(16#0C11#, 16),
     to_signed(16#0C0D#, 16), to_signed(16#0C09#, 16), to_signed(16#0C05#, 16), to_signed(16#0C01#, 16),
     to_signed(16#0BFC#, 16), to_signed(16#0BF8#, 16), to_signed(16#0BF4#, 16), to_signed(16#0BF0#, 16),
     to_signed(16#0BEC#, 16), to_signed(16#0BE8#, 16), to_signed(16#0BE3#, 16), to_signed(16#0BDF#, 16),
     to_signed(16#0BDB#, 16), to_signed(16#0BD7#, 16), to_signed(16#0BD2#, 16), to_signed(16#0BCE#, 16),
     to_signed(16#0BCA#, 16), to_signed(16#0BC6#, 16), to_signed(16#0BC1#, 16), to_signed(16#0BBD#, 16),
     to_signed(16#0BB9#, 16), to_signed(16#0BB5#, 16), to_signed(16#0BB0#, 16), to_signed(16#0BAC#, 16),
     to_signed(16#0BA8#, 16), to_signed(16#0BA3#, 16), to_signed(16#0B9F#, 16), to_signed(16#0B9B#, 16),
     to_signed(16#0B97#, 16), to_signed(16#0B92#, 16), to_signed(16#0B8E#, 16), to_signed(16#0B89#, 16),
     to_signed(16#0B85#, 16), to_signed(16#0B81#, 16), to_signed(16#0B7C#, 16), to_signed(16#0B78#, 16),
     to_signed(16#0B74#, 16), to_signed(16#0B6F#, 16), to_signed(16#0B6B#, 16), to_signed(16#0B66#, 16),
     to_signed(16#0B62#, 16), to_signed(16#0B5E#, 16), to_signed(16#0B59#, 16), to_signed(16#0B55#, 16));  -- sfix16 [512]

  -- Signals
  SIGNAL lutaddr_unsigned                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL lutaddrInReg                     : unsigned(8 DOWNTO 0) := to_unsigned(16#000#, 9);  -- ufix9
  SIGNAL lutCosineout                     : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL lutCosineoutreg1                 : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16_En12
  SIGNAL lutCosine_tmp                    : signed(15 DOWNTO 0);  -- sfix16_En12

BEGIN
  lutaddr_unsigned <= unsigned(lutaddr);

  -- Look up tale address input register
  LUTaddrRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutaddrInReg <= lutaddr_unsigned;
      END IF;
    END IF;
  END PROCESS LUTaddrRegister_process;


  -- Octant Cosine wave table
  lutCosineout <= DirectLookupTable_data(to_integer(lutaddrInReg));

  -- Cos lookup table output register
  LUTCosineoutResetRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutCosineoutreg1 <= lutCosineout;
      END IF;
    END IF;
  END PROCESS LUTCosineoutResetRegister_process;


  LUTCosineoutRegister_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      lutCosine_tmp <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutCosine_tmp <= lutCosineoutreg1;
      END IF;
    END IF;
  END PROCESS LUTCosineoutRegister_process;


  lutCosine <= std_logic_vector(lutCosine_tmp);

END rtl;

