-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_CosLookUpTableGen.vhd
-- Created: 2024-10-05 22:40:32
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_CosLookUpTableGen
-- Source Path: HDLRx/full_rx/rx_demodulator_full/downshifter/NCO/WaveformGen/CosLookUpTableGen
-- Hierarchy Level: 5
-- Model version: 1.125
-- 
-- Cos Look Up Table Generation Component
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_rx_ip_src_full_rx_pac.ALL;

ENTITY full_rx_ip_src_CosLookUpTableGen IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        lutaddr                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        lutCosine                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END full_rx_ip_src_CosLookUpTableGen;


ARCHITECTURE rtl OF full_rx_ip_src_CosLookUpTableGen IS

  -- Constants
  CONSTANT DirectLookupTable_data         : vector_of_signed16(0 TO 511) := 
    (to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#4000#, 16),
     to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#3FFF#, 16), to_signed(16#3FFF#, 16),
     to_signed(16#3FFF#, 16), to_signed(16#3FFE#, 16), to_signed(16#3FFE#, 16), to_signed(16#3FFE#, 16),
     to_signed(16#3FFD#, 16), to_signed(16#3FFD#, 16), to_signed(16#3FFC#, 16), to_signed(16#3FFC#, 16),
     to_signed(16#3FFB#, 16), to_signed(16#3FFA#, 16), to_signed(16#3FFA#, 16), to_signed(16#3FF9#, 16),
     to_signed(16#3FF8#, 16), to_signed(16#3FF7#, 16), to_signed(16#3FF7#, 16), to_signed(16#3FF6#, 16),
     to_signed(16#3FF5#, 16), to_signed(16#3FF4#, 16), to_signed(16#3FF3#, 16), to_signed(16#3FF2#, 16),
     to_signed(16#3FF1#, 16), to_signed(16#3FF0#, 16), to_signed(16#3FEF#, 16), to_signed(16#3FED#, 16),
     to_signed(16#3FEC#, 16), to_signed(16#3FEB#, 16), to_signed(16#3FEA#, 16), to_signed(16#3FE8#, 16),
     to_signed(16#3FE7#, 16), to_signed(16#3FE6#, 16), to_signed(16#3FE4#, 16), to_signed(16#3FE3#, 16),
     to_signed(16#3FE1#, 16), to_signed(16#3FE0#, 16), to_signed(16#3FDE#, 16), to_signed(16#3FDC#, 16),
     to_signed(16#3FDB#, 16), to_signed(16#3FD9#, 16), to_signed(16#3FD7#, 16), to_signed(16#3FD5#, 16),
     to_signed(16#3FD4#, 16), to_signed(16#3FD2#, 16), to_signed(16#3FD0#, 16), to_signed(16#3FCE#, 16),
     to_signed(16#3FCC#, 16), to_signed(16#3FCA#, 16), to_signed(16#3FC8#, 16), to_signed(16#3FC6#, 16),
     to_signed(16#3FC4#, 16), to_signed(16#3FC1#, 16), to_signed(16#3FBF#, 16), to_signed(16#3FBD#, 16),
     to_signed(16#3FBB#, 16), to_signed(16#3FB8#, 16), to_signed(16#3FB6#, 16), to_signed(16#3FB4#, 16),
     to_signed(16#3FB1#, 16), to_signed(16#3FAF#, 16), to_signed(16#3FAC#, 16), to_signed(16#3FAA#, 16),
     to_signed(16#3FA7#, 16), to_signed(16#3FA4#, 16), to_signed(16#3FA2#, 16), to_signed(16#3F9F#, 16),
     to_signed(16#3F9C#, 16), to_signed(16#3F99#, 16), to_signed(16#3F97#, 16), to_signed(16#3F94#, 16),
     to_signed(16#3F91#, 16), to_signed(16#3F8E#, 16), to_signed(16#3F8B#, 16), to_signed(16#3F88#, 16),
     to_signed(16#3F85#, 16), to_signed(16#3F82#, 16), to_signed(16#3F7F#, 16), to_signed(16#3F7B#, 16),
     to_signed(16#3F78#, 16), to_signed(16#3F75#, 16), to_signed(16#3F72#, 16), to_signed(16#3F6E#, 16),
     to_signed(16#3F6B#, 16), to_signed(16#3F68#, 16), to_signed(16#3F64#, 16), to_signed(16#3F61#, 16),
     to_signed(16#3F5D#, 16), to_signed(16#3F5A#, 16), to_signed(16#3F56#, 16), to_signed(16#3F52#, 16),
     to_signed(16#3F4F#, 16), to_signed(16#3F4B#, 16), to_signed(16#3F47#, 16), to_signed(16#3F43#, 16),
     to_signed(16#3F40#, 16), to_signed(16#3F3C#, 16), to_signed(16#3F38#, 16), to_signed(16#3F34#, 16),
     to_signed(16#3F30#, 16), to_signed(16#3F2C#, 16), to_signed(16#3F28#, 16), to_signed(16#3F24#, 16),
     to_signed(16#3F20#, 16), to_signed(16#3F1C#, 16), to_signed(16#3F17#, 16), to_signed(16#3F13#, 16),
     to_signed(16#3F0F#, 16), to_signed(16#3F0A#, 16), to_signed(16#3F06#, 16), to_signed(16#3F02#, 16),
     to_signed(16#3EFD#, 16), to_signed(16#3EF9#, 16), to_signed(16#3EF4#, 16), to_signed(16#3EF0#, 16),
     to_signed(16#3EEB#, 16), to_signed(16#3EE7#, 16), to_signed(16#3EE2#, 16), to_signed(16#3EDD#, 16),
     to_signed(16#3ED8#, 16), to_signed(16#3ED4#, 16), to_signed(16#3ECF#, 16), to_signed(16#3ECA#, 16),
     to_signed(16#3EC5#, 16), to_signed(16#3EC0#, 16), to_signed(16#3EBB#, 16), to_signed(16#3EB6#, 16),
     to_signed(16#3EB1#, 16), to_signed(16#3EAC#, 16), to_signed(16#3EA7#, 16), to_signed(16#3EA2#, 16),
     to_signed(16#3E9D#, 16), to_signed(16#3E98#, 16), to_signed(16#3E92#, 16), to_signed(16#3E8D#, 16),
     to_signed(16#3E88#, 16), to_signed(16#3E82#, 16), to_signed(16#3E7D#, 16), to_signed(16#3E77#, 16),
     to_signed(16#3E72#, 16), to_signed(16#3E6C#, 16), to_signed(16#3E67#, 16), to_signed(16#3E61#, 16),
     to_signed(16#3E5C#, 16), to_signed(16#3E56#, 16), to_signed(16#3E50#, 16), to_signed(16#3E4A#, 16),
     to_signed(16#3E45#, 16), to_signed(16#3E3F#, 16), to_signed(16#3E39#, 16), to_signed(16#3E33#, 16),
     to_signed(16#3E2D#, 16), to_signed(16#3E27#, 16), to_signed(16#3E21#, 16), to_signed(16#3E1B#, 16),
     to_signed(16#3E15#, 16), to_signed(16#3E0F#, 16), to_signed(16#3E09#, 16), to_signed(16#3E03#, 16),
     to_signed(16#3DFC#, 16), to_signed(16#3DF6#, 16), to_signed(16#3DF0#, 16), to_signed(16#3DE9#, 16),
     to_signed(16#3DE3#, 16), to_signed(16#3DDD#, 16), to_signed(16#3DD6#, 16), to_signed(16#3DD0#, 16),
     to_signed(16#3DC9#, 16), to_signed(16#3DC2#, 16), to_signed(16#3DBC#, 16), to_signed(16#3DB5#, 16),
     to_signed(16#3DAF#, 16), to_signed(16#3DA8#, 16), to_signed(16#3DA1#, 16), to_signed(16#3D9A#, 16),
     to_signed(16#3D93#, 16), to_signed(16#3D8D#, 16), to_signed(16#3D86#, 16), to_signed(16#3D7F#, 16),
     to_signed(16#3D78#, 16), to_signed(16#3D71#, 16), to_signed(16#3D6A#, 16), to_signed(16#3D63#, 16),
     to_signed(16#3D5B#, 16), to_signed(16#3D54#, 16), to_signed(16#3D4D#, 16), to_signed(16#3D46#, 16),
     to_signed(16#3D3F#, 16), to_signed(16#3D37#, 16), to_signed(16#3D30#, 16), to_signed(16#3D28#, 16),
     to_signed(16#3D21#, 16), to_signed(16#3D1A#, 16), to_signed(16#3D12#, 16), to_signed(16#3D0B#, 16),
     to_signed(16#3D03#, 16), to_signed(16#3CFB#, 16), to_signed(16#3CF4#, 16), to_signed(16#3CEC#, 16),
     to_signed(16#3CE4#, 16), to_signed(16#3CDD#, 16), to_signed(16#3CD5#, 16), to_signed(16#3CCD#, 16),
     to_signed(16#3CC5#, 16), to_signed(16#3CBD#, 16), to_signed(16#3CB5#, 16), to_signed(16#3CAD#, 16),
     to_signed(16#3CA5#, 16), to_signed(16#3C9D#, 16), to_signed(16#3C95#, 16), to_signed(16#3C8D#, 16),
     to_signed(16#3C85#, 16), to_signed(16#3C7D#, 16), to_signed(16#3C74#, 16), to_signed(16#3C6C#, 16),
     to_signed(16#3C64#, 16), to_signed(16#3C5B#, 16), to_signed(16#3C53#, 16), to_signed(16#3C4B#, 16),
     to_signed(16#3C42#, 16), to_signed(16#3C3A#, 16), to_signed(16#3C31#, 16), to_signed(16#3C29#, 16),
     to_signed(16#3C20#, 16), to_signed(16#3C17#, 16), to_signed(16#3C0F#, 16), to_signed(16#3C06#, 16),
     to_signed(16#3BFD#, 16), to_signed(16#3BF5#, 16), to_signed(16#3BEC#, 16), to_signed(16#3BE3#, 16),
     to_signed(16#3BDA#, 16), to_signed(16#3BD1#, 16), to_signed(16#3BC8#, 16), to_signed(16#3BBF#, 16),
     to_signed(16#3BB6#, 16), to_signed(16#3BAD#, 16), to_signed(16#3BA4#, 16), to_signed(16#3B9B#, 16),
     to_signed(16#3B92#, 16), to_signed(16#3B88#, 16), to_signed(16#3B7F#, 16), to_signed(16#3B76#, 16),
     to_signed(16#3B6D#, 16), to_signed(16#3B63#, 16), to_signed(16#3B5A#, 16), to_signed(16#3B50#, 16),
     to_signed(16#3B47#, 16), to_signed(16#3B3E#, 16), to_signed(16#3B34#, 16), to_signed(16#3B2A#, 16),
     to_signed(16#3B21#, 16), to_signed(16#3B17#, 16), to_signed(16#3B0E#, 16), to_signed(16#3B04#, 16),
     to_signed(16#3AFA#, 16), to_signed(16#3AF0#, 16), to_signed(16#3AE6#, 16), to_signed(16#3ADD#, 16),
     to_signed(16#3AD3#, 16), to_signed(16#3AC9#, 16), to_signed(16#3ABF#, 16), to_signed(16#3AB5#, 16),
     to_signed(16#3AAB#, 16), to_signed(16#3AA1#, 16), to_signed(16#3A97#, 16), to_signed(16#3A8D#, 16),
     to_signed(16#3A82#, 16), to_signed(16#3A78#, 16), to_signed(16#3A6E#, 16), to_signed(16#3A64#, 16),
     to_signed(16#3A59#, 16), to_signed(16#3A4F#, 16), to_signed(16#3A45#, 16), to_signed(16#3A3A#, 16),
     to_signed(16#3A30#, 16), to_signed(16#3A25#, 16), to_signed(16#3A1B#, 16), to_signed(16#3A10#, 16),
     to_signed(16#3A06#, 16), to_signed(16#39FB#, 16), to_signed(16#39F0#, 16), to_signed(16#39E6#, 16),
     to_signed(16#39DB#, 16), to_signed(16#39D0#, 16), to_signed(16#39C5#, 16), to_signed(16#39BB#, 16),
     to_signed(16#39B0#, 16), to_signed(16#39A5#, 16), to_signed(16#399A#, 16), to_signed(16#398F#, 16),
     to_signed(16#3984#, 16), to_signed(16#3979#, 16), to_signed(16#396E#, 16), to_signed(16#3963#, 16),
     to_signed(16#3958#, 16), to_signed(16#394C#, 16), to_signed(16#3941#, 16), to_signed(16#3936#, 16),
     to_signed(16#392B#, 16), to_signed(16#391F#, 16), to_signed(16#3914#, 16), to_signed(16#3909#, 16),
     to_signed(16#38FD#, 16), to_signed(16#38F2#, 16), to_signed(16#38E6#, 16), to_signed(16#38DB#, 16),
     to_signed(16#38CF#, 16), to_signed(16#38C3#, 16), to_signed(16#38B8#, 16), to_signed(16#38AC#, 16),
     to_signed(16#38A1#, 16), to_signed(16#3895#, 16), to_signed(16#3889#, 16), to_signed(16#387D#, 16),
     to_signed(16#3871#, 16), to_signed(16#3866#, 16), to_signed(16#385A#, 16), to_signed(16#384E#, 16),
     to_signed(16#3842#, 16), to_signed(16#3836#, 16), to_signed(16#382A#, 16), to_signed(16#381E#, 16),
     to_signed(16#3812#, 16), to_signed(16#3805#, 16), to_signed(16#37F9#, 16), to_signed(16#37ED#, 16),
     to_signed(16#37E1#, 16), to_signed(16#37D5#, 16), to_signed(16#37C8#, 16), to_signed(16#37BC#, 16),
     to_signed(16#37B0#, 16), to_signed(16#37A3#, 16), to_signed(16#3797#, 16), to_signed(16#378A#, 16),
     to_signed(16#377E#, 16), to_signed(16#3771#, 16), to_signed(16#3765#, 16), to_signed(16#3758#, 16),
     to_signed(16#374B#, 16), to_signed(16#373F#, 16), to_signed(16#3732#, 16), to_signed(16#3725#, 16),
     to_signed(16#3718#, 16), to_signed(16#370C#, 16), to_signed(16#36FF#, 16), to_signed(16#36F2#, 16),
     to_signed(16#36E5#, 16), to_signed(16#36D8#, 16), to_signed(16#36CB#, 16), to_signed(16#36BE#, 16),
     to_signed(16#36B1#, 16), to_signed(16#36A4#, 16), to_signed(16#3697#, 16), to_signed(16#368A#, 16),
     to_signed(16#367D#, 16), to_signed(16#366F#, 16), to_signed(16#3662#, 16), to_signed(16#3655#, 16),
     to_signed(16#3648#, 16), to_signed(16#363A#, 16), to_signed(16#362D#, 16), to_signed(16#3620#, 16),
     to_signed(16#3612#, 16), to_signed(16#3605#, 16), to_signed(16#35F7#, 16), to_signed(16#35EA#, 16),
     to_signed(16#35DC#, 16), to_signed(16#35CE#, 16), to_signed(16#35C1#, 16), to_signed(16#35B3#, 16),
     to_signed(16#35A5#, 16), to_signed(16#3598#, 16), to_signed(16#358A#, 16), to_signed(16#357C#, 16),
     to_signed(16#356E#, 16), to_signed(16#3561#, 16), to_signed(16#3553#, 16), to_signed(16#3545#, 16),
     to_signed(16#3537#, 16), to_signed(16#3529#, 16), to_signed(16#351B#, 16), to_signed(16#350D#, 16),
     to_signed(16#34FF#, 16), to_signed(16#34F1#, 16), to_signed(16#34E2#, 16), to_signed(16#34D4#, 16),
     to_signed(16#34C6#, 16), to_signed(16#34B8#, 16), to_signed(16#34AA#, 16), to_signed(16#349B#, 16),
     to_signed(16#348D#, 16), to_signed(16#347F#, 16), to_signed(16#3470#, 16), to_signed(16#3462#, 16),
     to_signed(16#3453#, 16), to_signed(16#3445#, 16), to_signed(16#3436#, 16), to_signed(16#3428#, 16),
     to_signed(16#3419#, 16), to_signed(16#340B#, 16), to_signed(16#33FC#, 16), to_signed(16#33ED#, 16),
     to_signed(16#33DF#, 16), to_signed(16#33D0#, 16), to_signed(16#33C1#, 16), to_signed(16#33B2#, 16),
     to_signed(16#33A3#, 16), to_signed(16#3395#, 16), to_signed(16#3386#, 16), to_signed(16#3377#, 16),
     to_signed(16#3368#, 16), to_signed(16#3359#, 16), to_signed(16#334A#, 16), to_signed(16#333B#, 16),
     to_signed(16#332C#, 16), to_signed(16#331D#, 16), to_signed(16#330D#, 16), to_signed(16#32FE#, 16),
     to_signed(16#32EF#, 16), to_signed(16#32E0#, 16), to_signed(16#32D0#, 16), to_signed(16#32C1#, 16),
     to_signed(16#32B2#, 16), to_signed(16#32A3#, 16), to_signed(16#3293#, 16), to_signed(16#3284#, 16),
     to_signed(16#3274#, 16), to_signed(16#3265#, 16), to_signed(16#3255#, 16), to_signed(16#3246#, 16),
     to_signed(16#3236#, 16), to_signed(16#3227#, 16), to_signed(16#3217#, 16), to_signed(16#3207#, 16),
     to_signed(16#31F8#, 16), to_signed(16#31E8#, 16), to_signed(16#31D8#, 16), to_signed(16#31C8#, 16),
     to_signed(16#31B9#, 16), to_signed(16#31A9#, 16), to_signed(16#3199#, 16), to_signed(16#3189#, 16),
     to_signed(16#3179#, 16), to_signed(16#3169#, 16), to_signed(16#3159#, 16), to_signed(16#3149#, 16),
     to_signed(16#3139#, 16), to_signed(16#3129#, 16), to_signed(16#3119#, 16), to_signed(16#3109#, 16),
     to_signed(16#30F9#, 16), to_signed(16#30E8#, 16), to_signed(16#30D8#, 16), to_signed(16#30C8#, 16),
     to_signed(16#30B8#, 16), to_signed(16#30A7#, 16), to_signed(16#3097#, 16), to_signed(16#3087#, 16),
     to_signed(16#3076#, 16), to_signed(16#3066#, 16), to_signed(16#3055#, 16), to_signed(16#3045#, 16),
     to_signed(16#3034#, 16), to_signed(16#3024#, 16), to_signed(16#3013#, 16), to_signed(16#3002#, 16),
     to_signed(16#2FF2#, 16), to_signed(16#2FE1#, 16), to_signed(16#2FD0#, 16), to_signed(16#2FC0#, 16),
     to_signed(16#2FAF#, 16), to_signed(16#2F9E#, 16), to_signed(16#2F8D#, 16), to_signed(16#2F7D#, 16),
     to_signed(16#2F6C#, 16), to_signed(16#2F5B#, 16), to_signed(16#2F4A#, 16), to_signed(16#2F39#, 16),
     to_signed(16#2F28#, 16), to_signed(16#2F17#, 16), to_signed(16#2F06#, 16), to_signed(16#2EF5#, 16),
     to_signed(16#2EE4#, 16), to_signed(16#2ED3#, 16), to_signed(16#2EC2#, 16), to_signed(16#2EB0#, 16),
     to_signed(16#2E9F#, 16), to_signed(16#2E8E#, 16), to_signed(16#2E7D#, 16), to_signed(16#2E6B#, 16),
     to_signed(16#2E5A#, 16), to_signed(16#2E49#, 16), to_signed(16#2E37#, 16), to_signed(16#2E26#, 16),
     to_signed(16#2E15#, 16), to_signed(16#2E03#, 16), to_signed(16#2DF2#, 16), to_signed(16#2DE0#, 16),
     to_signed(16#2DCF#, 16), to_signed(16#2DBD#, 16), to_signed(16#2DAB#, 16), to_signed(16#2D9A#, 16),
     to_signed(16#2D88#, 16), to_signed(16#2D76#, 16), to_signed(16#2D65#, 16), to_signed(16#2D53#, 16));  -- sfix16 [512]

  -- Signals
  SIGNAL lutaddr_unsigned                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL lutaddrInReg                     : unsigned(8 DOWNTO 0) := to_unsigned(16#000#, 9);  -- ufix9
  SIGNAL lutCosineout                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL lutCosineoutreg1                 : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16_En14
  SIGNAL lutCosine_tmp                    : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  lutaddr_unsigned <= unsigned(lutaddr);

  -- Look up tale address input register
  LUTaddrRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutaddrInReg <= lutaddr_unsigned;
      END IF;
    END IF;
  END PROCESS LUTaddrRegister_process;


  -- Octant Cosine wave table
  lutCosineout <= DirectLookupTable_data(to_integer(lutaddrInReg));

  -- Cos lookup table output register
  LUTCosineoutResetRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutCosineoutreg1 <= lutCosineout;
      END IF;
    END IF;
  END PROCESS LUTCosineoutResetRegister_process;


  LUTCosineoutRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        lutCosine_tmp <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        lutCosine_tmp <= lutCosineoutreg1;
      END IF;
    END IF;
  END PROCESS LUTCosineoutRegister_process;


  lutCosine <= std_logic_vector(lutCosine_tmp);

END rtl;

