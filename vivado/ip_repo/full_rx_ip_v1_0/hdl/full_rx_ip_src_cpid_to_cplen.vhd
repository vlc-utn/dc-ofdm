-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_cpid_to_cplen.vhd
-- Created: 2024-08-10 11:14:31
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_cpid_to_cplen
-- Source Path: HDLRx/full_rx/cpid_to_cplen
-- Hierarchy Level: 1
-- Model version: 1.14
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_rx_ip_src_cpid_to_cplen IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_8_0                         :   IN    std_logic;
        cp_id                             :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix1 [3]
        payload_cp_len                    :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END full_rx_ip_src_cpid_to_cplen;


ARCHITECTURE rtl OF full_rx_ip_src_cpid_to_cplen IS

  -- Signals
  SIGNAL Data_Type_Conversion_out1_2      : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion_out1_1      : std_logic;  -- ufix1
  SIGNAL Constant3_out1                   : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Data_Type_Conversion_out1_0      : std_logic;  -- ufix1
  SIGNAL y                                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Product_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Delay1_out1                      : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  Data_Type_Conversion_out1_2 <= cp_id(2);

  Data_Type_Conversion_out1_1 <= cp_id(1);

  Constant3_out1 <= to_unsigned(16#8#, 4);

  Data_Type_Conversion_out1_0 <= cp_id(0);

  y <= unsigned'(Data_Type_Conversion_out1_2 & Data_Type_Conversion_out1_1 & Data_Type_Conversion_out1_0);

  Product_out1 <= resize(Constant3_out1 * y, 8);

  Delay1_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      Delay1_out1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_8_0 = '1' THEN
        Delay1_out1 <= Product_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  payload_cp_len <= std_logic_vector(Delay1_out1);

END rtl;

