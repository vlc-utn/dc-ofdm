-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRx/full_rx_ip_src_frequency_offset_calculator.vhd
-- Created: 2024-08-10 11:14:30
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_rx_ip_src_frequency_offset_calculator
-- Source Path: HDLRx/full_rx/rx_demodulator_full/ofdm_symbol_sync/frequency_offset_calculator
-- Hierarchy Level: 3
-- Model version: 1.14
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_rx_ip_src_full_rx_pac.ALL;

ENTITY full_rx_ip_src_frequency_offset_calculator IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        peak_sync                         :   IN    std_logic;
        P_d_re                            :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        P_d_im                            :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        frequency_offset                  :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En16
        );
END full_rx_ip_src_frequency_offset_calculator;


ARCHITECTURE rtl OF full_rx_ip_src_frequency_offset_calculator IS

  -- Component Declarations
  COMPONENT full_rx_ip_src_Quadrant_Mapper
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          xin                             :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
          yin                             :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
          xout                            :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
          yout                            :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
          QA_Control                      :   OUT   std_logic_vector(4 DOWNTO 0)  -- ufix5
          );
  END COMPONENT;

  COMPONENT full_rx_ip_src_CordicKernelMag
    PORT( xin                             :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
          yin                             :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
          zin                             :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En32
          lut_value                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En32
          idx                             :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
          xout                            :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
          yout                            :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
          zout                            :   OUT   std_logic_vector(32 DOWNTO 0)  -- sfix33_En32
          );
  END COMPONENT;

  COMPONENT full_rx_ip_src_Quadrant_Correction
    PORT( zin                             :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En32
          QA_Control                      :   IN    std_logic_vector(4 DOWNTO 0);  -- ufix5
          zout                            :   OUT   std_logic_vector(34 DOWNTO 0)  -- sfix35_En32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_rx_ip_src_Quadrant_Mapper
    USE ENTITY work.full_rx_ip_src_Quadrant_Mapper(rtl);

  FOR ALL : full_rx_ip_src_CordicKernelMag
    USE ENTITY work.full_rx_ip_src_CordicKernelMag(rtl);

  FOR ALL : full_rx_ip_src_Quadrant_Correction
    USE ENTITY work.full_rx_ip_src_Quadrant_Correction(rtl);

  -- Signals
  SIGNAL Delay_ValidIn_reg                : std_logic_vector(33 DOWNTO 0);  -- ufix1 [34]
  SIGNAL ValidOutDelayed                  : std_logic;
  SIGNAL validOut                         : std_logic;
  SIGNAL Delay1_reg                       : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL P_d_re_signed                    : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL P_d_im_signed                    : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL qMapReal                         : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL qMapImag                         : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL In1Register                      : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL In2Register                      : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL XQMapped                         : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yQMapped                         : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL ControlQC                        : std_logic_vector(4 DOWNTO 0);  -- ufix5
  SIGNAL XQMapped_signed                  : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yQMapped_signed                  : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL xin1                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin1                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin1                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value1                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift1                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout1                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout1                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout1                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout1_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout1_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout1_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin2                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin2                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin2                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value2                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift2                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout2                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout2                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout2                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout2_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout2_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout2_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin3                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin3                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin3                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value3                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift3                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout3                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout3                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout3                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout3_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout3_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout3_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin4                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin4                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin4                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value4                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift4                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout4                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout4                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout4                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout4_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout4_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout4_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin5                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin5                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin5                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value5                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift5                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout5                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout5                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout5                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout5_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout5_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout5_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin6                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin6                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin6                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value6                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift6                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout6                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout6                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout6                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout6_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout6_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout6_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin7                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin7                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin7                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value7                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift7                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout7                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout7                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout7                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout7_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout7_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout7_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin8                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin8                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin8                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value8                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift8                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout8                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout8                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout8                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout8_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout8_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout8_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin9                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin9                             : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin9                             : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value9                       : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift9                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout9                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout9                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout9                            : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout9_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout9_signed                     : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout9_signed                     : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin10                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin10                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin10                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value10                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift10                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout10                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout10                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout10                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout10_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout10_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout10_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin11                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin11                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin11                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value11                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift11                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout11                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout11                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout11                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout11_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout11_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout11_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin12                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin12                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin12                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value12                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift12                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout12                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout12                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout12                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout12_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout12_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout12_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin13                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin13                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin13                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value13                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift13                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout13                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout13                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout13                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout13_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout13_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout13_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin14                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin14                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin14                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value14                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift14                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout14                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout14                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout14                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout14_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout14_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout14_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin15                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin15                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin15                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value15                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift15                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout15                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout15                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout15                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout15_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout15_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout15_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin16                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin16                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin16                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value16                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift16                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout16                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout16                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout16                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout16_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout16_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout16_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin17                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin17                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin17                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value17                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift17                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout17                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout17                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout17                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout17_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout17_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout17_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin18                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin18                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin18                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value18                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift18                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout18                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout18                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout18                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout18_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout18_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout18_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin19                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin19                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin19                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value19                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift19                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout19                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout19                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout19                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout19_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout19_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout19_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin20                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin20                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin20                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value20                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift20                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout20                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout20                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout20                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout20_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout20_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout20_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin21                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin21                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin21                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value21                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift21                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout21                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout21                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout21                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout21_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout21_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout21_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin22                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin22                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin22                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value22                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift22                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout22                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout22                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout22                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout22_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout22_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout22_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin23                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin23                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin23                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value23                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift23                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout23                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout23                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout23                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout23_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout23_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout23_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin24                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin24                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin24                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value24                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift24                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout24                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout24                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout24                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout24_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout24_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout24_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin25                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin25                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin25                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value25                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift25                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout25                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout25                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout25                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout25_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout25_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout25_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin26                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin26                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin26                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value26                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift26                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout26                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout26                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout26                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout26_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout26_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout26_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin27                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin27                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin27                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value27                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift27                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout27                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout27                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout27                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout27_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout27_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout27_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin28                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin28                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin28                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value28                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift28                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout28                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout28                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout28                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout28_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout28_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout28_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin29                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin29                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin29                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value29                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift29                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout29                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout29                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout29                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL xout29_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout29_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout29_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin30                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin30                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin30                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value30                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift30                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout30deadOut                    : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout30                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout30                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout30_signed                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zout30_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL xin31deadIn                      : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yin31                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin31                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value31                      : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL shift31deadIn                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL xout31deadOut                    : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL yout31deadOut                    : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout31                           : std_logic_vector(32 DOWNTO 0);  -- ufix33
  SIGNAL zout31_signed                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL ControlQC_unsigned               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL reset_outval                     : std_logic;
  SIGNAL zin32                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL DelayQC_Control_reg              : vector_of_unsigned5(0 TO 31);  -- ufix5 [32]
  SIGNAL ControlQCDelay                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL zout_corrected                   : std_logic_vector(34 DOWNTO 0);  -- ufix35
  SIGNAL zout_corrected_signed            : signed(34 DOWNTO 0);  -- sfix35_En32
  SIGNAL zeroCA                           : signed(34 DOWNTO 0);  -- sfix35_En32
  SIGNAL outSwitchAng                     : signed(34 DOWNTO 0);  -- sfix35_En32
  SIGNAL zout_corrected_1                 : signed(34 DOWNTO 0);  -- sfix35_En32
  SIGNAL Gain_mul_temp                    : signed(67 DOWNTO 0);  -- sfix68_En48
  SIGNAL Gain_cast                        : signed(66 DOWNTO 0);  -- sfix67_En48
  SIGNAL Gain_out1                        : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Delay_reg                        : vector_of_signed32(0 TO 1);  -- sfix32 [2]
  SIGNAL Delay_out1                       : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Switch_out1                      : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Unit_Delay_out1                  : signed(31 DOWNTO 0);  -- sfix32_En16

BEGIN
  u_QuadrantMapper : full_rx_ip_src_Quadrant_Mapper
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb_1_2_0 => enb_1_2_0,
              xin => std_logic_vector(In1Register),  -- sfix33_En24
              yin => std_logic_vector(In2Register),  -- sfix33_En24
              xout => XQMapped,  -- sfix33_En24
              yout => yQMapped,  -- sfix33_En24
              QA_Control => ControlQC  -- ufix5
              );

  u_Iteration : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin1),  -- sfix33_En24
              yin => std_logic_vector(yin1),  -- sfix33_En24
              zin => std_logic_vector(zin1),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value1),  -- ufix32_En32
              idx => std_logic_vector(shift1),  -- ufix6
              xout => xout1,  -- sfix33_En24
              yout => yout1,  -- sfix33_En24
              zout => zout1  -- sfix33_En32
              );

  u_Iteration1 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin2),  -- sfix33_En24
              yin => std_logic_vector(yin2),  -- sfix33_En24
              zin => std_logic_vector(zin2),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value2),  -- ufix32_En32
              idx => std_logic_vector(shift2),  -- ufix6
              xout => xout2,  -- sfix33_En24
              yout => yout2,  -- sfix33_En24
              zout => zout2  -- sfix33_En32
              );

  u_Iteration2 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin3),  -- sfix33_En24
              yin => std_logic_vector(yin3),  -- sfix33_En24
              zin => std_logic_vector(zin3),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value3),  -- ufix32_En32
              idx => std_logic_vector(shift3),  -- ufix6
              xout => xout3,  -- sfix33_En24
              yout => yout3,  -- sfix33_En24
              zout => zout3  -- sfix33_En32
              );

  u_Iteration3 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin4),  -- sfix33_En24
              yin => std_logic_vector(yin4),  -- sfix33_En24
              zin => std_logic_vector(zin4),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value4),  -- ufix32_En32
              idx => std_logic_vector(shift4),  -- ufix6
              xout => xout4,  -- sfix33_En24
              yout => yout4,  -- sfix33_En24
              zout => zout4  -- sfix33_En32
              );

  u_Iteration4 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin5),  -- sfix33_En24
              yin => std_logic_vector(yin5),  -- sfix33_En24
              zin => std_logic_vector(zin5),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value5),  -- ufix32_En32
              idx => std_logic_vector(shift5),  -- ufix6
              xout => xout5,  -- sfix33_En24
              yout => yout5,  -- sfix33_En24
              zout => zout5  -- sfix33_En32
              );

  u_Iteration5 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin6),  -- sfix33_En24
              yin => std_logic_vector(yin6),  -- sfix33_En24
              zin => std_logic_vector(zin6),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value6),  -- ufix32_En32
              idx => std_logic_vector(shift6),  -- ufix6
              xout => xout6,  -- sfix33_En24
              yout => yout6,  -- sfix33_En24
              zout => zout6  -- sfix33_En32
              );

  u_Iteration6 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin7),  -- sfix33_En24
              yin => std_logic_vector(yin7),  -- sfix33_En24
              zin => std_logic_vector(zin7),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value7),  -- ufix32_En32
              idx => std_logic_vector(shift7),  -- ufix6
              xout => xout7,  -- sfix33_En24
              yout => yout7,  -- sfix33_En24
              zout => zout7  -- sfix33_En32
              );

  u_Iteration7 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin8),  -- sfix33_En24
              yin => std_logic_vector(yin8),  -- sfix33_En24
              zin => std_logic_vector(zin8),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value8),  -- ufix32_En32
              idx => std_logic_vector(shift8),  -- ufix6
              xout => xout8,  -- sfix33_En24
              yout => yout8,  -- sfix33_En24
              zout => zout8  -- sfix33_En32
              );

  u_Iteration8 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin9),  -- sfix33_En24
              yin => std_logic_vector(yin9),  -- sfix33_En24
              zin => std_logic_vector(zin9),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value9),  -- ufix32_En32
              idx => std_logic_vector(shift9),  -- ufix6
              xout => xout9,  -- sfix33_En24
              yout => yout9,  -- sfix33_En24
              zout => zout9  -- sfix33_En32
              );

  u_Iteration9 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin10),  -- sfix33_En24
              yin => std_logic_vector(yin10),  -- sfix33_En24
              zin => std_logic_vector(zin10),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value10),  -- ufix32_En32
              idx => std_logic_vector(shift10),  -- ufix6
              xout => xout10,  -- sfix33_En24
              yout => yout10,  -- sfix33_En24
              zout => zout10  -- sfix33_En32
              );

  u_Iteration10 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin11),  -- sfix33_En24
              yin => std_logic_vector(yin11),  -- sfix33_En24
              zin => std_logic_vector(zin11),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value11),  -- ufix32_En32
              idx => std_logic_vector(shift11),  -- ufix6
              xout => xout11,  -- sfix33_En24
              yout => yout11,  -- sfix33_En24
              zout => zout11  -- sfix33_En32
              );

  u_Iteration11 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin12),  -- sfix33_En24
              yin => std_logic_vector(yin12),  -- sfix33_En24
              zin => std_logic_vector(zin12),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value12),  -- ufix32_En32
              idx => std_logic_vector(shift12),  -- ufix6
              xout => xout12,  -- sfix33_En24
              yout => yout12,  -- sfix33_En24
              zout => zout12  -- sfix33_En32
              );

  u_Iteration12 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin13),  -- sfix33_En24
              yin => std_logic_vector(yin13),  -- sfix33_En24
              zin => std_logic_vector(zin13),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value13),  -- ufix32_En32
              idx => std_logic_vector(shift13),  -- ufix6
              xout => xout13,  -- sfix33_En24
              yout => yout13,  -- sfix33_En24
              zout => zout13  -- sfix33_En32
              );

  u_Iteration13 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin14),  -- sfix33_En24
              yin => std_logic_vector(yin14),  -- sfix33_En24
              zin => std_logic_vector(zin14),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value14),  -- ufix32_En32
              idx => std_logic_vector(shift14),  -- ufix6
              xout => xout14,  -- sfix33_En24
              yout => yout14,  -- sfix33_En24
              zout => zout14  -- sfix33_En32
              );

  u_Iteration14 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin15),  -- sfix33_En24
              yin => std_logic_vector(yin15),  -- sfix33_En24
              zin => std_logic_vector(zin15),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value15),  -- ufix32_En32
              idx => std_logic_vector(shift15),  -- ufix6
              xout => xout15,  -- sfix33_En24
              yout => yout15,  -- sfix33_En24
              zout => zout15  -- sfix33_En32
              );

  u_Iteration15 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin16),  -- sfix33_En24
              yin => std_logic_vector(yin16),  -- sfix33_En24
              zin => std_logic_vector(zin16),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value16),  -- ufix32_En32
              idx => std_logic_vector(shift16),  -- ufix6
              xout => xout16,  -- sfix33_En24
              yout => yout16,  -- sfix33_En24
              zout => zout16  -- sfix33_En32
              );

  u_Iteration16 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin17),  -- sfix33_En24
              yin => std_logic_vector(yin17),  -- sfix33_En24
              zin => std_logic_vector(zin17),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value17),  -- ufix32_En32
              idx => std_logic_vector(shift17),  -- ufix6
              xout => xout17,  -- sfix33_En24
              yout => yout17,  -- sfix33_En24
              zout => zout17  -- sfix33_En32
              );

  u_Iteration17 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin18),  -- sfix33_En24
              yin => std_logic_vector(yin18),  -- sfix33_En24
              zin => std_logic_vector(zin18),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value18),  -- ufix32_En32
              idx => std_logic_vector(shift18),  -- ufix6
              xout => xout18,  -- sfix33_En24
              yout => yout18,  -- sfix33_En24
              zout => zout18  -- sfix33_En32
              );

  u_Iteration18 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin19),  -- sfix33_En24
              yin => std_logic_vector(yin19),  -- sfix33_En24
              zin => std_logic_vector(zin19),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value19),  -- ufix32_En32
              idx => std_logic_vector(shift19),  -- ufix6
              xout => xout19,  -- sfix33_En24
              yout => yout19,  -- sfix33_En24
              zout => zout19  -- sfix33_En32
              );

  u_Iteration19 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin20),  -- sfix33_En24
              yin => std_logic_vector(yin20),  -- sfix33_En24
              zin => std_logic_vector(zin20),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value20),  -- ufix32_En32
              idx => std_logic_vector(shift20),  -- ufix6
              xout => xout20,  -- sfix33_En24
              yout => yout20,  -- sfix33_En24
              zout => zout20  -- sfix33_En32
              );

  u_Iteration20 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin21),  -- sfix33_En24
              yin => std_logic_vector(yin21),  -- sfix33_En24
              zin => std_logic_vector(zin21),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value21),  -- ufix32_En32
              idx => std_logic_vector(shift21),  -- ufix6
              xout => xout21,  -- sfix33_En24
              yout => yout21,  -- sfix33_En24
              zout => zout21  -- sfix33_En32
              );

  u_Iteration21 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin22),  -- sfix33_En24
              yin => std_logic_vector(yin22),  -- sfix33_En24
              zin => std_logic_vector(zin22),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value22),  -- ufix32_En32
              idx => std_logic_vector(shift22),  -- ufix6
              xout => xout22,  -- sfix33_En24
              yout => yout22,  -- sfix33_En24
              zout => zout22  -- sfix33_En32
              );

  u_Iteration22 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin23),  -- sfix33_En24
              yin => std_logic_vector(yin23),  -- sfix33_En24
              zin => std_logic_vector(zin23),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value23),  -- ufix32_En32
              idx => std_logic_vector(shift23),  -- ufix6
              xout => xout23,  -- sfix33_En24
              yout => yout23,  -- sfix33_En24
              zout => zout23  -- sfix33_En32
              );

  u_Iteration23 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin24),  -- sfix33_En24
              yin => std_logic_vector(yin24),  -- sfix33_En24
              zin => std_logic_vector(zin24),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value24),  -- ufix32_En32
              idx => std_logic_vector(shift24),  -- ufix6
              xout => xout24,  -- sfix33_En24
              yout => yout24,  -- sfix33_En24
              zout => zout24  -- sfix33_En32
              );

  u_Iteration24 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin25),  -- sfix33_En24
              yin => std_logic_vector(yin25),  -- sfix33_En24
              zin => std_logic_vector(zin25),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value25),  -- ufix32_En32
              idx => std_logic_vector(shift25),  -- ufix6
              xout => xout25,  -- sfix33_En24
              yout => yout25,  -- sfix33_En24
              zout => zout25  -- sfix33_En32
              );

  u_Iteration25 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin26),  -- sfix33_En24
              yin => std_logic_vector(yin26),  -- sfix33_En24
              zin => std_logic_vector(zin26),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value26),  -- ufix32_En32
              idx => std_logic_vector(shift26),  -- ufix6
              xout => xout26,  -- sfix33_En24
              yout => yout26,  -- sfix33_En24
              zout => zout26  -- sfix33_En32
              );

  u_Iteration26 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin27),  -- sfix33_En24
              yin => std_logic_vector(yin27),  -- sfix33_En24
              zin => std_logic_vector(zin27),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value27),  -- ufix32_En32
              idx => std_logic_vector(shift27),  -- ufix6
              xout => xout27,  -- sfix33_En24
              yout => yout27,  -- sfix33_En24
              zout => zout27  -- sfix33_En32
              );

  u_Iteration27 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin28),  -- sfix33_En24
              yin => std_logic_vector(yin28),  -- sfix33_En24
              zin => std_logic_vector(zin28),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value28),  -- ufix32_En32
              idx => std_logic_vector(shift28),  -- ufix6
              xout => xout28,  -- sfix33_En24
              yout => yout28,  -- sfix33_En24
              zout => zout28  -- sfix33_En32
              );

  u_Iteration28 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin29),  -- sfix33_En24
              yin => std_logic_vector(yin29),  -- sfix33_En24
              zin => std_logic_vector(zin29),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value29),  -- ufix32_En32
              idx => std_logic_vector(shift29),  -- ufix6
              xout => xout29,  -- sfix33_En24
              yout => yout29,  -- sfix33_En24
              zout => zout29  -- sfix33_En32
              );

  u_Iteration29 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin30),  -- sfix33_En24
              yin => std_logic_vector(yin30),  -- sfix33_En24
              zin => std_logic_vector(zin30),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value30),  -- ufix32_En32
              idx => std_logic_vector(shift30),  -- ufix6
              xout => xout30deadOut,  -- sfix33_En24
              yout => yout30,  -- sfix33_En24
              zout => zout30  -- sfix33_En32
              );

  u_Iteration30 : full_rx_ip_src_CordicKernelMag
    PORT MAP( xin => std_logic_vector(xin31deadIn),  -- sfix33_En24
              yin => std_logic_vector(yin31),  -- sfix33_En24
              zin => std_logic_vector(zin31),  -- sfix33_En32
              lut_value => std_logic_vector(lut_value31),  -- ufix32_En32
              idx => std_logic_vector(shift31deadIn),  -- ufix6
              xout => xout31deadOut,  -- sfix33_En24
              yout => yout31deadOut,  -- sfix33_En24
              zout => zout31  -- sfix33_En32
              );

  u_QuadrantCorrection : full_rx_ip_src_Quadrant_Correction
    PORT MAP( zin => std_logic_vector(zin32),  -- sfix33_En32
              QA_Control => std_logic_vector(ControlQCDelay),  -- ufix5
              zout => zout_corrected  -- sfix35_En32
              );

  Delay_ValidIn_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      Delay_ValidIn_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        Delay_ValidIn_reg(0) <= peak_sync;
        Delay_ValidIn_reg(33 DOWNTO 1) <= Delay_ValidIn_reg(32 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay_ValidIn_process;

  ValidOutDelayed <= Delay_ValidIn_reg(33);

  DelayValidOut_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      validOut <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        validOut <= ValidOutDelayed;
      END IF;
    END IF;
  END PROCESS DelayValidOut_process;


  Delay1_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      Delay1_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        Delay1_reg(0) <= validOut;
        Delay1_reg(1) <= Delay1_reg(0);
      END IF;
    END IF;
  END PROCESS Delay1_process;

  Delay1_out1 <= Delay1_reg(1);

  -- Complex to Magnitude-Angle
  P_d_re_signed <= signed(P_d_re);

  qMapReal <= resize(P_d_re_signed, 33);

  P_d_im_signed <= signed(P_d_im);

  qMapImag <= resize(P_d_im_signed, 33);

  DelayRealInput_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      In1Register <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        In1Register <= qMapReal;
      END IF;
    END IF;
  END PROCESS DelayRealInput_process;


  DelayImagInput_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      In2Register <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        In2Register <= qMapImag;
      END IF;
    END IF;
  END PROCESS DelayImagInput_process;


  XQMapped_signed <= signed(XQMapped);

  yQMapped_signed <= signed(yQMapped);

  DelayQuadMapper1_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin1 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin1 <= XQMapped_signed;
      END IF;
    END IF;
  END PROCESS DelayQuadMapper1_process;


  DelayQuadMapper2_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin1 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin1 <= yQMapped_signed;
      END IF;
    END IF;
  END PROCESS DelayQuadMapper2_process;


  zin1 <= to_signed(0, 33);

  lut_value1 <= to_unsigned(1991351318, 32);

  shift1 <= to_unsigned(16#01#, 6);

  xout1_signed <= signed(xout1);

  yout1_signed <= signed(yout1);

  zout1_signed <= signed(zout1);

  Pipeline1_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin2 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin2 <= xout1_signed;
      END IF;
    END IF;
  END PROCESS Pipeline1_process;


  Pipeline11_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin2 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin2 <= yout1_signed;
      END IF;
    END IF;
  END PROCESS Pipeline11_process;


  Pipeline12_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin2 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin2 <= zout1_signed;
      END IF;
    END IF;
  END PROCESS Pipeline12_process;


  lut_value2 <= to_unsigned(1052175346, 32);

  shift2 <= to_unsigned(16#02#, 6);

  xout2_signed <= signed(xout2);

  yout2_signed <= signed(yout2);

  zout2_signed <= signed(zout2);

  Pipeline2_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin3 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin3 <= xout2_signed;
      END IF;
    END IF;
  END PROCESS Pipeline2_process;


  Pipeline21_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin3 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin3 <= yout2_signed;
      END IF;
    END IF;
  END PROCESS Pipeline21_process;


  Pipeline22_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin3 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin3 <= zout2_signed;
      END IF;
    END IF;
  END PROCESS Pipeline22_process;


  lut_value3 <= to_unsigned(534100635, 32);

  shift3 <= to_unsigned(16#03#, 6);

  xout3_signed <= signed(xout3);

  yout3_signed <= signed(yout3);

  zout3_signed <= signed(zout3);

  Pipeline3_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin4 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin4 <= xout3_signed;
      END IF;
    END IF;
  END PROCESS Pipeline3_process;


  Pipeline31_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin4 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin4 <= yout3_signed;
      END IF;
    END IF;
  END PROCESS Pipeline31_process;


  Pipeline32_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin4 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin4 <= zout3_signed;
      END IF;
    END IF;
  END PROCESS Pipeline32_process;


  lut_value4 <= to_unsigned(268086748, 32);

  shift4 <= to_unsigned(16#04#, 6);

  xout4_signed <= signed(xout4);

  yout4_signed <= signed(yout4);

  zout4_signed <= signed(zout4);

  Pipeline4_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin5 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin5 <= xout4_signed;
      END IF;
    END IF;
  END PROCESS Pipeline4_process;


  Pipeline41_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin5 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin5 <= yout4_signed;
      END IF;
    END IF;
  END PROCESS Pipeline41_process;


  Pipeline42_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin5 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin5 <= zout4_signed;
      END IF;
    END IF;
  END PROCESS Pipeline42_process;


  lut_value5 <= to_unsigned(134174063, 32);

  shift5 <= to_unsigned(16#05#, 6);

  xout5_signed <= signed(xout5);

  yout5_signed <= signed(yout5);

  zout5_signed <= signed(zout5);

  Pipeline5_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin6 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin6 <= xout5_signed;
      END IF;
    END IF;
  END PROCESS Pipeline5_process;


  Pipeline51_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin6 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin6 <= yout5_signed;
      END IF;
    END IF;
  END PROCESS Pipeline51_process;


  Pipeline52_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin6 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin6 <= zout5_signed;
      END IF;
    END IF;
  END PROCESS Pipeline52_process;


  lut_value6 <= to_unsigned(67103403, 32);

  shift6 <= to_unsigned(16#06#, 6);

  xout6_signed <= signed(xout6);

  yout6_signed <= signed(yout6);

  zout6_signed <= signed(zout6);

  Pipeline6_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin7 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin7 <= xout6_signed;
      END IF;
    END IF;
  END PROCESS Pipeline6_process;


  Pipeline61_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin7 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin7 <= yout6_signed;
      END IF;
    END IF;
  END PROCESS Pipeline61_process;


  Pipeline62_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin7 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin7 <= zout6_signed;
      END IF;
    END IF;
  END PROCESS Pipeline62_process;


  lut_value7 <= to_unsigned(33553749, 32);

  shift7 <= to_unsigned(16#07#, 6);

  xout7_signed <= signed(xout7);

  yout7_signed <= signed(yout7);

  zout7_signed <= signed(zout7);

  Pipeline7_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin8 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin8 <= xout7_signed;
      END IF;
    END IF;
  END PROCESS Pipeline7_process;


  Pipeline71_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin8 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin8 <= yout7_signed;
      END IF;
    END IF;
  END PROCESS Pipeline71_process;


  Pipeline72_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin8 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin8 <= zout7_signed;
      END IF;
    END IF;
  END PROCESS Pipeline72_process;


  lut_value8 <= to_unsigned(16777131, 32);

  shift8 <= to_unsigned(16#08#, 6);

  xout8_signed <= signed(xout8);

  yout8_signed <= signed(yout8);

  zout8_signed <= signed(zout8);

  Pipeline8_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin9 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin9 <= xout8_signed;
      END IF;
    END IF;
  END PROCESS Pipeline8_process;


  Pipeline81_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin9 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin9 <= yout8_signed;
      END IF;
    END IF;
  END PROCESS Pipeline81_process;


  Pipeline82_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin9 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin9 <= zout8_signed;
      END IF;
    END IF;
  END PROCESS Pipeline82_process;


  lut_value9 <= to_unsigned(8388597, 32);

  shift9 <= to_unsigned(16#09#, 6);

  xout9_signed <= signed(xout9);

  yout9_signed <= signed(yout9);

  zout9_signed <= signed(zout9);

  Pipeline9_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin10 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin10 <= xout9_signed;
      END IF;
    END IF;
  END PROCESS Pipeline9_process;


  Pipeline91_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin10 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin10 <= yout9_signed;
      END IF;
    END IF;
  END PROCESS Pipeline91_process;


  Pipeline92_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin10 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin10 <= zout9_signed;
      END IF;
    END IF;
  END PROCESS Pipeline92_process;


  lut_value10 <= to_unsigned(4194303, 32);

  shift10 <= to_unsigned(16#0A#, 6);

  xout10_signed <= signed(xout10);

  yout10_signed <= signed(yout10);

  zout10_signed <= signed(zout10);

  Pipeline10_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin11 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin11 <= xout10_signed;
      END IF;
    END IF;
  END PROCESS Pipeline10_process;


  Pipeline101_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin11 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin11 <= yout10_signed;
      END IF;
    END IF;
  END PROCESS Pipeline101_process;


  Pipeline102_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin11 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin11 <= zout10_signed;
      END IF;
    END IF;
  END PROCESS Pipeline102_process;


  lut_value11 <= to_unsigned(2097152, 32);

  shift11 <= to_unsigned(16#0B#, 6);

  xout11_signed <= signed(xout11);

  yout11_signed <= signed(yout11);

  zout11_signed <= signed(zout11);

  Pipeline111_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin12 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin12 <= xout11_signed;
      END IF;
    END IF;
  END PROCESS Pipeline111_process;


  Pipeline112_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin12 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin12 <= yout11_signed;
      END IF;
    END IF;
  END PROCESS Pipeline112_process;


  Pipeline113_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin12 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin12 <= zout11_signed;
      END IF;
    END IF;
  END PROCESS Pipeline113_process;


  lut_value12 <= to_unsigned(1048576, 32);

  shift12 <= to_unsigned(16#0C#, 6);

  xout12_signed <= signed(xout12);

  yout12_signed <= signed(yout12);

  zout12_signed <= signed(zout12);

  Pipeline121_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin13 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin13 <= xout12_signed;
      END IF;
    END IF;
  END PROCESS Pipeline121_process;


  Pipeline122_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin13 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin13 <= yout12_signed;
      END IF;
    END IF;
  END PROCESS Pipeline122_process;


  Pipeline123_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin13 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin13 <= zout12_signed;
      END IF;
    END IF;
  END PROCESS Pipeline123_process;


  lut_value13 <= to_unsigned(524288, 32);

  shift13 <= to_unsigned(16#0D#, 6);

  xout13_signed <= signed(xout13);

  yout13_signed <= signed(yout13);

  zout13_signed <= signed(zout13);

  Pipeline13_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin14 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin14 <= xout13_signed;
      END IF;
    END IF;
  END PROCESS Pipeline13_process;


  Pipeline131_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin14 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin14 <= yout13_signed;
      END IF;
    END IF;
  END PROCESS Pipeline131_process;


  Pipeline132_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin14 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin14 <= zout13_signed;
      END IF;
    END IF;
  END PROCESS Pipeline132_process;


  lut_value14 <= to_unsigned(262144, 32);

  shift14 <= to_unsigned(16#0E#, 6);

  xout14_signed <= signed(xout14);

  yout14_signed <= signed(yout14);

  zout14_signed <= signed(zout14);

  Pipeline14_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin15 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin15 <= xout14_signed;
      END IF;
    END IF;
  END PROCESS Pipeline14_process;


  Pipeline141_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin15 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin15 <= yout14_signed;
      END IF;
    END IF;
  END PROCESS Pipeline141_process;


  Pipeline142_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin15 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin15 <= zout14_signed;
      END IF;
    END IF;
  END PROCESS Pipeline142_process;


  lut_value15 <= to_unsigned(131072, 32);

  shift15 <= to_unsigned(16#0F#, 6);

  xout15_signed <= signed(xout15);

  yout15_signed <= signed(yout15);

  zout15_signed <= signed(zout15);

  Pipeline15_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin16 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin16 <= xout15_signed;
      END IF;
    END IF;
  END PROCESS Pipeline15_process;


  Pipeline151_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin16 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin16 <= yout15_signed;
      END IF;
    END IF;
  END PROCESS Pipeline151_process;


  Pipeline152_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin16 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin16 <= zout15_signed;
      END IF;
    END IF;
  END PROCESS Pipeline152_process;


  lut_value16 <= to_unsigned(65536, 32);

  shift16 <= to_unsigned(16#10#, 6);

  xout16_signed <= signed(xout16);

  yout16_signed <= signed(yout16);

  zout16_signed <= signed(zout16);

  Pipeline16_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin17 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin17 <= xout16_signed;
      END IF;
    END IF;
  END PROCESS Pipeline16_process;


  Pipeline161_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin17 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin17 <= yout16_signed;
      END IF;
    END IF;
  END PROCESS Pipeline161_process;


  Pipeline162_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin17 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin17 <= zout16_signed;
      END IF;
    END IF;
  END PROCESS Pipeline162_process;


  lut_value17 <= to_unsigned(32768, 32);

  shift17 <= to_unsigned(16#11#, 6);

  xout17_signed <= signed(xout17);

  yout17_signed <= signed(yout17);

  zout17_signed <= signed(zout17);

  Pipeline17_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin18 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin18 <= xout17_signed;
      END IF;
    END IF;
  END PROCESS Pipeline17_process;


  Pipeline171_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin18 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin18 <= yout17_signed;
      END IF;
    END IF;
  END PROCESS Pipeline171_process;


  Pipeline172_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin18 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin18 <= zout17_signed;
      END IF;
    END IF;
  END PROCESS Pipeline172_process;


  lut_value18 <= to_unsigned(16384, 32);

  shift18 <= to_unsigned(16#12#, 6);

  xout18_signed <= signed(xout18);

  yout18_signed <= signed(yout18);

  zout18_signed <= signed(zout18);

  Pipeline18_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin19 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin19 <= xout18_signed;
      END IF;
    END IF;
  END PROCESS Pipeline18_process;


  Pipeline181_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin19 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin19 <= yout18_signed;
      END IF;
    END IF;
  END PROCESS Pipeline181_process;


  Pipeline182_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin19 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin19 <= zout18_signed;
      END IF;
    END IF;
  END PROCESS Pipeline182_process;


  lut_value19 <= to_unsigned(8192, 32);

  shift19 <= to_unsigned(16#13#, 6);

  xout19_signed <= signed(xout19);

  yout19_signed <= signed(yout19);

  zout19_signed <= signed(zout19);

  Pipeline19_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin20 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin20 <= xout19_signed;
      END IF;
    END IF;
  END PROCESS Pipeline19_process;


  Pipeline191_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin20 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin20 <= yout19_signed;
      END IF;
    END IF;
  END PROCESS Pipeline191_process;


  Pipeline192_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin20 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin20 <= zout19_signed;
      END IF;
    END IF;
  END PROCESS Pipeline192_process;


  lut_value20 <= to_unsigned(4096, 32);

  shift20 <= to_unsigned(16#14#, 6);

  xout20_signed <= signed(xout20);

  yout20_signed <= signed(yout20);

  zout20_signed <= signed(zout20);

  Pipeline20_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin21 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin21 <= xout20_signed;
      END IF;
    END IF;
  END PROCESS Pipeline20_process;


  Pipeline201_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin21 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin21 <= yout20_signed;
      END IF;
    END IF;
  END PROCESS Pipeline201_process;


  Pipeline202_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin21 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin21 <= zout20_signed;
      END IF;
    END IF;
  END PROCESS Pipeline202_process;


  lut_value21 <= to_unsigned(2048, 32);

  shift21 <= to_unsigned(16#15#, 6);

  xout21_signed <= signed(xout21);

  yout21_signed <= signed(yout21);

  zout21_signed <= signed(zout21);

  Pipeline211_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin22 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin22 <= xout21_signed;
      END IF;
    END IF;
  END PROCESS Pipeline211_process;


  Pipeline212_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin22 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin22 <= yout21_signed;
      END IF;
    END IF;
  END PROCESS Pipeline212_process;


  Pipeline213_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin22 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin22 <= zout21_signed;
      END IF;
    END IF;
  END PROCESS Pipeline213_process;


  lut_value22 <= to_unsigned(1024, 32);

  shift22 <= to_unsigned(16#16#, 6);

  xout22_signed <= signed(xout22);

  yout22_signed <= signed(yout22);

  zout22_signed <= signed(zout22);

  Pipeline221_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin23 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin23 <= xout22_signed;
      END IF;
    END IF;
  END PROCESS Pipeline221_process;


  Pipeline222_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin23 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin23 <= yout22_signed;
      END IF;
    END IF;
  END PROCESS Pipeline222_process;


  Pipeline223_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin23 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin23 <= zout22_signed;
      END IF;
    END IF;
  END PROCESS Pipeline223_process;


  lut_value23 <= to_unsigned(512, 32);

  shift23 <= to_unsigned(16#17#, 6);

  xout23_signed <= signed(xout23);

  yout23_signed <= signed(yout23);

  zout23_signed <= signed(zout23);

  Pipeline23_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin24 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin24 <= xout23_signed;
      END IF;
    END IF;
  END PROCESS Pipeline23_process;


  Pipeline231_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin24 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin24 <= yout23_signed;
      END IF;
    END IF;
  END PROCESS Pipeline231_process;


  Pipeline232_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin24 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin24 <= zout23_signed;
      END IF;
    END IF;
  END PROCESS Pipeline232_process;


  lut_value24 <= to_unsigned(256, 32);

  shift24 <= to_unsigned(16#18#, 6);

  xout24_signed <= signed(xout24);

  yout24_signed <= signed(yout24);

  zout24_signed <= signed(zout24);

  Pipeline24_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin25 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin25 <= xout24_signed;
      END IF;
    END IF;
  END PROCESS Pipeline24_process;


  Pipeline241_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin25 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin25 <= yout24_signed;
      END IF;
    END IF;
  END PROCESS Pipeline241_process;


  Pipeline242_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin25 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin25 <= zout24_signed;
      END IF;
    END IF;
  END PROCESS Pipeline242_process;


  lut_value25 <= to_unsigned(128, 32);

  shift25 <= to_unsigned(16#19#, 6);

  xout25_signed <= signed(xout25);

  yout25_signed <= signed(yout25);

  zout25_signed <= signed(zout25);

  Pipeline25_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin26 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin26 <= xout25_signed;
      END IF;
    END IF;
  END PROCESS Pipeline25_process;


  Pipeline251_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin26 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin26 <= yout25_signed;
      END IF;
    END IF;
  END PROCESS Pipeline251_process;


  Pipeline252_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin26 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin26 <= zout25_signed;
      END IF;
    END IF;
  END PROCESS Pipeline252_process;


  lut_value26 <= to_unsigned(64, 32);

  shift26 <= to_unsigned(16#1A#, 6);

  xout26_signed <= signed(xout26);

  yout26_signed <= signed(yout26);

  zout26_signed <= signed(zout26);

  Pipeline26_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin27 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin27 <= xout26_signed;
      END IF;
    END IF;
  END PROCESS Pipeline26_process;


  Pipeline261_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin27 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin27 <= yout26_signed;
      END IF;
    END IF;
  END PROCESS Pipeline261_process;


  Pipeline262_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin27 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin27 <= zout26_signed;
      END IF;
    END IF;
  END PROCESS Pipeline262_process;


  lut_value27 <= to_unsigned(32, 32);

  shift27 <= to_unsigned(16#1B#, 6);

  xout27_signed <= signed(xout27);

  yout27_signed <= signed(yout27);

  zout27_signed <= signed(zout27);

  Pipeline27_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin28 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin28 <= xout27_signed;
      END IF;
    END IF;
  END PROCESS Pipeline27_process;


  Pipeline271_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin28 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin28 <= yout27_signed;
      END IF;
    END IF;
  END PROCESS Pipeline271_process;


  Pipeline272_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin28 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin28 <= zout27_signed;
      END IF;
    END IF;
  END PROCESS Pipeline272_process;


  lut_value28 <= to_unsigned(16, 32);

  shift28 <= to_unsigned(16#1C#, 6);

  xout28_signed <= signed(xout28);

  yout28_signed <= signed(yout28);

  zout28_signed <= signed(zout28);

  Pipeline28_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin29 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin29 <= xout28_signed;
      END IF;
    END IF;
  END PROCESS Pipeline28_process;


  Pipeline281_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin29 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin29 <= yout28_signed;
      END IF;
    END IF;
  END PROCESS Pipeline281_process;


  Pipeline282_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin29 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin29 <= zout28_signed;
      END IF;
    END IF;
  END PROCESS Pipeline282_process;


  lut_value29 <= to_unsigned(8, 32);

  shift29 <= to_unsigned(16#1D#, 6);

  xout29_signed <= signed(xout29);

  yout29_signed <= signed(yout29);

  zout29_signed <= signed(zout29);

  Pipeline29_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      xin30 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        xin30 <= xout29_signed;
      END IF;
    END IF;
  END PROCESS Pipeline29_process;


  Pipeline291_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin30 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin30 <= yout29_signed;
      END IF;
    END IF;
  END PROCESS Pipeline291_process;


  Pipeline292_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin30 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin30 <= zout29_signed;
      END IF;
    END IF;
  END PROCESS Pipeline292_process;


  lut_value30 <= to_unsigned(4, 32);

  shift30 <= to_unsigned(16#1E#, 6);

  yout30_signed <= signed(yout30);

  zout30_signed <= signed(zout30);

  xin31deadIn <= to_signed(0, 33);

  Pipeline301_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      yin31 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        yin31 <= yout30_signed;
      END IF;
    END IF;
  END PROCESS Pipeline301_process;


  Pipeline302_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin31 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin31 <= zout30_signed;
      END IF;
    END IF;
  END PROCESS Pipeline302_process;


  lut_value31 <= to_unsigned(2, 32);

  shift31deadIn <= to_unsigned(16#00#, 6);

  zout31_signed <= signed(zout31);

  ControlQC_unsigned <= unsigned(ControlQC);

  reset_outval <=  NOT ValidOutDelayed;

  Pipeline311_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zin32 <= to_signed(0, 33);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zin32 <= zout31_signed;
      END IF;
    END IF;
  END PROCESS Pipeline311_process;


  DelayQC_Control_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      DelayQC_Control_reg <= (OTHERS => to_unsigned(16#00#, 5));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        DelayQC_Control_reg(0) <= ControlQC_unsigned;
        DelayQC_Control_reg(1 TO 31) <= DelayQC_Control_reg(0 TO 30);
      END IF;
    END IF;
  END PROCESS DelayQC_Control_process;

  ControlQCDelay <= DelayQC_Control_reg(31);

  zout_corrected_signed <= signed(zout_corrected);

  zeroCA <= to_signed(0, 35);

  
  outSwitchAng <= zout_corrected_signed WHEN reset_outval = '0' ELSE
      zeroCA;

  Output_Register_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      zout_corrected_1 <= to_signed(0, 35);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        zout_corrected_1 <= outSwitchAng;
      END IF;
    END IF;
  END PROCESS Output_Register_process;


  Gain_mul_temp <= to_signed(404278231, 33) * zout_corrected_1;
  Gain_cast <= Gain_mul_temp(66 DOWNTO 0);
  Gain_out1 <= Gain_cast(63 DOWNTO 32);

  Delay_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      Delay_reg <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        Delay_reg(0) <= Gain_out1;
        Delay_reg(1) <= Delay_reg(0);
      END IF;
    END IF;
  END PROCESS Delay_process;

  Delay_out1 <= Delay_reg(1);

  Unit_Delay_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      Unit_Delay_out1 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_2_0 = '1' THEN
        Unit_Delay_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  
  Switch_out1 <= Unit_Delay_out1 WHEN Delay1_out1 = '0' ELSE
      Delay_out1;

  frequency_offset <= std_logic_vector(Switch_out1);

END rtl;

