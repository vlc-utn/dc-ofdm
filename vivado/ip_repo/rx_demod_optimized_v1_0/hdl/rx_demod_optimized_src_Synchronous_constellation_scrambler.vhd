-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRxDemodulator/rx_demod_optimized_src_Synchronous_constellation_scrambler.vhd
-- Created: 2024-10-03 16:24:08
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: rx_demod_optimized_src_Synchronous_constellation_scrambler
-- Source Path: HDLRxDemodulator/rx_demodulator_full/constellation_descrambler/sync_constellation_scrambler/Synchronous 
-- constellation scramble
-- Hierarchy Level: 3
-- Model version: 1.66
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY rx_demod_optimized_src_Synchronous_constellation_scrambler IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        valid_in                          :   IN    std_logic;
        init                              :   IN    std_logic_vector(12 DOWNTO 0);  -- boolean [13]
        new_ofdm_symbol                   :   IN    std_logic;
        s1_out                            :   OUT   std_logic;
        s2_out                            :   OUT   std_logic
        );
END rx_demod_optimized_src_Synchronous_constellation_scrambler;


ARCHITECTURE rtl OF rx_demod_optimized_src_Synchronous_constellation_scrambler IS

  -- Signals
  SIGNAL From39_out1                      : std_logic;
  SIGNAL From33_out1                      : std_logic;
  SIGNAL From31_out1                      : std_logic;
  SIGNAL From24_out1                      : std_logic;
  SIGNAL From22_out1                      : std_logic;
  SIGNAL From19_out1                      : std_logic;
  SIGNAL From10_out1                      : std_logic;
  SIGNAL From7_out1                       : std_logic;
  SIGNAL From1_out1                       : std_logic;
  SIGNAL From36_out1                      : std_logic;
  SIGNAL From34_out1                      : std_logic;
  SIGNAL From26_out1                      : std_logic;
  SIGNAL From28_out1                      : std_logic;
  SIGNAL From25_out1                      : std_logic;
  SIGNAL From14_out1                      : std_logic;
  SIGNAL From13_out1                      : std_logic;
  SIGNAL From4_out1                       : std_logic;
  SIGNAL From6_out1                       : std_logic;
  SIGNAL init_2                           : std_logic;
  SIGNAL From16_out1                      : std_logic;
  SIGNAL init_4                           : std_logic;
  SIGNAL From18_out1                      : std_logic;
  SIGNAL init_6                           : std_logic;
  SIGNAL init_8                           : std_logic;
  SIGNAL From30_out1                      : std_logic;
  SIGNAL init_10                          : std_logic;
  SIGNAL init_12                          : std_logic;
  SIGNAL From3_out1                       : std_logic;
  SIGNAL init_1                           : std_logic;
  SIGNAL From9_out1                       : std_logic;
  SIGNAL init_3                           : std_logic;
  SIGNAL From12_out1                      : std_logic;
  SIGNAL init_5                           : std_logic;
  SIGNAL From21_out1                      : std_logic;
  SIGNAL init_7                           : std_logic;
  SIGNAL init_9                           : std_logic;
  SIGNAL init_11                          : std_logic;
  SIGNAL From41_out1                      : std_logic;
  SIGNAL init_0                           : std_logic;
  SIGNAL s1                               : std_logic;
  SIGNAL s1_1                             : std_logic;
  SIGNAL Switch2_out1                     : std_logic;
  SIGNAL Delay2_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay2_reg                       : std_logic;  -- ufix1
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Switch4_out1                     : std_logic;
  SIGNAL Delay4_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay4_reg                       : std_logic;  -- ufix1
  SIGNAL Delay4_out1                      : std_logic;
  SIGNAL Switch6_out1                     : std_logic;
  SIGNAL Delay6_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay6_reg                       : std_logic;  -- ufix1
  SIGNAL Delay6_out1                      : std_logic;
  SIGNAL Switch8_out1                     : std_logic;
  SIGNAL Delay8_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay8_reg                       : std_logic;  -- ufix1
  SIGNAL Delay8_out1                      : std_logic;
  SIGNAL Switch10_out1                    : std_logic;
  SIGNAL Delay10_bypass_delay             : std_logic;  -- ufix1
  SIGNAL Delay10_reg                      : std_logic;  -- ufix1
  SIGNAL Delay10_out1                     : std_logic;
  SIGNAL Switch12_out1                    : std_logic;
  SIGNAL Delay12_bypass_delay             : std_logic;  -- ufix1
  SIGNAL Delay12_reg                      : std_logic;  -- ufix1
  SIGNAL Delay12_out1                     : std_logic;
  SIGNAL Delay11_out1                     : std_logic;
  SIGNAL XOR3_out1                        : std_logic;
  SIGNAL XOR4_out1                        : std_logic;
  SIGNAL Delay7_out1                      : std_logic;
  SIGNAL XOR5_out1                        : std_logic;
  SIGNAL Switch1_out1                     : std_logic;
  SIGNAL Delay1_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay1_reg                       : std_logic;  -- ufix1
  SIGNAL s2                               : std_logic;
  SIGNAL s2_1                             : std_logic;
  SIGNAL Switch3_out1                     : std_logic;
  SIGNAL Delay3_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay3_reg                       : std_logic;  -- ufix1
  SIGNAL Delay3_out1                      : std_logic;
  SIGNAL Switch5_out1                     : std_logic;
  SIGNAL Delay5_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay5_reg                       : std_logic;  -- ufix1
  SIGNAL Delay5_out1                      : std_logic;
  SIGNAL Switch7_out1                     : std_logic;
  SIGNAL Delay7_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay7_reg                       : std_logic;  -- ufix1
  SIGNAL Switch9_out1                     : std_logic;
  SIGNAL Delay9_bypass_delay              : std_logic;  -- ufix1
  SIGNAL Delay9_reg                       : std_logic;  -- ufix1
  SIGNAL Delay9_out1                      : std_logic;
  SIGNAL Switch11_out1                    : std_logic;
  SIGNAL Delay11_bypass_delay             : std_logic;  -- ufix1
  SIGNAL Delay11_reg                      : std_logic;  -- ufix1
  SIGNAL XOR_out1                         : std_logic;
  SIGNAL XOR1_out1                        : std_logic;
  SIGNAL XOR2_out1                        : std_logic;
  SIGNAL Switch_out1                      : std_logic;
  SIGNAL Delay_bypass_delay               : std_logic;  -- ufix1
  SIGNAL Delay_reg                        : std_logic;  -- ufix1
  SIGNAL s1_2                             : std_logic;
  SIGNAL s2_2                             : std_logic;

BEGIN
  delayMatch24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From39_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From39_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch24_process;


  delayMatch23_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From33_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From33_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch23_process;


  delayMatch22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From31_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From31_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch22_process;


  delayMatch21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From24_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From24_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch21_process;


  delayMatch20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From22_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From22_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch20_process;


  delayMatch18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From19_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From19_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch18_process;


  delayMatch16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From10_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From10_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch16_process;


  delayMatch14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From7_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From7_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch14_process;


  delayMatch12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From1_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From1_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch12_process;


  delayMatch11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From36_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From36_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch11_process;


  delayMatch10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From34_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From34_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch10_process;


  delayMatch8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From26_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From26_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch8_process;


  delayMatch7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From28_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From28_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch7_process;


  delayMatch6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From25_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From25_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch6_process;


  delayMatch4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From14_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From14_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch4_process;


  delayMatch2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From13_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From13_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch2_process;


  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From4_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From4_out1 <= new_ofdm_symbol;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From6_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From6_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch1_process;


  init_2 <= init(2);

  delayMatch3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From16_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From16_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch3_process;


  init_4 <= init(4);

  delayMatch5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From18_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From18_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch5_process;


  init_6 <= init(6);

  init_8 <= init(8);

  delayMatch9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From30_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From30_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch9_process;


  init_10 <= init(10);

  init_12 <= init(12);

  delayMatch13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From3_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From3_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch13_process;


  init_1 <= init(1);

  delayMatch15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From9_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From9_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch15_process;


  init_3 <= init(3);

  delayMatch17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From12_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From12_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch17_process;


  init_5 <= init(5);

  delayMatch19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From21_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From21_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch19_process;


  init_7 <= init(7);

  init_9 <= init(9);

  init_11 <= init(11);

  delayMatch25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        From41_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        From41_out1 <= valid_in;
      END IF;
    END IF;
  END PROCESS delayMatch25_process;


  init_0 <= init(0);

  s1_1 <= s1;

  
  Switch2_out1 <= s1_1 WHEN From4_out1 = '0' ELSE
      init_2;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_bypass_delay <= '0';
        Delay2_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From6_out1 = '1' THEN
        Delay2_bypass_delay <= Delay2_reg;
        Delay2_reg <= Switch2_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;

  
  Delay2_out1 <= Delay2_reg WHEN From6_out1 = '1' ELSE
      Delay2_bypass_delay;

  
  Switch4_out1 <= Delay2_out1 WHEN From13_out1 = '0' ELSE
      init_4;

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay4_bypass_delay <= '0';
        Delay4_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From16_out1 = '1' THEN
        Delay4_bypass_delay <= Delay4_reg;
        Delay4_reg <= Switch4_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;

  
  Delay4_out1 <= Delay4_reg WHEN From16_out1 = '1' ELSE
      Delay4_bypass_delay;

  
  Switch6_out1 <= Delay4_out1 WHEN From14_out1 = '0' ELSE
      init_6;

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay6_bypass_delay <= '0';
        Delay6_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From18_out1 = '1' THEN
        Delay6_bypass_delay <= Delay6_reg;
        Delay6_reg <= Switch6_out1;
      END IF;
    END IF;
  END PROCESS Delay6_process;

  
  Delay6_out1 <= Delay6_reg WHEN From18_out1 = '1' ELSE
      Delay6_bypass_delay;

  
  Switch8_out1 <= Delay6_out1 WHEN From25_out1 = '0' ELSE
      init_8;

  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay8_bypass_delay <= '0';
        Delay8_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From28_out1 = '1' THEN
        Delay8_bypass_delay <= Delay8_reg;
        Delay8_reg <= Switch8_out1;
      END IF;
    END IF;
  END PROCESS Delay8_process;

  
  Delay8_out1 <= Delay8_reg WHEN From28_out1 = '1' ELSE
      Delay8_bypass_delay;

  
  Switch10_out1 <= Delay8_out1 WHEN From26_out1 = '0' ELSE
      init_10;

  Delay10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay10_bypass_delay <= '0';
        Delay10_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From30_out1 = '1' THEN
        Delay10_bypass_delay <= Delay10_reg;
        Delay10_reg <= Switch10_out1;
      END IF;
    END IF;
  END PROCESS Delay10_process;

  
  Delay10_out1 <= Delay10_reg WHEN From30_out1 = '1' ELSE
      Delay10_bypass_delay;

  
  Switch12_out1 <= Delay10_out1 WHEN From34_out1 = '0' ELSE
      init_12;

  Delay12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay12_bypass_delay <= '0';
        Delay12_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From36_out1 = '1' THEN
        Delay12_bypass_delay <= Delay12_reg;
        Delay12_reg <= Switch12_out1;
      END IF;
    END IF;
  END PROCESS Delay12_process;

  
  Delay12_out1 <= Delay12_reg WHEN From36_out1 = '1' ELSE
      Delay12_bypass_delay;

  XOR3_out1 <= Delay12_out1 XOR Delay11_out1;

  XOR4_out1 <= XOR3_out1 XOR Delay10_out1;

  XOR5_out1 <= XOR4_out1 XOR Delay7_out1;

  
  Switch1_out1 <= XOR5_out1 WHEN From1_out1 = '0' ELSE
      init_1;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_bypass_delay <= '0';
        Delay1_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From3_out1 = '1' THEN
        Delay1_bypass_delay <= Delay1_reg;
        Delay1_reg <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;

  
  s2 <= Delay1_reg WHEN From3_out1 = '1' ELSE
      Delay1_bypass_delay;

  s2_1 <= s2;

  
  Switch3_out1 <= s2_1 WHEN From7_out1 = '0' ELSE
      init_3;

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay3_bypass_delay <= '0';
        Delay3_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From9_out1 = '1' THEN
        Delay3_bypass_delay <= Delay3_reg;
        Delay3_reg <= Switch3_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;

  
  Delay3_out1 <= Delay3_reg WHEN From9_out1 = '1' ELSE
      Delay3_bypass_delay;

  
  Switch5_out1 <= Delay3_out1 WHEN From10_out1 = '0' ELSE
      init_5;

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay5_bypass_delay <= '0';
        Delay5_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From12_out1 = '1' THEN
        Delay5_bypass_delay <= Delay5_reg;
        Delay5_reg <= Switch5_out1;
      END IF;
    END IF;
  END PROCESS Delay5_process;

  
  Delay5_out1 <= Delay5_reg WHEN From12_out1 = '1' ELSE
      Delay5_bypass_delay;

  
  Switch7_out1 <= Delay5_out1 WHEN From19_out1 = '0' ELSE
      init_7;

  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay7_bypass_delay <= '0';
        Delay7_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From21_out1 = '1' THEN
        Delay7_bypass_delay <= Delay7_reg;
        Delay7_reg <= Switch7_out1;
      END IF;
    END IF;
  END PROCESS Delay7_process;

  
  Delay7_out1 <= Delay7_reg WHEN From21_out1 = '1' ELSE
      Delay7_bypass_delay;

  
  Switch9_out1 <= Delay7_out1 WHEN From22_out1 = '0' ELSE
      init_9;

  Delay9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay9_bypass_delay <= '0';
        Delay9_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From24_out1 = '1' THEN
        Delay9_bypass_delay <= Delay9_reg;
        Delay9_reg <= Switch9_out1;
      END IF;
    END IF;
  END PROCESS Delay9_process;

  
  Delay9_out1 <= Delay9_reg WHEN From24_out1 = '1' ELSE
      Delay9_bypass_delay;

  
  Switch11_out1 <= Delay9_out1 WHEN From31_out1 = '0' ELSE
      init_11;

  Delay11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay11_bypass_delay <= '0';
        Delay11_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From33_out1 = '1' THEN
        Delay11_bypass_delay <= Delay11_reg;
        Delay11_reg <= Switch11_out1;
      END IF;
    END IF;
  END PROCESS Delay11_process;

  
  Delay11_out1 <= Delay11_reg WHEN From33_out1 = '1' ELSE
      Delay11_bypass_delay;

  XOR_out1 <= Delay11_out1 XOR Delay10_out1;

  XOR1_out1 <= XOR_out1 XOR Delay9_out1;

  XOR2_out1 <= XOR1_out1 XOR Delay6_out1;

  
  Switch_out1 <= XOR2_out1 WHEN From39_out1 = '0' ELSE
      init_0;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay_bypass_delay <= '0';
        Delay_reg <= '0';
      ELSIF enb_1_2_0 = '1' AND From41_out1 = '1' THEN
        Delay_bypass_delay <= Delay_reg;
        Delay_reg <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;

  
  s1 <= Delay_reg WHEN From41_out1 = '1' ELSE
      Delay_bypass_delay;

  s1_2 <= s1;

  s2_2 <= s2;

  s1_out <= s1_2;

  s2_out <= s2_2;

END rtl;

