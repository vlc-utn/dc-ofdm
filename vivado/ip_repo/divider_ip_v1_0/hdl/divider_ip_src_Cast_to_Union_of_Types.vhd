-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/test/divider_ip_src_Cast_to_Union_of_Types.vhd
-- Created: 2024-10-03 19:36:10
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: divider_ip_src_Cast_to_Union_of_Types
-- Source Path: test/divider/Complex Divide HDL Optimized/ForEach - Complex Divide/Shift and cast to output type1/Cast 
-- to Union of Type
-- Hierarchy Level: 4
-- Model version: 1.59
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY divider_ip_src_Cast_to_Union_of_Types IS
  PORT( Xref                              :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
        Cin                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        Cout                              :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En14
        );
END divider_ip_src_Cast_to_Union_of_Types;


ARCHITECTURE rtl OF divider_ip_src_Cast_to_Union_of_Types IS

  -- Signals
  SIGNAL Xref_signed                      : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Cin_signed                       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Cout_tmp                         : signed(19 DOWNTO 0);  -- sfix20_En14

BEGIN
  Xref_signed <= signed(Xref);

  Cin_signed <= signed(Cin);

  --castToUnionType Cast second input to union of the two types
  Cout_tmp <= resize(Cin_signed, 20);

  Cout <= std_logic_vector(Cout_tmp);

END rtl;

