-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/test/divider_ip_src_Divide_real_numerator_by_denominator_block2.vhd
-- Created: 2024-10-03 19:36:11
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: divider_ip_src_Divide_real_numerator_by_denominator_block2
-- Source Path: test/divider/in_8_out_16/ForEach - Real Divide/Divide real numerator by denominator
-- Hierarchy Level: 3
-- Model version: 1.59
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY divider_ip_src_Divide_real_numerator_by_denominator_block2 IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        num                               :   IN    std_logic_vector(7 DOWNTO 0);  -- sfix8_En6
        tNum                              :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
        den                               :   IN    std_logic_vector(7 DOWNTO 0);  -- sfix8_En6
        tDen                              :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        isNumNegative                     :   IN    std_logic;
        isDenNegative                     :   IN    std_logic;
        validIn                           :   IN    std_logic;
        y                                 :   OUT   std_logic_vector(7 DOWNTO 0);  -- sfix8_En6
        e                                 :   OUT   std_logic_vector(33 DOWNTO 0);  -- sfix34
        isDenZero                         :   OUT   std_logic;
        validOut                          :   OUT   std_logic
        );
END divider_ip_src_Divide_real_numerator_by_denominator_block2;


ARCHITECTURE rtl OF divider_ip_src_Divide_real_numerator_by_denominator_block2 IS

  -- Component Declarations
  COMPONENT divider_ip_src_normalizedCORDICDivide_block
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          num                             :   IN    std_logic_vector(7 DOWNTO 0);  -- sfix8_En6
          den                             :   IN    std_logic_vector(7 DOWNTO 0);  -- sfix8_En6
          tNum                            :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
          tDen                            :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          isNumNegative                   :   IN    std_logic;
          isDenNegative                   :   IN    std_logic;
          validIn                         :   IN    std_logic;
          y                               :   OUT   std_logic_vector(7 DOWNTO 0);  -- sfix8_En6
          t                               :   OUT   std_logic_vector(33 DOWNTO 0);  -- sfix34
          isDenZeroOut                    :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : divider_ip_src_normalizedCORDICDivide_block
    USE ENTITY work.divider_ip_src_normalizedCORDICDivide_block(rtl);

  -- Signals
  SIGNAL y_tmp                            : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL t                                : std_logic_vector(33 DOWNTO 0);  -- ufix34
  SIGNAL isDenZeroOut                     : std_logic;

BEGIN
  u_normalizedCORDICDivide : divider_ip_src_normalizedCORDICDivide_block
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              num => num,  -- sfix8_En6
              den => den,  -- sfix8_En6
              tNum => tNum,  -- sfix33
              tDen => tDen,  -- int32
              isNumNegative => isNumNegative,
              isDenNegative => isDenNegative,
              validIn => validIn,
              y => y_tmp,  -- sfix8_En6
              t => t,  -- sfix34
              isDenZeroOut => isDenZeroOut,
              validOut => validOut
              );

  y <= y_tmp;

  e <= t;

  isDenZero <= isDenZeroOut;

END rtl;

