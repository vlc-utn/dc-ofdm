-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/full_tx_ip_fir_reduced_src_Mixer.vhd
-- Created: 2024-08-10 09:35:21
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_tx_ip_fir_reduced_src_Mixer
-- Source Path: HDLTx/full_tx/full_ofdm_modulator/frequency_upshift/Mixer
-- Hierarchy Level: 3
-- Model version: 4.90
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_tx_ip_fir_reduced_src_full_tx_pac.ALL;

ENTITY full_tx_ip_fir_reduced_src_Mixer IS
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        ncoIn_re                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        ncoIn_im                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        mixedOut                          :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END full_tx_ip_fir_reduced_src_Mixer;


ARCHITECTURE rtl OF full_tx_ip_fir_reduced_src_Mixer IS

  -- Signals
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay1_reg                       : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16 [2]
  SIGNAL Delay1_out1                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL ncoIn_re_signed                  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL ncoIn_im_signed                  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay3_reg                       : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16 [2]
  SIGNAL Delay3_out1                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Product1_mul_temp                : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Product1_out1                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay6_out1                      : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16_En14
  SIGNAL Delay2_reg                       : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16 [2]
  SIGNAL Delay2_out1                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay4_reg                       : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16 [2]
  SIGNAL Delay4_out1                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Product2_mul_temp                : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Product2_out1                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay7_out1                      : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16_En14
  SIGNAL Add_out1                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay12_out1                     : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16_En14

BEGIN
  dataIn_re_signed <= signed(dataIn_re);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay1_reg(0) <= dataIn_re_signed;
        Delay1_reg(1) <= Delay1_reg(0);
      END IF;
    END IF;
  END PROCESS Delay1_process;

  Delay1_out1 <= Delay1_reg(1);

  ncoIn_re_signed <= signed(ncoIn_re);

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay3_reg(0) <= ncoIn_re_signed;
        Delay3_reg(1) <= Delay3_reg(0);
      END IF;
    END IF;
  END PROCESS Delay3_process;

  Delay3_out1 <= Delay3_reg(1);

  Product1_mul_temp <= Delay1_out1 * Delay3_out1;
  Product1_out1 <= Product1_mul_temp(29 DOWNTO 14);

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay6_out1 <= Product1_out1;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  dataIn_im_signed <= signed(dataIn_im);

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay2_reg(0) <= dataIn_im_signed;
        Delay2_reg(1) <= Delay2_reg(0);
      END IF;
    END IF;
  END PROCESS Delay2_process;

  Delay2_out1 <= Delay2_reg(1);

  ncoIn_im_signed <= signed(ncoIn_im);

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay4_reg(0) <= ncoIn_im_signed;
        Delay4_reg(1) <= Delay4_reg(0);
      END IF;
    END IF;
  END PROCESS Delay4_process;

  Delay4_out1 <= Delay4_reg(1);

  Product2_mul_temp <= Delay2_out1 * Delay4_out1;
  Product2_out1 <= Product2_mul_temp(29 DOWNTO 14);

  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay7_out1 <= Product2_out1;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  Add_out1 <= Delay6_out1 - Delay7_out1;

  Delay12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay12_out1 <= Add_out1;
      END IF;
    END IF;
  END PROCESS Delay12_process;


  mixedOut <= std_logic_vector(Delay12_out1);

END rtl;

