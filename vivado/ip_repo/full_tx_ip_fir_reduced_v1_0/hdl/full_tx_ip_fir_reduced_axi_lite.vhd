-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/full_tx_ip_fir_reduced_axi_lite.vhd
-- Created: 2024-08-10 09:36:33
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_tx_ip_fir_reduced_axi_lite
-- Source Path: full_tx_ip_fir_reduced/full_tx_ip_fir_reduced_axi_lite
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_tx_ip_fir_reduced_axi_lite IS
  PORT( AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESET                      :   IN    std_logic;  -- ufix1
        IPCORE_GLOBAL_RESET               :   IN    std_logic;  -- ufix1
        read_ip_timestamp                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic;  -- ufix1
        write_axi_enable                  :   OUT   std_logic;  -- ufix1
        write_reg0                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_reg1                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_reg2                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_reg3                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        reset_internal                    :   OUT   std_logic  -- ufix1
        );
END full_tx_ip_fir_reduced_axi_lite;


ARCHITECTURE rtl OF full_tx_ip_fir_reduced_axi_lite IS

  -- Component Declarations
  COMPONENT full_tx_ip_fir_reduced_addr_decoder
    PORT( data_write                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          addr_sel                        :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
          wr_enb                          :   IN    std_logic;  -- ufix1
          rd_enb                          :   IN    std_logic;  -- ufix1
          addr_sel_rd                     :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
          IPCORE_CLK                      :   IN    std_logic;  -- ufix1
          IPCORE_RESET                    :   IN    std_logic;  -- ufix1
          IPCORE_GLOBAL_RESET             :   IN    std_logic;  -- ufix1
          AXI4_ACLK                       :   IN    std_logic;
          AXI4_ARESET                     :   IN    std_logic;
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_read                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          rd_enb_ack                      :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_reg0                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_reg1                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_reg2                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_reg3                      :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT full_tx_ip_fir_reduced_axi_lite_module
    PORT( clk                             :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          data_read                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          rd_enb_ack                      :   IN    std_logic;  -- ufix1
          IPCORE_CLK                      :   IN    std_logic;  -- ufix1
          IPCORE_RESET                    :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          data_write                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          addr_sel                        :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
          wr_enb                          :   OUT   std_logic;  -- ufix1
          rd_enb                          :   OUT   std_logic;  -- ufix1
          reset_internal                  :   OUT   std_logic;  -- ufix1
          addr_sel_rd                     :   OUT   std_logic_vector(13 DOWNTO 0)  -- ufix14
          );
  END COMPONENT;

  COMPONENT full_tx_ip_fir_reduced_pulse_sync
    PORT( i_send_clk                      :   IN    std_logic;  -- ufix1
          i_send_rst                      :   IN    std_logic;
          i_receive_clk                   :   IN    std_logic;  -- ufix1
          i_receive_rst                   :   IN    std_logic;  -- ufix1
          i_send_pulse                    :   IN    std_logic;  -- ufix1
          o_receive_pulse                 :   OUT   std_logic;  -- ufix1
          o_pulse_ack                     :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_tx_ip_fir_reduced_addr_decoder
    USE ENTITY work.full_tx_ip_fir_reduced_addr_decoder(rtl);

  FOR ALL : full_tx_ip_fir_reduced_axi_lite_module
    USE ENTITY work.full_tx_ip_fir_reduced_axi_lite_module(rtl);

  FOR ALL : full_tx_ip_fir_reduced_pulse_sync
    USE ENTITY work.full_tx_ip_fir_reduced_pulse_sync(rtl);

  -- Signals
  SIGNAL reset_x                          : std_logic;
  SIGNAL top_data_write                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL top_addr_sel                     : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL top_wr_enb                       : std_logic;  -- ufix1
  SIGNAL top_rd_enb                       : std_logic;  -- ufix1
  SIGNAL addr_sel_rd                      : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL top_data_read                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL top_rd_enb_ack                   : std_logic;  -- ufix1
  SIGNAL write_reg0_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_reg1_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_reg2_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_reg3_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL top_reset_internal               : std_logic;  -- ufix1
  SIGNAL top_reset_internal_sync          : std_logic;  -- ufix1
  SIGNAL s_ack_pulse_reset                : std_logic;  -- ufix1

BEGIN
  u_full_tx_ip_fir_reduced_addr_decoder_inst : full_tx_ip_fir_reduced_addr_decoder
    PORT MAP( data_write => top_data_write,  -- ufix32
              addr_sel => top_addr_sel,  -- ufix14
              wr_enb => top_wr_enb,  -- ufix1
              rd_enb => top_rd_enb,  -- ufix1
              addr_sel_rd => addr_sel_rd,  -- ufix14
              IPCORE_CLK => IPCORE_CLK,  -- ufix1
              IPCORE_RESET => IPCORE_RESET,  -- ufix1
              IPCORE_GLOBAL_RESET => IPCORE_GLOBAL_RESET,  -- ufix1
              AXI4_ACLK => AXI4_Lite_ACLK,
              AXI4_ARESET => reset_x,
              read_ip_timestamp => read_ip_timestamp,  -- ufix32
              data_read => top_data_read,  -- ufix32
              rd_enb_ack => top_rd_enb_ack,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_reg0 => write_reg0_tmp,  -- ufix32
              write_reg1 => write_reg1_tmp,  -- ufix32
              write_reg2 => write_reg2_tmp,  -- ufix32
              write_reg3 => write_reg3_tmp  -- ufix32
              );

  u_full_tx_ip_fir_reduced_axi_lite_module_inst : full_tx_ip_fir_reduced_axi_lite_module
    PORT MAP( clk => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              data_read => top_data_read,  -- ufix32
              rd_enb_ack => top_rd_enb_ack,  -- ufix1
              IPCORE_CLK => IPCORE_CLK,  -- ufix1
              IPCORE_RESET => IPCORE_RESET,  -- ufix1
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              data_write => top_data_write,  -- ufix32
              addr_sel => top_addr_sel,  -- ufix14
              wr_enb => top_wr_enb,  -- ufix1
              rd_enb => top_rd_enb,  -- ufix1
              reset_internal => top_reset_internal,  -- ufix1
              addr_sel_rd => addr_sel_rd  -- ufix14
              );

  u_full_tx_ip_fir_reduced_soft_reset_sync_inst : full_tx_ip_fir_reduced_pulse_sync
    PORT MAP( i_send_clk => AXI4_Lite_ACLK,  -- ufix1
              i_send_rst => reset_x,
              i_receive_clk => IPCORE_CLK,  -- ufix1
              i_receive_rst => IPCORE_RESET,  -- ufix1
              i_send_pulse => top_reset_internal,  -- ufix1
              o_receive_pulse => top_reset_internal_sync,  -- ufix1
              o_pulse_ack => s_ack_pulse_reset  -- ufix1
              );

  reset_x <=  NOT AXI4_Lite_ARESETN;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

  write_reg0 <= write_reg0_tmp;

  write_reg1 <= write_reg1_tmp;

  write_reg2 <= write_reg2_tmp;

  write_reg3 <= write_reg3_tmp;

  reset_internal <= top_reset_internal_sync;

END rtl;

