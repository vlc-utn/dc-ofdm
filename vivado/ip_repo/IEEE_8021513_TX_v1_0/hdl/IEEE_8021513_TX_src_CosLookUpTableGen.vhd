-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/IEEE_8021513_TX_src_CosLookUpTableGen.vhd
-- Created: 2024-10-06 13:51:05
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_TX_src_CosLookUpTableGen
-- Source Path: HDLTx/full_tx/full_ofdm_modulator/frequency_upshift/NCO/WaveformGen/CosLookUpTableGen
-- Hierarchy Level: 5
-- Model version: 4.149
-- 
-- Cos Look Up Table Generation Component
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.IEEE_8021513_TX_src_full_tx_pac.ALL;

ENTITY IEEE_8021513_TX_src_CosLookUpTableGen IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        lutaddr                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        lutCosine                         :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En16
        );
END IEEE_8021513_TX_src_CosLookUpTableGen;


ARCHITECTURE rtl OF IEEE_8021513_TX_src_CosLookUpTableGen IS

  -- Constants
  CONSTANT DirectLookupTable_data         : vector_of_signed20(0 TO 511) := 
    (to_signed(16#10000#, 20), to_signed(16#10000#, 20), to_signed(16#10000#, 20), to_signed(16#0FFFF#, 20),
     to_signed(16#0FFFF#, 20), to_signed(16#0FFFE#, 20), to_signed(16#0FFFD#, 20), to_signed(16#0FFFC#, 20),
     to_signed(16#0FFFB#, 20), to_signed(16#0FFFA#, 20), to_signed(16#0FFF8#, 20), to_signed(16#0FFF7#, 20),
     to_signed(16#0FFF5#, 20), to_signed(16#0FFF3#, 20), to_signed(16#0FFF1#, 20), to_signed(16#0FFEF#, 20),
     to_signed(16#0FFEC#, 20), to_signed(16#0FFEA#, 20), to_signed(16#0FFE7#, 20), to_signed(16#0FFE4#, 20),
     to_signed(16#0FFE1#, 20), to_signed(16#0FFDE#, 20), to_signed(16#0FFDB#, 20), to_signed(16#0FFD7#, 20),
     to_signed(16#0FFD4#, 20), to_signed(16#0FFD0#, 20), to_signed(16#0FFCC#, 20), to_signed(16#0FFC8#, 20),
     to_signed(16#0FFC4#, 20), to_signed(16#0FFBF#, 20), to_signed(16#0FFBB#, 20), to_signed(16#0FFB6#, 20),
     to_signed(16#0FFB1#, 20), to_signed(16#0FFAC#, 20), to_signed(16#0FFA7#, 20), to_signed(16#0FFA2#, 20),
     to_signed(16#0FF9C#, 20), to_signed(16#0FF96#, 20), to_signed(16#0FF91#, 20), to_signed(16#0FF8B#, 20),
     to_signed(16#0FF85#, 20), to_signed(16#0FF7E#, 20), to_signed(16#0FF78#, 20), to_signed(16#0FF71#, 20),
     to_signed(16#0FF6B#, 20), to_signed(16#0FF64#, 20), to_signed(16#0FF5D#, 20), to_signed(16#0FF56#, 20),
     to_signed(16#0FF4E#, 20), to_signed(16#0FF47#, 20), to_signed(16#0FF3F#, 20), to_signed(16#0FF38#, 20),
     to_signed(16#0FF30#, 20), to_signed(16#0FF28#, 20), to_signed(16#0FF1F#, 20), to_signed(16#0FF17#, 20),
     to_signed(16#0FF0E#, 20), to_signed(16#0FF06#, 20), to_signed(16#0FEFD#, 20), to_signed(16#0FEF4#, 20),
     to_signed(16#0FEEB#, 20), to_signed(16#0FEE1#, 20), to_signed(16#0FED8#, 20), to_signed(16#0FECE#, 20),
     to_signed(16#0FEC4#, 20), to_signed(16#0FEBA#, 20), to_signed(16#0FEB0#, 20), to_signed(16#0FEA6#, 20),
     to_signed(16#0FE9C#, 20), to_signed(16#0FE91#, 20), to_signed(16#0FE87#, 20), to_signed(16#0FE7C#, 20),
     to_signed(16#0FE71#, 20), to_signed(16#0FE66#, 20), to_signed(16#0FE5A#, 20), to_signed(16#0FE4F#, 20),
     to_signed(16#0FE43#, 20), to_signed(16#0FE37#, 20), to_signed(16#0FE2B#, 20), to_signed(16#0FE1F#, 20),
     to_signed(16#0FE13#, 20), to_signed(16#0FE07#, 20), to_signed(16#0FDFA#, 20), to_signed(16#0FDEE#, 20),
     to_signed(16#0FDE1#, 20), to_signed(16#0FDD4#, 20), to_signed(16#0FDC7#, 20), to_signed(16#0FDB9#, 20),
     to_signed(16#0FDAC#, 20), to_signed(16#0FD9E#, 20), to_signed(16#0FD90#, 20), to_signed(16#0FD83#, 20),
     to_signed(16#0FD74#, 20), to_signed(16#0FD66#, 20), to_signed(16#0FD58#, 20), to_signed(16#0FD49#, 20),
     to_signed(16#0FD3B#, 20), to_signed(16#0FD2C#, 20), to_signed(16#0FD1D#, 20), to_signed(16#0FD0E#, 20),
     to_signed(16#0FCFE#, 20), to_signed(16#0FCEF#, 20), to_signed(16#0FCDF#, 20), to_signed(16#0FCD0#, 20),
     to_signed(16#0FCC0#, 20), to_signed(16#0FCB0#, 20), to_signed(16#0FCA0#, 20), to_signed(16#0FC8F#, 20),
     to_signed(16#0FC7F#, 20), to_signed(16#0FC6E#, 20), to_signed(16#0FC5D#, 20), to_signed(16#0FC4C#, 20),
     to_signed(16#0FC3B#, 20), to_signed(16#0FC2A#, 20), to_signed(16#0FC18#, 20), to_signed(16#0FC07#, 20),
     to_signed(16#0FBF5#, 20), to_signed(16#0FBE3#, 20), to_signed(16#0FBD1#, 20), to_signed(16#0FBBF#, 20),
     to_signed(16#0FBAD#, 20), to_signed(16#0FB9A#, 20), to_signed(16#0FB88#, 20), to_signed(16#0FB75#, 20),
     to_signed(16#0FB62#, 20), to_signed(16#0FB4F#, 20), to_signed(16#0FB3C#, 20), to_signed(16#0FB28#, 20),
     to_signed(16#0FB15#, 20), to_signed(16#0FB01#, 20), to_signed(16#0FAED#, 20), to_signed(16#0FAD9#, 20),
     to_signed(16#0FAC5#, 20), to_signed(16#0FAB1#, 20), to_signed(16#0FA9C#, 20), to_signed(16#0FA88#, 20),
     to_signed(16#0FA73#, 20), to_signed(16#0FA5E#, 20), to_signed(16#0FA49#, 20), to_signed(16#0FA34#, 20),
     to_signed(16#0FA1F#, 20), to_signed(16#0FA09#, 20), to_signed(16#0F9F3#, 20), to_signed(16#0F9DE#, 20),
     to_signed(16#0F9C8#, 20), to_signed(16#0F9B2#, 20), to_signed(16#0F99B#, 20), to_signed(16#0F985#, 20),
     to_signed(16#0F96E#, 20), to_signed(16#0F958#, 20), to_signed(16#0F941#, 20), to_signed(16#0F92A#, 20),
     to_signed(16#0F913#, 20), to_signed(16#0F8FB#, 20), to_signed(16#0F8E4#, 20), to_signed(16#0F8CC#, 20),
     to_signed(16#0F8B4#, 20), to_signed(16#0F89D#, 20), to_signed(16#0F885#, 20), to_signed(16#0F86C#, 20),
     to_signed(16#0F854#, 20), to_signed(16#0F83B#, 20), to_signed(16#0F823#, 20), to_signed(16#0F80A#, 20),
     to_signed(16#0F7F1#, 20), to_signed(16#0F7D8#, 20), to_signed(16#0F7BF#, 20), to_signed(16#0F7A5#, 20),
     to_signed(16#0F78C#, 20), to_signed(16#0F772#, 20), to_signed(16#0F758#, 20), to_signed(16#0F73E#, 20),
     to_signed(16#0F724#, 20), to_signed(16#0F70A#, 20), to_signed(16#0F6EF#, 20), to_signed(16#0F6D5#, 20),
     to_signed(16#0F6BA#, 20), to_signed(16#0F69F#, 20), to_signed(16#0F684#, 20), to_signed(16#0F669#, 20),
     to_signed(16#0F64E#, 20), to_signed(16#0F632#, 20), to_signed(16#0F616#, 20), to_signed(16#0F5FB#, 20),
     to_signed(16#0F5DF#, 20), to_signed(16#0F5C3#, 20), to_signed(16#0F5A6#, 20), to_signed(16#0F58A#, 20),
     to_signed(16#0F56E#, 20), to_signed(16#0F551#, 20), to_signed(16#0F534#, 20), to_signed(16#0F517#, 20),
     to_signed(16#0F4FA#, 20), to_signed(16#0F4DD#, 20), to_signed(16#0F4BF#, 20), to_signed(16#0F4A2#, 20),
     to_signed(16#0F484#, 20), to_signed(16#0F466#, 20), to_signed(16#0F448#, 20), to_signed(16#0F42A#, 20),
     to_signed(16#0F40C#, 20), to_signed(16#0F3ED#, 20), to_signed(16#0F3CF#, 20), to_signed(16#0F3B0#, 20),
     to_signed(16#0F391#, 20), to_signed(16#0F372#, 20), to_signed(16#0F353#, 20), to_signed(16#0F334#, 20),
     to_signed(16#0F314#, 20), to_signed(16#0F2F5#, 20), to_signed(16#0F2D5#, 20), to_signed(16#0F2B5#, 20),
     to_signed(16#0F295#, 20), to_signed(16#0F275#, 20), to_signed(16#0F254#, 20), to_signed(16#0F234#, 20),
     to_signed(16#0F213#, 20), to_signed(16#0F1F3#, 20), to_signed(16#0F1D2#, 20), to_signed(16#0F1B1#, 20),
     to_signed(16#0F18F#, 20), to_signed(16#0F16E#, 20), to_signed(16#0F14C#, 20), to_signed(16#0F12B#, 20),
     to_signed(16#0F109#, 20), to_signed(16#0F0E7#, 20), to_signed(16#0F0C5#, 20), to_signed(16#0F0A3#, 20),
     to_signed(16#0F080#, 20), to_signed(16#0F05E#, 20), to_signed(16#0F03B#, 20), to_signed(16#0F018#, 20),
     to_signed(16#0EFF5#, 20), to_signed(16#0EFD2#, 20), to_signed(16#0EFAF#, 20), to_signed(16#0EF8C#, 20),
     to_signed(16#0EF68#, 20), to_signed(16#0EF45#, 20), to_signed(16#0EF21#, 20), to_signed(16#0EEFD#, 20),
     to_signed(16#0EED9#, 20), to_signed(16#0EEB4#, 20), to_signed(16#0EE90#, 20), to_signed(16#0EE6B#, 20),
     to_signed(16#0EE47#, 20), to_signed(16#0EE22#, 20), to_signed(16#0EDFD#, 20), to_signed(16#0EDD8#, 20),
     to_signed(16#0EDB3#, 20), to_signed(16#0ED8D#, 20), to_signed(16#0ED68#, 20), to_signed(16#0ED42#, 20),
     to_signed(16#0ED1C#, 20), to_signed(16#0ECF6#, 20), to_signed(16#0ECD0#, 20), to_signed(16#0ECAA#, 20),
     to_signed(16#0EC83#, 20), to_signed(16#0EC5D#, 20), to_signed(16#0EC36#, 20), to_signed(16#0EC0F#, 20),
     to_signed(16#0EBE8#, 20), to_signed(16#0EBC1#, 20), to_signed(16#0EB9A#, 20), to_signed(16#0EB73#, 20),
     to_signed(16#0EB4B#, 20), to_signed(16#0EB23#, 20), to_signed(16#0EAFC#, 20), to_signed(16#0EAD4#, 20),
     to_signed(16#0EAAB#, 20), to_signed(16#0EA83#, 20), to_signed(16#0EA5B#, 20), to_signed(16#0EA32#, 20),
     to_signed(16#0EA0A#, 20), to_signed(16#0E9E1#, 20), to_signed(16#0E9B8#, 20), to_signed(16#0E98F#, 20),
     to_signed(16#0E966#, 20), to_signed(16#0E93C#, 20), to_signed(16#0E913#, 20), to_signed(16#0E8E9#, 20),
     to_signed(16#0E8BF#, 20), to_signed(16#0E895#, 20), to_signed(16#0E86B#, 20), to_signed(16#0E841#, 20),
     to_signed(16#0E817#, 20), to_signed(16#0E7EC#, 20), to_signed(16#0E7C2#, 20), to_signed(16#0E797#, 20),
     to_signed(16#0E76C#, 20), to_signed(16#0E741#, 20), to_signed(16#0E716#, 20), to_signed(16#0E6EA#, 20),
     to_signed(16#0E6BF#, 20), to_signed(16#0E693#, 20), to_signed(16#0E667#, 20), to_signed(16#0E63C#, 20),
     to_signed(16#0E610#, 20), to_signed(16#0E5E3#, 20), to_signed(16#0E5B7#, 20), to_signed(16#0E58B#, 20),
     to_signed(16#0E55E#, 20), to_signed(16#0E531#, 20), to_signed(16#0E504#, 20), to_signed(16#0E4D7#, 20),
     to_signed(16#0E4AA#, 20), to_signed(16#0E47D#, 20), to_signed(16#0E450#, 20), to_signed(16#0E422#, 20),
     to_signed(16#0E3F4#, 20), to_signed(16#0E3C7#, 20), to_signed(16#0E399#, 20), to_signed(16#0E36B#, 20),
     to_signed(16#0E33C#, 20), to_signed(16#0E30E#, 20), to_signed(16#0E2DF#, 20), to_signed(16#0E2B1#, 20),
     to_signed(16#0E282#, 20), to_signed(16#0E253#, 20), to_signed(16#0E224#, 20), to_signed(16#0E1F5#, 20),
     to_signed(16#0E1C6#, 20), to_signed(16#0E196#, 20), to_signed(16#0E167#, 20), to_signed(16#0E137#, 20),
     to_signed(16#0E107#, 20), to_signed(16#0E0D7#, 20), to_signed(16#0E0A7#, 20), to_signed(16#0E077#, 20),
     to_signed(16#0E046#, 20), to_signed(16#0E016#, 20), to_signed(16#0DFE5#, 20), to_signed(16#0DFB4#, 20),
     to_signed(16#0DF83#, 20), to_signed(16#0DF52#, 20), to_signed(16#0DF21#, 20), to_signed(16#0DEF0#, 20),
     to_signed(16#0DEBE#, 20), to_signed(16#0DE8C#, 20), to_signed(16#0DE5B#, 20), to_signed(16#0DE29#, 20),
     to_signed(16#0DDF7#, 20), to_signed(16#0DDC5#, 20), to_signed(16#0DD92#, 20), to_signed(16#0DD60#, 20),
     to_signed(16#0DD2D#, 20), to_signed(16#0DCFB#, 20), to_signed(16#0DCC8#, 20), to_signed(16#0DC95#, 20),
     to_signed(16#0DC62#, 20), to_signed(16#0DC2F#, 20), to_signed(16#0DBFB#, 20), to_signed(16#0DBC8#, 20),
     to_signed(16#0DB94#, 20), to_signed(16#0DB60#, 20), to_signed(16#0DB2C#, 20), to_signed(16#0DAF8#, 20),
     to_signed(16#0DAC4#, 20), to_signed(16#0DA90#, 20), to_signed(16#0DA5C#, 20), to_signed(16#0DA27#, 20),
     to_signed(16#0D9F2#, 20), to_signed(16#0D9BE#, 20), to_signed(16#0D989#, 20), to_signed(16#0D954#, 20),
     to_signed(16#0D91E#, 20), to_signed(16#0D8E9#, 20), to_signed(16#0D8B4#, 20), to_signed(16#0D87E#, 20),
     to_signed(16#0D848#, 20), to_signed(16#0D812#, 20), to_signed(16#0D7DC#, 20), to_signed(16#0D7A6#, 20),
     to_signed(16#0D770#, 20), to_signed(16#0D73A#, 20), to_signed(16#0D703#, 20), to_signed(16#0D6CD#, 20),
     to_signed(16#0D696#, 20), to_signed(16#0D65F#, 20), to_signed(16#0D628#, 20), to_signed(16#0D5F1#, 20),
     to_signed(16#0D5BA#, 20), to_signed(16#0D582#, 20), to_signed(16#0D54B#, 20), to_signed(16#0D513#, 20),
     to_signed(16#0D4DB#, 20), to_signed(16#0D4A3#, 20), to_signed(16#0D46B#, 20), to_signed(16#0D433#, 20),
     to_signed(16#0D3FB#, 20), to_signed(16#0D3C2#, 20), to_signed(16#0D38A#, 20), to_signed(16#0D351#, 20),
     to_signed(16#0D318#, 20), to_signed(16#0D2DF#, 20), to_signed(16#0D2A6#, 20), to_signed(16#0D26D#, 20),
     to_signed(16#0D234#, 20), to_signed(16#0D1FA#, 20), to_signed(16#0D1C1#, 20), to_signed(16#0D187#, 20),
     to_signed(16#0D14D#, 20), to_signed(16#0D113#, 20), to_signed(16#0D0D9#, 20), to_signed(16#0D09F#, 20),
     to_signed(16#0D065#, 20), to_signed(16#0D02A#, 20), to_signed(16#0CFF0#, 20), to_signed(16#0CFB5#, 20),
     to_signed(16#0CF7A#, 20), to_signed(16#0CF3F#, 20), to_signed(16#0CF04#, 20), to_signed(16#0CEC9#, 20),
     to_signed(16#0CE8E#, 20), to_signed(16#0CE52#, 20), to_signed(16#0CE17#, 20), to_signed(16#0CDDB#, 20),
     to_signed(16#0CD9F#, 20), to_signed(16#0CD63#, 20), to_signed(16#0CD27#, 20), to_signed(16#0CCEB#, 20),
     to_signed(16#0CCAE#, 20), to_signed(16#0CC72#, 20), to_signed(16#0CC35#, 20), to_signed(16#0CBF9#, 20),
     to_signed(16#0CBBC#, 20), to_signed(16#0CB7F#, 20), to_signed(16#0CB42#, 20), to_signed(16#0CB05#, 20),
     to_signed(16#0CAC7#, 20), to_signed(16#0CA8A#, 20), to_signed(16#0CA4D#, 20), to_signed(16#0CA0F#, 20),
     to_signed(16#0C9D1#, 20), to_signed(16#0C993#, 20), to_signed(16#0C955#, 20), to_signed(16#0C917#, 20),
     to_signed(16#0C8D9#, 20), to_signed(16#0C89A#, 20), to_signed(16#0C85C#, 20), to_signed(16#0C81D#, 20),
     to_signed(16#0C7DE#, 20), to_signed(16#0C7A0#, 20), to_signed(16#0C761#, 20), to_signed(16#0C721#, 20),
     to_signed(16#0C6E2#, 20), to_signed(16#0C6A3#, 20), to_signed(16#0C663#, 20), to_signed(16#0C624#, 20),
     to_signed(16#0C5E4#, 20), to_signed(16#0C5A4#, 20), to_signed(16#0C564#, 20), to_signed(16#0C524#, 20),
     to_signed(16#0C4E4#, 20), to_signed(16#0C4A4#, 20), to_signed(16#0C463#, 20), to_signed(16#0C423#, 20),
     to_signed(16#0C3E2#, 20), to_signed(16#0C3A1#, 20), to_signed(16#0C360#, 20), to_signed(16#0C31F#, 20),
     to_signed(16#0C2DE#, 20), to_signed(16#0C29D#, 20), to_signed(16#0C25C#, 20), to_signed(16#0C21A#, 20),
     to_signed(16#0C1D8#, 20), to_signed(16#0C197#, 20), to_signed(16#0C155#, 20), to_signed(16#0C113#, 20),
     to_signed(16#0C0D1#, 20), to_signed(16#0C08F#, 20), to_signed(16#0C04C#, 20), to_signed(16#0C00A#, 20),
     to_signed(16#0BFC7#, 20), to_signed(16#0BF85#, 20), to_signed(16#0BF42#, 20), to_signed(16#0BEFF#, 20),
     to_signed(16#0BEBC#, 20), to_signed(16#0BE79#, 20), to_signed(16#0BE36#, 20), to_signed(16#0BDF2#, 20),
     to_signed(16#0BDAF#, 20), to_signed(16#0BD6B#, 20), to_signed(16#0BD28#, 20), to_signed(16#0BCE4#, 20),
     to_signed(16#0BCA0#, 20), to_signed(16#0BC5C#, 20), to_signed(16#0BC18#, 20), to_signed(16#0BBD4#, 20),
     to_signed(16#0BB8F#, 20), to_signed(16#0BB4B#, 20), to_signed(16#0BB06#, 20), to_signed(16#0BAC1#, 20),
     to_signed(16#0BA7D#, 20), to_signed(16#0BA38#, 20), to_signed(16#0B9F3#, 20), to_signed(16#0B9AE#, 20),
     to_signed(16#0B968#, 20), to_signed(16#0B923#, 20), to_signed(16#0B8DD#, 20), to_signed(16#0B898#, 20),
     to_signed(16#0B852#, 20), to_signed(16#0B80C#, 20), to_signed(16#0B7C6#, 20), to_signed(16#0B780#, 20),
     to_signed(16#0B73A#, 20), to_signed(16#0B6F4#, 20), to_signed(16#0B6AD#, 20), to_signed(16#0B667#, 20),
     to_signed(16#0B620#, 20), to_signed(16#0B5DA#, 20), to_signed(16#0B593#, 20), to_signed(16#0B54C#, 20));  -- sfix20 [512]

  -- Signals
  SIGNAL lutaddr_unsigned                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL lutaddrInReg                     : unsigned(8 DOWNTO 0) := to_unsigned(16#000#, 9);  -- ufix9
  SIGNAL lutCosineout                     : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL lutCosineoutreg1                 : signed(19 DOWNTO 0) := to_signed(16#00000#, 20);  -- sfix20_En16
  SIGNAL lutCosine_tmp                    : signed(19 DOWNTO 0);  -- sfix20_En16

BEGIN
  lutaddr_unsigned <= unsigned(lutaddr);

  -- Look up tale address input register
  LUTaddrRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutaddrInReg <= lutaddr_unsigned;
      END IF;
    END IF;
  END PROCESS LUTaddrRegister_process;


  -- Octant Cosine wave table
  lutCosineout <= DirectLookupTable_data(to_integer(lutaddrInReg));

  -- Cos lookup table output register
  LUTCosineoutResetRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutCosineoutreg1 <= lutCosineout;
      END IF;
    END IF;
  END PROCESS LUTCosineoutResetRegister_process;


  LUTCosineoutRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        lutCosine_tmp <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        lutCosine_tmp <= lutCosineoutreg1;
      END IF;
    END IF;
  END PROCESS LUTCosineoutRegister_process;


  lutCosine <= std_logic_vector(lutCosine_tmp);

END rtl;

