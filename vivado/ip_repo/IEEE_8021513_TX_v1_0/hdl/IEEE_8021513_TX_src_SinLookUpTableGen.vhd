-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLTx/IEEE_8021513_TX_src_SinLookUpTableGen.vhd
-- Created: 2024-10-27 17:09:29
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IEEE_8021513_TX_src_SinLookUpTableGen
-- Source Path: HDLTx/full_tx/full_ofdm_modulator/frequency_upshift/NCO/WaveformGen/SinLookUpTableGen
-- Hierarchy Level: 5
-- Model version: 4.169
-- 
-- Sin Look Up Table Generation Component
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.IEEE_8021513_TX_src_full_tx_pac.ALL;

ENTITY IEEE_8021513_TX_src_SinLookUpTableGen IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        lutaddr                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        lutSine                           :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En16
        );
END IEEE_8021513_TX_src_SinLookUpTableGen;


ARCHITECTURE rtl OF IEEE_8021513_TX_src_SinLookUpTableGen IS

  -- Constants
  CONSTANT DirectLookupTable_data         : vector_of_signed20(0 TO 511) := 
    (to_signed(16#00000#, 20), to_signed(16#00065#, 20), to_signed(16#000C9#, 20), to_signed(16#0012E#, 20),
     to_signed(16#00192#, 20), to_signed(16#001F7#, 20), to_signed(16#0025B#, 20), to_signed(16#002C0#, 20),
     to_signed(16#00324#, 20), to_signed(16#00389#, 20), to_signed(16#003ED#, 20), to_signed(16#00452#, 20),
     to_signed(16#004B6#, 20), to_signed(16#0051B#, 20), to_signed(16#0057F#, 20), to_signed(16#005E4#, 20),
     to_signed(16#00648#, 20), to_signed(16#006AD#, 20), to_signed(16#00711#, 20), to_signed(16#00776#, 20),
     to_signed(16#007DA#, 20), to_signed(16#0083F#, 20), to_signed(16#008A3#, 20), to_signed(16#00908#, 20),
     to_signed(16#0096C#, 20), to_signed(16#009D1#, 20), to_signed(16#00A35#, 20), to_signed(16#00A9A#, 20),
     to_signed(16#00AFE#, 20), to_signed(16#00B62#, 20), to_signed(16#00BC7#, 20), to_signed(16#00C2B#, 20),
     to_signed(16#00C90#, 20), to_signed(16#00CF4#, 20), to_signed(16#00D59#, 20), to_signed(16#00DBD#, 20),
     to_signed(16#00E21#, 20), to_signed(16#00E86#, 20), to_signed(16#00EEA#, 20), to_signed(16#00F4E#, 20),
     to_signed(16#00FB3#, 20), to_signed(16#01017#, 20), to_signed(16#0107B#, 20), to_signed(16#010E0#, 20),
     to_signed(16#01144#, 20), to_signed(16#011A8#, 20), to_signed(16#0120D#, 20), to_signed(16#01271#, 20),
     to_signed(16#012D5#, 20), to_signed(16#01339#, 20), to_signed(16#0139E#, 20), to_signed(16#01402#, 20),
     to_signed(16#01466#, 20), to_signed(16#014CA#, 20), to_signed(16#0152E#, 20), to_signed(16#01593#, 20),
     to_signed(16#015F7#, 20), to_signed(16#0165B#, 20), to_signed(16#016BF#, 20), to_signed(16#01723#, 20),
     to_signed(16#01787#, 20), to_signed(16#017EB#, 20), to_signed(16#01850#, 20), to_signed(16#018B4#, 20),
     to_signed(16#01918#, 20), to_signed(16#0197C#, 20), to_signed(16#019E0#, 20), to_signed(16#01A44#, 20),
     to_signed(16#01AA8#, 20), to_signed(16#01B0C#, 20), to_signed(16#01B70#, 20), to_signed(16#01BD4#, 20),
     to_signed(16#01C38#, 20), to_signed(16#01C9B#, 20), to_signed(16#01CFF#, 20), to_signed(16#01D63#, 20),
     to_signed(16#01DC7#, 20), to_signed(16#01E2B#, 20), to_signed(16#01E8F#, 20), to_signed(16#01EF3#, 20),
     to_signed(16#01F56#, 20), to_signed(16#01FBA#, 20), to_signed(16#0201E#, 20), to_signed(16#02082#, 20),
     to_signed(16#020E5#, 20), to_signed(16#02149#, 20), to_signed(16#021AD#, 20), to_signed(16#02210#, 20),
     to_signed(16#02274#, 20), to_signed(16#022D7#, 20), to_signed(16#0233B#, 20), to_signed(16#0239F#, 20),
     to_signed(16#02402#, 20), to_signed(16#02466#, 20), to_signed(16#024C9#, 20), to_signed(16#0252D#, 20),
     to_signed(16#02590#, 20), to_signed(16#025F4#, 20), to_signed(16#02657#, 20), to_signed(16#026BA#, 20),
     to_signed(16#0271E#, 20), to_signed(16#02781#, 20), to_signed(16#027E4#, 20), to_signed(16#02848#, 20),
     to_signed(16#028AB#, 20), to_signed(16#0290E#, 20), to_signed(16#02971#, 20), to_signed(16#029D5#, 20),
     to_signed(16#02A38#, 20), to_signed(16#02A9B#, 20), to_signed(16#02AFE#, 20), to_signed(16#02B61#, 20),
     to_signed(16#02BC4#, 20), to_signed(16#02C27#, 20), to_signed(16#02C8A#, 20), to_signed(16#02CED#, 20),
     to_signed(16#02D50#, 20), to_signed(16#02DB3#, 20), to_signed(16#02E16#, 20), to_signed(16#02E79#, 20),
     to_signed(16#02EDC#, 20), to_signed(16#02F3F#, 20), to_signed(16#02FA1#, 20), to_signed(16#03004#, 20),
     to_signed(16#03067#, 20), to_signed(16#030CA#, 20), to_signed(16#0312C#, 20), to_signed(16#0318F#, 20),
     to_signed(16#031F1#, 20), to_signed(16#03254#, 20), to_signed(16#032B7#, 20), to_signed(16#03319#, 20),
     to_signed(16#0337C#, 20), to_signed(16#033DE#, 20), to_signed(16#03440#, 20), to_signed(16#034A3#, 20),
     to_signed(16#03505#, 20), to_signed(16#03568#, 20), to_signed(16#035CA#, 20), to_signed(16#0362C#, 20),
     to_signed(16#0368E#, 20), to_signed(16#036F1#, 20), to_signed(16#03753#, 20), to_signed(16#037B5#, 20),
     to_signed(16#03817#, 20), to_signed(16#03879#, 20), to_signed(16#038DB#, 20), to_signed(16#0393D#, 20),
     to_signed(16#0399F#, 20), to_signed(16#03A01#, 20), to_signed(16#03A63#, 20), to_signed(16#03AC5#, 20),
     to_signed(16#03B27#, 20), to_signed(16#03B88#, 20), to_signed(16#03BEA#, 20), to_signed(16#03C4C#, 20),
     to_signed(16#03CAE#, 20), to_signed(16#03D0F#, 20), to_signed(16#03D71#, 20), to_signed(16#03DD2#, 20),
     to_signed(16#03E34#, 20), to_signed(16#03E95#, 20), to_signed(16#03EF7#, 20), to_signed(16#03F58#, 20),
     to_signed(16#03FBA#, 20), to_signed(16#0401B#, 20), to_signed(16#0407C#, 20), to_signed(16#040DE#, 20),
     to_signed(16#0413F#, 20), to_signed(16#041A0#, 20), to_signed(16#04201#, 20), to_signed(16#04262#, 20),
     to_signed(16#042C3#, 20), to_signed(16#04324#, 20), to_signed(16#04385#, 20), to_signed(16#043E6#, 20),
     to_signed(16#04447#, 20), to_signed(16#044A8#, 20), to_signed(16#04509#, 20), to_signed(16#0456A#, 20),
     to_signed(16#045CB#, 20), to_signed(16#0462B#, 20), to_signed(16#0468C#, 20), to_signed(16#046EC#, 20),
     to_signed(16#0474D#, 20), to_signed(16#047AE#, 20), to_signed(16#0480E#, 20), to_signed(16#0486F#, 20),
     to_signed(16#048CF#, 20), to_signed(16#0492F#, 20), to_signed(16#04990#, 20), to_signed(16#049F0#, 20),
     to_signed(16#04A50#, 20), to_signed(16#04AB0#, 20), to_signed(16#04B10#, 20), to_signed(16#04B71#, 20),
     to_signed(16#04BD1#, 20), to_signed(16#04C31#, 20), to_signed(16#04C90#, 20), to_signed(16#04CF0#, 20),
     to_signed(16#04D50#, 20), to_signed(16#04DB0#, 20), to_signed(16#04E10#, 20), to_signed(16#04E70#, 20),
     to_signed(16#04ECF#, 20), to_signed(16#04F2F#, 20), to_signed(16#04F8E#, 20), to_signed(16#04FEE#, 20),
     to_signed(16#0504D#, 20), to_signed(16#050AD#, 20), to_signed(16#0510C#, 20), to_signed(16#0516C#, 20),
     to_signed(16#051CB#, 20), to_signed(16#0522A#, 20), to_signed(16#05289#, 20), to_signed(16#052E8#, 20),
     to_signed(16#05348#, 20), to_signed(16#053A7#, 20), to_signed(16#05406#, 20), to_signed(16#05464#, 20),
     to_signed(16#054C3#, 20), to_signed(16#05522#, 20), to_signed(16#05581#, 20), to_signed(16#055E0#, 20),
     to_signed(16#0563E#, 20), to_signed(16#0569D#, 20), to_signed(16#056FC#, 20), to_signed(16#0575A#, 20),
     to_signed(16#057B9#, 20), to_signed(16#05817#, 20), to_signed(16#05875#, 20), to_signed(16#058D4#, 20),
     to_signed(16#05932#, 20), to_signed(16#05990#, 20), to_signed(16#059EE#, 20), to_signed(16#05A4C#, 20),
     to_signed(16#05AAA#, 20), to_signed(16#05B08#, 20), to_signed(16#05B66#, 20), to_signed(16#05BC4#, 20),
     to_signed(16#05C22#, 20), to_signed(16#05C80#, 20), to_signed(16#05CDE#, 20), to_signed(16#05D3B#, 20),
     to_signed(16#05D99#, 20), to_signed(16#05DF6#, 20), to_signed(16#05E54#, 20), to_signed(16#05EB1#, 20),
     to_signed(16#05F0F#, 20), to_signed(16#05F6C#, 20), to_signed(16#05FC9#, 20), to_signed(16#06026#, 20),
     to_signed(16#06084#, 20), to_signed(16#060E1#, 20), to_signed(16#0613E#, 20), to_signed(16#0619B#, 20),
     to_signed(16#061F8#, 20), to_signed(16#06254#, 20), to_signed(16#062B1#, 20), to_signed(16#0630E#, 20),
     to_signed(16#0636B#, 20), to_signed(16#063C7#, 20), to_signed(16#06424#, 20), to_signed(16#06480#, 20),
     to_signed(16#064DD#, 20), to_signed(16#06539#, 20), to_signed(16#06595#, 20), to_signed(16#065F2#, 20),
     to_signed(16#0664E#, 20), to_signed(16#066AA#, 20), to_signed(16#06706#, 20), to_signed(16#06762#, 20),
     to_signed(16#067BE#, 20), to_signed(16#0681A#, 20), to_signed(16#06876#, 20), to_signed(16#068D1#, 20),
     to_signed(16#0692D#, 20), to_signed(16#06989#, 20), to_signed(16#069E4#, 20), to_signed(16#06A40#, 20),
     to_signed(16#06A9B#, 20), to_signed(16#06AF6#, 20), to_signed(16#06B52#, 20), to_signed(16#06BAD#, 20),
     to_signed(16#06C08#, 20), to_signed(16#06C63#, 20), to_signed(16#06CBE#, 20), to_signed(16#06D19#, 20),
     to_signed(16#06D74#, 20), to_signed(16#06DCF#, 20), to_signed(16#06E2A#, 20), to_signed(16#06E85#, 20),
     to_signed(16#06EDF#, 20), to_signed(16#06F3A#, 20), to_signed(16#06F94#, 20), to_signed(16#06FEF#, 20),
     to_signed(16#07049#, 20), to_signed(16#070A3#, 20), to_signed(16#070FE#, 20), to_signed(16#07158#, 20),
     to_signed(16#071B2#, 20), to_signed(16#0720C#, 20), to_signed(16#07266#, 20), to_signed(16#072C0#, 20),
     to_signed(16#0731A#, 20), to_signed(16#07373#, 20), to_signed(16#073CD#, 20), to_signed(16#07427#, 20),
     to_signed(16#07480#, 20), to_signed(16#074DA#, 20), to_signed(16#07533#, 20), to_signed(16#0758D#, 20),
     to_signed(16#075E6#, 20), to_signed(16#0763F#, 20), to_signed(16#07698#, 20), to_signed(16#076F1#, 20),
     to_signed(16#0774A#, 20), to_signed(16#077A3#, 20), to_signed(16#077FC#, 20), to_signed(16#07855#, 20),
     to_signed(16#078AD#, 20), to_signed(16#07906#, 20), to_signed(16#0795F#, 20), to_signed(16#079B7#, 20),
     to_signed(16#07A10#, 20), to_signed(16#07A68#, 20), to_signed(16#07AC0#, 20), to_signed(16#07B18#, 20),
     to_signed(16#07B70#, 20), to_signed(16#07BC8#, 20), to_signed(16#07C20#, 20), to_signed(16#07C78#, 20),
     to_signed(16#07CD0#, 20), to_signed(16#07D28#, 20), to_signed(16#07D7F#, 20), to_signed(16#07DD7#, 20),
     to_signed(16#07E2F#, 20), to_signed(16#07E86#, 20), to_signed(16#07EDD#, 20), to_signed(16#07F35#, 20),
     to_signed(16#07F8C#, 20), to_signed(16#07FE3#, 20), to_signed(16#0803A#, 20), to_signed(16#08091#, 20),
     to_signed(16#080E8#, 20), to_signed(16#0813F#, 20), to_signed(16#08195#, 20), to_signed(16#081EC#, 20),
     to_signed(16#08243#, 20), to_signed(16#08299#, 20), to_signed(16#082F0#, 20), to_signed(16#08346#, 20),
     to_signed(16#0839C#, 20), to_signed(16#083F2#, 20), to_signed(16#08449#, 20), to_signed(16#0849F#, 20),
     to_signed(16#084F5#, 20), to_signed(16#0854A#, 20), to_signed(16#085A0#, 20), to_signed(16#085F6#, 20),
     to_signed(16#0864C#, 20), to_signed(16#086A1#, 20), to_signed(16#086F7#, 20), to_signed(16#0874C#, 20),
     to_signed(16#087A1#, 20), to_signed(16#087F6#, 20), to_signed(16#0884C#, 20), to_signed(16#088A1#, 20),
     to_signed(16#088F6#, 20), to_signed(16#0894A#, 20), to_signed(16#0899F#, 20), to_signed(16#089F4#, 20),
     to_signed(16#08A49#, 20), to_signed(16#08A9D#, 20), to_signed(16#08AF2#, 20), to_signed(16#08B46#, 20),
     to_signed(16#08B9A#, 20), to_signed(16#08BEF#, 20), to_signed(16#08C43#, 20), to_signed(16#08C97#, 20),
     to_signed(16#08CEB#, 20), to_signed(16#08D3F#, 20), to_signed(16#08D93#, 20), to_signed(16#08DE6#, 20),
     to_signed(16#08E3A#, 20), to_signed(16#08E8D#, 20), to_signed(16#08EE1#, 20), to_signed(16#08F34#, 20),
     to_signed(16#08F88#, 20), to_signed(16#08FDB#, 20), to_signed(16#0902E#, 20), to_signed(16#09081#, 20),
     to_signed(16#090D4#, 20), to_signed(16#09127#, 20), to_signed(16#09179#, 20), to_signed(16#091CC#, 20),
     to_signed(16#0921F#, 20), to_signed(16#09271#, 20), to_signed(16#092C4#, 20), to_signed(16#09316#, 20),
     to_signed(16#09368#, 20), to_signed(16#093BA#, 20), to_signed(16#0940C#, 20), to_signed(16#0945E#, 20),
     to_signed(16#094B0#, 20), to_signed(16#09502#, 20), to_signed(16#09554#, 20), to_signed(16#095A5#, 20),
     to_signed(16#095F7#, 20), to_signed(16#09648#, 20), to_signed(16#0969A#, 20), to_signed(16#096EB#, 20),
     to_signed(16#0973C#, 20), to_signed(16#0978D#, 20), to_signed(16#097DE#, 20), to_signed(16#0982F#, 20),
     to_signed(16#09880#, 20), to_signed(16#098D0#, 20), to_signed(16#09921#, 20), to_signed(16#09972#, 20),
     to_signed(16#099C2#, 20), to_signed(16#09A12#, 20), to_signed(16#09A63#, 20), to_signed(16#09AB3#, 20),
     to_signed(16#09B03#, 20), to_signed(16#09B53#, 20), to_signed(16#09BA3#, 20), to_signed(16#09BF2#, 20),
     to_signed(16#09C42#, 20), to_signed(16#09C92#, 20), to_signed(16#09CE1#, 20), to_signed(16#09D31#, 20),
     to_signed(16#09D80#, 20), to_signed(16#09DCF#, 20), to_signed(16#09E1E#, 20), to_signed(16#09E6D#, 20),
     to_signed(16#09EBC#, 20), to_signed(16#09F0B#, 20), to_signed(16#09F5A#, 20), to_signed(16#09FA8#, 20),
     to_signed(16#09FF7#, 20), to_signed(16#0A045#, 20), to_signed(16#0A094#, 20), to_signed(16#0A0E2#, 20),
     to_signed(16#0A130#, 20), to_signed(16#0A17E#, 20), to_signed(16#0A1CC#, 20), to_signed(16#0A21A#, 20),
     to_signed(16#0A268#, 20), to_signed(16#0A2B5#, 20), to_signed(16#0A303#, 20), to_signed(16#0A350#, 20),
     to_signed(16#0A39E#, 20), to_signed(16#0A3EB#, 20), to_signed(16#0A438#, 20), to_signed(16#0A485#, 20),
     to_signed(16#0A4D2#, 20), to_signed(16#0A51F#, 20), to_signed(16#0A56C#, 20), to_signed(16#0A5B8#, 20),
     to_signed(16#0A605#, 20), to_signed(16#0A652#, 20), to_signed(16#0A69E#, 20), to_signed(16#0A6EA#, 20),
     to_signed(16#0A736#, 20), to_signed(16#0A782#, 20), to_signed(16#0A7CE#, 20), to_signed(16#0A81A#, 20),
     to_signed(16#0A866#, 20), to_signed(16#0A8B2#, 20), to_signed(16#0A8FD#, 20), to_signed(16#0A949#, 20),
     to_signed(16#0A994#, 20), to_signed(16#0A9DF#, 20), to_signed(16#0AA2A#, 20), to_signed(16#0AA76#, 20),
     to_signed(16#0AAC1#, 20), to_signed(16#0AB0B#, 20), to_signed(16#0AB56#, 20), to_signed(16#0ABA1#, 20),
     to_signed(16#0ABEB#, 20), to_signed(16#0AC36#, 20), to_signed(16#0AC80#, 20), to_signed(16#0ACCA#, 20),
     to_signed(16#0AD14#, 20), to_signed(16#0AD5E#, 20), to_signed(16#0ADA8#, 20), to_signed(16#0ADF2#, 20),
     to_signed(16#0AE3C#, 20), to_signed(16#0AE85#, 20), to_signed(16#0AECF#, 20), to_signed(16#0AF18#, 20),
     to_signed(16#0AF62#, 20), to_signed(16#0AFAB#, 20), to_signed(16#0AFF4#, 20), to_signed(16#0B03D#, 20),
     to_signed(16#0B086#, 20), to_signed(16#0B0CE#, 20), to_signed(16#0B117#, 20), to_signed(16#0B160#, 20),
     to_signed(16#0B1A8#, 20), to_signed(16#0B1F0#, 20), to_signed(16#0B239#, 20), to_signed(16#0B281#, 20),
     to_signed(16#0B2C9#, 20), to_signed(16#0B311#, 20), to_signed(16#0B358#, 20), to_signed(16#0B3A0#, 20),
     to_signed(16#0B3E8#, 20), to_signed(16#0B42F#, 20), to_signed(16#0B477#, 20), to_signed(16#0B4BE#, 20));  -- sfix20 [512]

  -- Signals
  SIGNAL lutaddr_unsigned                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL lutaddrInReg                     : unsigned(8 DOWNTO 0) := to_unsigned(16#000#, 9);  -- ufix9
  SIGNAL lutSineout                       : signed(19 DOWNTO 0);  -- sfix20_En16
  SIGNAL lutSineoutreg1                   : signed(19 DOWNTO 0) := to_signed(16#00000#, 20);  -- sfix20_En16
  SIGNAL lutSine_tmp                      : signed(19 DOWNTO 0);  -- sfix20_En16

BEGIN
  lutaddr_unsigned <= unsigned(lutaddr);

  -- Look up table address input register
  LUTaddrRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutaddrInReg <= lutaddr_unsigned;
      END IF;
    END IF;
  END PROCESS LUTaddrRegister_process;


  -- Octant Sine wave table
  lutSineout <= DirectLookupTable_data(to_integer(lutaddrInReg));

  -- Sin lookup table output register
  LUTSineoutResetRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lutSineoutreg1 <= lutSineout;
      END IF;
    END IF;
  END PROCESS LUTSineoutResetRegister_process;


  LUTSineoutRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        lutSine_tmp <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        lutSine_tmp <= lutSineoutreg1;
      END IF;
    END IF;
  END PROCESS LUTSineoutRegister_process;


  lutSine <= std_logic_vector(lutSine_tmp);

END rtl;

