-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLModulatorFull/full_ofdm_modulator_ip_src_FilterTapSystolicPreAdd.vhd
-- Created: 2024-09-01 12:13:05
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_ofdm_modulator_ip_src_FilterTapSystolicPreAdd
-- Source Path: HDLModulatorFull/full_ofdm_modulator/interpolator/FIR Interpolator/HDLModulatorFull/full_ofdm_modulator/interpolator/FIR 
-- Interpolator/FIRFilter1/FilterTapSystolicPreAd
-- Hierarchy Level: 4
-- Model version: 1.43
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY full_ofdm_modulator_ip_src_FilterTapSystolicPreAdd IS
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        din_re                            :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        preAddIn                          :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        coeff                             :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        sumIn                             :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
        sumOut                            :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En20
        );
END full_ofdm_modulator_ip_src_FilterTapSystolicPreAdd;


ARCHITECTURE rtl OF full_ofdm_modulator_ip_src_FilterTapSystolicPreAdd IS

  -- Signals
  SIGNAL din_re_signed                    : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL preAddIn_signed                  : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL coeff_signed                     : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL sumIn_signed                     : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL fTap_din1_reg1                   : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL fTap_din1_reg2                   : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL fTap_din2_reg1                   : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL fTap_preAdd_reg                  : signed(12 DOWNTO 0) := to_signed(16#0000#, 13);  -- sfix13
  SIGNAL fTap_mult_reg                    : signed(24 DOWNTO 0) := to_signed(16#0000000#, 25);  -- sfix25
  SIGNAL fTap_addout_reg                  : signed(23 DOWNTO 0) := to_signed(16#000000#, 24);  -- sfix24
  SIGNAL fTap_coef_reg1                   : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL fTap_coef_reg2                   : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL fTap_preAdd_reg_next             : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL fTap_mult_reg_next               : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL fTap_addout_reg_next             : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL fTap_add_cast                    : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL fTap_add_cast_1                  : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL fTap_add_cast_2                  : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL sumOut_tmp                       : signed(23 DOWNTO 0);  -- sfix24_En20

BEGIN
  din_re_signed <= signed(din_re);

  preAddIn_signed <= signed(preAddIn);

  coeff_signed <= signed(coeff);

  sumIn_signed <= signed(sumIn);

  -- FilterTapSystolicPreAddS
  fTap_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        fTap_preAdd_reg <= fTap_preAdd_reg_next;
        fTap_mult_reg <= fTap_mult_reg_next;
        fTap_addout_reg <= fTap_addout_reg_next;
        fTap_din1_reg2 <= fTap_din1_reg1;
        fTap_din1_reg1 <= din_re_signed;
        fTap_din2_reg1 <= preAddIn_signed;
        fTap_coef_reg2 <= fTap_coef_reg1;
        fTap_coef_reg1 <= coeff_signed;
      END IF;
    END IF;
  END PROCESS fTap_process;

  sumOut_tmp <= fTap_addout_reg;
  fTap_add_cast <= fTap_mult_reg(23 DOWNTO 0);
  fTap_addout_reg_next <= fTap_add_cast + sumIn_signed;
  fTap_mult_reg_next <= fTap_preAdd_reg * fTap_coef_reg2;
  fTap_add_cast_1 <= resize(fTap_din1_reg2, 13);
  fTap_add_cast_2 <= resize(fTap_din2_reg1, 13);
  fTap_preAdd_reg_next <= fTap_add_cast_1 + fTap_add_cast_2;

  sumOut <= std_logic_vector(sumOut_tmp);

END rtl;

