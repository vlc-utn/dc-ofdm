-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLModulatorFull/full_ofdm_modulator_ip_src_RADIX22FFT_SDF1_3.vhd
-- Created: 2024-09-01 12:13:06
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: full_ofdm_modulator_ip_src_RADIX22FFT_SDF1_3
-- Source Path: HDLModulatorFull/full_ofdm_modulator/ofdm_modulator/OFDM Modulator/dsphdl.IFFT/RADIX22FFT_SDF1_3
-- Hierarchy Level: 4
-- Model version: 1.43
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.full_ofdm_modulator_ip_src_full_ofdm_modulator_pac.ALL;

ENTITY full_ofdm_modulator_ip_src_RADIX22FFT_SDF1_3 IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        din_3_1_re_dly                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        din_3_1_im_dly                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        din_3_vld_dly                     :   IN    std_logic;
        rd_3_Addr                         :   IN    std_logic_vector(4 DOWNTO 0);  -- ufix5
        rd_3_Enb                          :   IN    std_logic;
        twdl_3_1_re                       :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        twdl_3_1_im                       :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        proc_3_enb                        :   IN    std_logic;
        dout_3_1_re                       :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        dout_3_1_im                       :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        dout_3_1_vld                      :   OUT   std_logic;
        dinXTwdl_3_1_vld                  :   OUT   std_logic
        );
END full_ofdm_modulator_ip_src_RADIX22FFT_SDF1_3;


ARCHITECTURE rtl OF full_ofdm_modulator_ip_src_RADIX22FFT_SDF1_3 IS

  -- Component Declarations
  COMPONENT full_ofdm_modulator_ip_src_Complex4Multiply
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          din_3_1_re_dly                  :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          din_3_1_im_dly                  :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          din_3_vld_dly                   :   IN    std_logic;
          twdl_3_1_re                     :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          twdl_3_1_im                     :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          dinXTwdl_re                     :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          dinXTwdl_im                     :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          dinXTwdl_3_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT full_ofdm_modulator_ip_src_SimpleDualPortRAM_generic_block
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          wr_din                          :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          dout                            :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  COMPONENT full_ofdm_modulator_ip_src_SDFCommutator3
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          din_3_vld_dly                   :   IN    std_logic;
          xf_re                           :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          xf_im                           :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          xf_vld                          :   IN    std_logic;
          dinXTwdlf_re                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          dinXTwdlf_im                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          dinxTwdlf_vld                   :   IN    std_logic;
          btf1_re                         :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          btf1_im                         :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          btf2_re                         :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          btf2_im                         :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          btf_vld                         :   IN    std_logic;
          wrData_re                       :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          wrData_im                       :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          wrAddr                          :   OUT   std_logic_vector(4 DOWNTO 0);  -- ufix5
          wrEnb                           :   OUT   std_logic;
          dout_3_1_re                     :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          dout_3_1_im                     :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          dout_3_1_vld                    :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : full_ofdm_modulator_ip_src_Complex4Multiply
    USE ENTITY work.full_ofdm_modulator_ip_src_Complex4Multiply(rtl);

  FOR ALL : full_ofdm_modulator_ip_src_SimpleDualPortRAM_generic_block
    USE ENTITY work.full_ofdm_modulator_ip_src_SimpleDualPortRAM_generic_block(rtl);

  FOR ALL : full_ofdm_modulator_ip_src_SDFCommutator3
    USE ENTITY work.full_ofdm_modulator_ip_src_SDFCommutator3(rtl);

  -- Signals
  SIGNAL dinXTwdl_re                      : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL dinXTwdl_im                      : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL dinXTwdl_3_1_vld_1               : std_logic;
  SIGNAL dinXTwdl_re_signed               : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL dinXTwdl_im_signed               : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL x_vld                            : std_logic;
  SIGNAL btf2_im                          : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL btf2_re                          : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL btf1_im                          : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL btf1_re                          : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL dinXTwdlf_im                     : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL dinXTwdlf_re                     : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL xf_im                            : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL wrData_im                        : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL wrAddr                           : std_logic_vector(4 DOWNTO 0);  -- ufix5
  SIGNAL wrEnb                            : std_logic;
  SIGNAL x_im                             : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL x_im_signed                      : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL wrData_re                        : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL x_re                             : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL x_re_signed                      : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL Radix22ButterflyG1_btf1_re_reg   : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Radix22ButterflyG1_btf1_im_reg   : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Radix22ButterflyG1_btf2_re_reg   : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Radix22ButterflyG1_btf2_im_reg   : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Radix22ButterflyG1_x_re_dly1     : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Radix22ButterflyG1_x_im_dly1     : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Radix22ButterflyG1_x_vld_dly1    : std_logic;
  SIGNAL Radix22ButterflyG1_dinXtwdl_re_dly1 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Radix22ButterflyG1_dinXtwdl_im_dly1 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Radix22ButterflyG1_dinXtwdl_re_dly2 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Radix22ButterflyG1_dinXtwdl_im_dly2 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Radix22ButterflyG1_dinXtwdl_vld_dly1 : std_logic;
  SIGNAL Radix22ButterflyG1_dinXtwdl_vld_dly2 : std_logic;
  SIGNAL Radix22ButterflyG1_btf1_re_reg_next : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_btf1_im_reg_next : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_btf2_re_reg_next : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_btf2_im_reg_next : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_add_cast      : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_add_cast_1    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_sub_cast      : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_sub_cast_1    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_add_cast_2    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_add_cast_3    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_sub_cast_2    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_sub_cast_3    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_sra_temp      : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_sra_temp_1    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_sra_temp_2    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Radix22ButterflyG1_sra_temp_3    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL xf_re                            : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL xf_vld                           : std_logic;
  SIGNAL dinxTwdlf_vld                    : std_logic;
  SIGNAL btf_vld                          : std_logic;
  SIGNAL dout_3_1_re_tmp                  : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL dout_3_1_im_tmp                  : std_logic_vector(11 DOWNTO 0);  -- ufix12

BEGIN
  u_MUL4 : full_ofdm_modulator_ip_src_Complex4Multiply
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb_1_2_0 => enb_1_2_0,
              din_3_1_re_dly => din_3_1_re_dly,  -- sfix12_En10
              din_3_1_im_dly => din_3_1_im_dly,  -- sfix12_En10
              din_3_vld_dly => din_3_vld_dly,
              twdl_3_1_re => twdl_3_1_re,  -- sfix12_En10
              twdl_3_1_im => twdl_3_1_im,  -- sfix12_En10
              dinXTwdl_re => dinXTwdl_re,  -- sfix12_En10
              dinXTwdl_im => dinXTwdl_im,  -- sfix12_En10
              dinXTwdl_3_1_vld => dinXTwdl_3_1_vld_1
              );

  u_dataMEM_im_0_3 : full_ofdm_modulator_ip_src_SimpleDualPortRAM_generic_block
    GENERIC MAP( AddrWidth => 5,
                 DataWidth => 12
                 )
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              wr_din => wrData_im,
              wr_addr => wrAddr,
              wr_en => wrEnb,
              rd_addr => rd_3_Addr,
              dout => x_im
              );

  u_dataMEM_re_0_3 : full_ofdm_modulator_ip_src_SimpleDualPortRAM_generic_block
    GENERIC MAP( AddrWidth => 5,
                 DataWidth => 12
                 )
    PORT MAP( clk => clk,
              enb_1_2_0 => enb_1_2_0,
              wr_din => wrData_re,
              wr_addr => wrAddr,
              wr_en => wrEnb,
              rd_addr => rd_3_Addr,
              dout => x_re
              );

  u_SDFCOMMUTATOR_3 : full_ofdm_modulator_ip_src_SDFCommutator3
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb_1_2_0 => enb_1_2_0,
              din_3_vld_dly => din_3_vld_dly,
              xf_re => std_logic_vector(xf_re),  -- sfix12_En10
              xf_im => std_logic_vector(xf_im),  -- sfix12_En10
              xf_vld => xf_vld,
              dinXTwdlf_re => std_logic_vector(dinXTwdlf_re),  -- sfix12_En10
              dinXTwdlf_im => std_logic_vector(dinXTwdlf_im),  -- sfix12_En10
              dinxTwdlf_vld => dinxTwdlf_vld,
              btf1_re => std_logic_vector(btf1_re),  -- sfix12_En10
              btf1_im => std_logic_vector(btf1_im),  -- sfix12_En10
              btf2_re => std_logic_vector(btf2_re),  -- sfix12_En10
              btf2_im => std_logic_vector(btf2_im),  -- sfix12_En10
              btf_vld => btf_vld,
              wrData_re => wrData_re,  -- sfix12_En10
              wrData_im => wrData_im,  -- sfix12_En10
              wrAddr => wrAddr,  -- ufix5
              wrEnb => wrEnb,
              dout_3_1_re => dout_3_1_re_tmp,  -- sfix12_En10
              dout_3_1_im => dout_3_1_im_tmp,  -- sfix12_En10
              dout_3_1_vld => dout_3_1_vld
              );

  dinXTwdl_re_signed <= signed(dinXTwdl_re);

  dinXTwdl_im_signed <= signed(dinXTwdl_im);

  intdelay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        x_vld <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        x_vld <= rd_3_Enb;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  x_im_signed <= signed(x_im);

  x_re_signed <= signed(x_re);

  -- Radix22ButterflyG1
  Radix22ButterflyG1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Radix22ButterflyG1_btf1_re_reg <= to_signed(16#0000#, 13);
        Radix22ButterflyG1_btf1_im_reg <= to_signed(16#0000#, 13);
        Radix22ButterflyG1_btf2_re_reg <= to_signed(16#0000#, 13);
        Radix22ButterflyG1_btf2_im_reg <= to_signed(16#0000#, 13);
        Radix22ButterflyG1_x_re_dly1 <= to_signed(16#000#, 12);
        Radix22ButterflyG1_x_im_dly1 <= to_signed(16#000#, 12);
        Radix22ButterflyG1_x_vld_dly1 <= '0';
        xf_re <= to_signed(16#000#, 12);
        xf_im <= to_signed(16#000#, 12);
        xf_vld <= '0';
        Radix22ButterflyG1_dinXtwdl_re_dly1 <= to_signed(16#000#, 12);
        Radix22ButterflyG1_dinXtwdl_im_dly1 <= to_signed(16#000#, 12);
        Radix22ButterflyG1_dinXtwdl_re_dly2 <= to_signed(16#000#, 12);
        Radix22ButterflyG1_dinXtwdl_im_dly2 <= to_signed(16#000#, 12);
        Radix22ButterflyG1_dinXtwdl_vld_dly1 <= '0';
        Radix22ButterflyG1_dinXtwdl_vld_dly2 <= '0';
        btf_vld <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        Radix22ButterflyG1_btf1_re_reg <= Radix22ButterflyG1_btf1_re_reg_next;
        Radix22ButterflyG1_btf1_im_reg <= Radix22ButterflyG1_btf1_im_reg_next;
        Radix22ButterflyG1_btf2_re_reg <= Radix22ButterflyG1_btf2_re_reg_next;
        Radix22ButterflyG1_btf2_im_reg <= Radix22ButterflyG1_btf2_im_reg_next;
        xf_re <= Radix22ButterflyG1_x_re_dly1;
        xf_im <= Radix22ButterflyG1_x_im_dly1;
        xf_vld <= Radix22ButterflyG1_x_vld_dly1;
        btf_vld <= Radix22ButterflyG1_dinXtwdl_vld_dly2;
        Radix22ButterflyG1_dinXtwdl_vld_dly2 <= Radix22ButterflyG1_dinXtwdl_vld_dly1;
        Radix22ButterflyG1_dinXtwdl_re_dly2 <= Radix22ButterflyG1_dinXtwdl_re_dly1;
        Radix22ButterflyG1_dinXtwdl_im_dly2 <= Radix22ButterflyG1_dinXtwdl_im_dly1;
        Radix22ButterflyG1_dinXtwdl_re_dly1 <= dinXTwdl_re_signed;
        Radix22ButterflyG1_dinXtwdl_im_dly1 <= dinXTwdl_im_signed;
        Radix22ButterflyG1_x_re_dly1 <= x_re_signed;
        Radix22ButterflyG1_x_im_dly1 <= x_im_signed;
        Radix22ButterflyG1_x_vld_dly1 <= x_vld;
        Radix22ButterflyG1_dinXtwdl_vld_dly1 <= proc_3_enb AND dinXTwdl_3_1_vld_1;
      END IF;
    END IF;
  END PROCESS Radix22ButterflyG1_process;

  dinxTwdlf_vld <= ( NOT proc_3_enb) AND dinXTwdl_3_1_vld_1;
  Radix22ButterflyG1_add_cast <= resize(Radix22ButterflyG1_x_re_dly1, 13);
  Radix22ButterflyG1_add_cast_1 <= resize(Radix22ButterflyG1_dinXtwdl_re_dly2, 13);
  Radix22ButterflyG1_btf1_re_reg_next <= Radix22ButterflyG1_add_cast + Radix22ButterflyG1_add_cast_1;
  Radix22ButterflyG1_sub_cast <= resize(Radix22ButterflyG1_x_re_dly1, 13);
  Radix22ButterflyG1_sub_cast_1 <= resize(Radix22ButterflyG1_dinXtwdl_re_dly2, 13);
  Radix22ButterflyG1_btf2_re_reg_next <= Radix22ButterflyG1_sub_cast - Radix22ButterflyG1_sub_cast_1;
  Radix22ButterflyG1_add_cast_2 <= resize(Radix22ButterflyG1_x_im_dly1, 13);
  Radix22ButterflyG1_add_cast_3 <= resize(Radix22ButterflyG1_dinXtwdl_im_dly2, 13);
  Radix22ButterflyG1_btf1_im_reg_next <= Radix22ButterflyG1_add_cast_2 + Radix22ButterflyG1_add_cast_3;
  Radix22ButterflyG1_sub_cast_2 <= resize(Radix22ButterflyG1_x_im_dly1, 13);
  Radix22ButterflyG1_sub_cast_3 <= resize(Radix22ButterflyG1_dinXtwdl_im_dly2, 13);
  Radix22ButterflyG1_btf2_im_reg_next <= Radix22ButterflyG1_sub_cast_2 - Radix22ButterflyG1_sub_cast_3;
  dinXTwdlf_re <= dinXTwdl_re_signed;
  dinXTwdlf_im <= dinXTwdl_im_signed;
  Radix22ButterflyG1_sra_temp <= SHIFT_RIGHT(Radix22ButterflyG1_btf1_re_reg, 1);
  btf1_re <= Radix22ButterflyG1_sra_temp(11 DOWNTO 0);
  Radix22ButterflyG1_sra_temp_1 <= SHIFT_RIGHT(Radix22ButterflyG1_btf1_im_reg, 1);
  btf1_im <= Radix22ButterflyG1_sra_temp_1(11 DOWNTO 0);
  Radix22ButterflyG1_sra_temp_2 <= SHIFT_RIGHT(Radix22ButterflyG1_btf2_re_reg, 1);
  btf2_re <= Radix22ButterflyG1_sra_temp_2(11 DOWNTO 0);
  Radix22ButterflyG1_sra_temp_3 <= SHIFT_RIGHT(Radix22ButterflyG1_btf2_im_reg, 1);
  btf2_im <= Radix22ButterflyG1_sra_temp_3(11 DOWNTO 0);

  dout_3_1_re <= dout_3_1_re_tmp;

  dout_3_1_im <= dout_3_1_im_tmp;

  dinXTwdl_3_1_vld <= dinXTwdl_3_1_vld_1;

END rtl;

