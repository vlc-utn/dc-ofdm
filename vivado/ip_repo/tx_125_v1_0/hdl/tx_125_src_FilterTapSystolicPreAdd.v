// -------------------------------------------------------------
// 
// File Name: hdl_prj/hdlsrc/HDLTx/tx_125_src_FilterTapSystolicPreAdd.v
// Created: 2024-09-14 22:22:20
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: tx_125_src_FilterTapSystolicPreAdd
// Source Path: HDLTx/full_tx/full_ofdm_modulator/interpolator/FIR Interpolator/HDLTx/full_tx/full_ofdm_modulator/interpolator/FIR 
// Interpolator/FIRFilter1/FilterTapSystolicPreAd
// Hierarchy Level: 5
// Model version: 4.114
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module tx_125_src_FilterTapSystolicPreAdd
          (clk,
           reset_x,
           enb,
           din_re,
           preAddIn,
           coeff,
           sumIn,
           sumOut);


  input   clk;
  input   reset_x;
  input   enb;
  input   signed [15:0] din_re;  // sfix16_En14
  input   signed [15:0] preAddIn;  // sfix16_En14
  input   signed [15:0] coeff;  // sfix16_En12
  input   signed [28:0] sumIn;  // sfix29_En26
  output  signed [28:0] sumOut;  // sfix29_En26


  reg signed [15:0] fTap_din1_reg1;  // sfix16
  reg signed [15:0] fTap_din1_reg2;  // sfix16
  reg signed [15:0] fTap_din2_reg1;  // sfix16
  reg signed [16:0] fTap_preAdd_reg;  // sfix17
  reg signed [32:0] fTap_mult_reg;  // sfix33
  reg signed [28:0] fTap_addout_reg;  // sfix29
  reg signed [15:0] fTap_coef_reg1;  // sfix16
  reg signed [15:0] fTap_coef_reg2;  // sfix16
  wire signed [16:0] fTap_preAdd_reg_next;  // sfix17_En14
  wire signed [32:0] fTap_mult_reg_next;  // sfix33_En26
  wire signed [28:0] fTap_addout_reg_next;  // sfix29_En26
  wire signed [28:0] fTap_add_cast;  // sfix29_En26
  wire signed [16:0] fTap_add_cast_1;  // sfix17_En14
  wire signed [16:0] fTap_add_cast_2;  // sfix17_En14


  // FilterTapSystolicPreAddS
  always @(posedge clk)
    begin : fTap_process
      if (reset_x == 1'b1) begin
        fTap_din1_reg1 <= 16'sb0000000000000000;
        fTap_din1_reg2 <= 16'sb0000000000000000;
        fTap_din2_reg1 <= 16'sb0000000000000000;
        fTap_preAdd_reg <= 17'sb00000000000000000;
        fTap_coef_reg1 <= 16'sb0000000000000000;
        fTap_coef_reg2 <= 16'sb0000000000000000;
        fTap_mult_reg <= 33'sh000000000;
        fTap_addout_reg <= 29'sb00000000000000000000000000000;
      end
      else begin
        if (enb) begin
          fTap_preAdd_reg <= fTap_preAdd_reg_next;
          fTap_mult_reg <= fTap_mult_reg_next;
          fTap_addout_reg <= fTap_addout_reg_next;
          fTap_din1_reg2 <= fTap_din1_reg1;
          fTap_din1_reg1 <= din_re;
          fTap_din2_reg1 <= preAddIn;
          fTap_coef_reg2 <= fTap_coef_reg1;
          fTap_coef_reg1 <= coeff;
        end
      end
    end

  assign sumOut = fTap_addout_reg;
  assign fTap_add_cast = fTap_mult_reg[28:0];
  assign fTap_addout_reg_next = fTap_add_cast + sumIn;
  assign fTap_mult_reg_next = fTap_preAdd_reg * fTap_coef_reg2;
  assign fTap_add_cast_1 = {fTap_din1_reg2[15], fTap_din1_reg2};
  assign fTap_add_cast_2 = {fTap_din2_reg1[15], fTap_din2_reg1};
  assign fTap_preAdd_reg_next = fTap_add_cast_1 + fTap_add_cast_2;



endmodule  // tx_125_src_FilterTapSystolicPreAdd

