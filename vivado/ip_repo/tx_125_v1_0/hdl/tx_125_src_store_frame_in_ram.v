// -------------------------------------------------------------
// 
// File Name: hdl_prj/hdlsrc/HDLTx/tx_125_src_store_frame_in_ram.v
// Created: 2024-09-14 22:22:20
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: tx_125_src_store_frame_in_ram
// Source Path: HDLTx/full_tx/store_frame_in_ram
// Hierarchy Level: 1
// Model version: 4.114
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module tx_125_src_store_frame_in_ram
          (clk,
           reset_x,
           enb_1_2_0,
           preamble,
           preamble_valid,
           channel,
           channel_valid,
           header_0,
           header_1,
           header_valid,
           payload_0,
           payload_1,
           payload_valid,
           payload_len,
           bits_per_subcarrier,
           cp_len_in_0,
           cp_len_in_1,
           cp_len_in_2,
           ready,
           data_out,
           valid_out,
           bits_per_subcarrier_out,
           init_0,
           init_1,
           init_2,
           init_3,
           init_4,
           init_5,
           init_6,
           init_7,
           init_8,
           init_9,
           init_10,
           init_11,
           init_12,
           new_rsvd,
           cp_len);


  input   clk;
  input   reset_x;
  input   enb_1_2_0;
  input   preamble;
  input   preamble_valid;
  input   channel;
  input   channel_valid;
  input   header_0;  // boolean
  input   header_1;  // boolean
  input   header_valid;
  input   payload_0;  // boolean
  input   payload_1;  // boolean
  input   payload_valid;
  input   [15:0] payload_len;  // uint16
  input   [3:0] bits_per_subcarrier;  // ufix4
  input   cp_len_in_0;  // boolean
  input   cp_len_in_1;  // boolean
  input   cp_len_in_2;  // boolean
  input   ready;
  output  [11:0] data_out;  // ufix12
  output  valid_out;
  output  [3:0] bits_per_subcarrier_out;  // ufix4
  output  init_0;  // boolean
  output  init_1;  // boolean
  output  init_2;  // boolean
  output  init_3;  // boolean
  output  init_4;  // boolean
  output  init_5;  // boolean
  output  init_6;  // boolean
  output  init_7;  // boolean
  output  init_8;  // boolean
  output  init_9;  // boolean
  output  init_10;  // boolean
  output  init_11;  // boolean
  output  init_12;  // boolean
  output  new_rsvd;
  output  [7:0] cp_len;  // uint8


  wire stateControl_1;
  reg  stateControl_2;
  wire enb_1_2_0_gated;
  reg  Delay_out1;
  wire stateControl_3;
  reg  stateControl_4;
  wire enb_1_2_0_gated_1;
  wire [11:0] new_din;  // ufix12
  wire [15:0] new_wr_addr;  // uint16
  wire new_we;
  wire write_frame_to_ram_out4;
  wire [24:0] write_frame_to_ram_out5;  // ufix25
  wire [15:0] new_rd_addr;  // uint16
  wire valid_new;
  wire [3:0] read_frame_from_ram_out3;  // ufix4
  wire read_frame_from_ram_out4_0;
  wire read_frame_from_ram_out4_1;
  wire read_frame_from_ram_out4_2;
  wire read_frame_from_ram_out4_3;
  wire read_frame_from_ram_out4_4;
  wire read_frame_from_ram_out4_5;
  wire read_frame_from_ram_out4_6;
  wire read_frame_from_ram_out4_7;
  wire read_frame_from_ram_out4_8;
  wire read_frame_from_ram_out4_9;
  wire read_frame_from_ram_out4_10;
  wire read_frame_from_ram_out4_11;
  wire read_frame_from_ram_out4_12;
  wire new_new;
  wire [7:0] read_frame_from_ram_out6;  // uint8
  wire [11:0] dout_new;  // ufix12
  wire [11:0] dout_magic;  // ufix12
  reg [11:0] Unit_Delay1_out1;  // ufix12


  assign stateControl_1 = 1'b1;



  always @(posedge clk)
    begin : delayMatch_process
      if (reset_x == 1'b1) begin
        stateControl_2 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          stateControl_2 <= stateControl_1;
        end
      end
    end



  assign enb_1_2_0_gated = stateControl_2 && enb_1_2_0;

  always @(posedge clk)
    begin : Delay_process
      if (reset_x == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0_gated) begin
          Delay_out1 <= ready;
        end
      end
    end



  assign stateControl_3 = 1'b1;



  always @(posedge clk)
    begin : delayMatch1_process
      if (reset_x == 1'b1) begin
        stateControl_4 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          stateControl_4 <= stateControl_3;
        end
      end
    end



  assign enb_1_2_0_gated_1 = stateControl_4 && enb_1_2_0;

  tx_125_src_write_frame_to_ram u_write_frame_to_ram (.clk(clk),
                                                      .reset_x(reset_x),
                                                      .enb_1_2_0(enb_1_2_0),
                                                      .preamble(preamble),
                                                      .preamble_valid(preamble_valid),
                                                      .channel(channel),
                                                      .channel_valid(channel_valid),
                                                      .header_0(header_0),  // boolean
                                                      .header_1(header_1),  // boolean
                                                      .header_valid(header_valid),
                                                      .payload_0(payload_0),  // boolean
                                                      .payload_1(payload_1),  // boolean
                                                      .payload_valid(payload_valid),
                                                      .payload_len(payload_len),  // uint16
                                                      .write_data(new_din),  // ufix12
                                                      .wr_addr(new_wr_addr),  // uint16
                                                      .we(new_we),
                                                      .end_rsvd(write_frame_to_ram_out4),
                                                      .ram_size(write_frame_to_ram_out5)  // ufix25
                                                      );

  tx_125_src_read_frame_from_ram u_read_frame_from_ram (.clk(clk),
                                                        .reset_x(reset_x),
                                                        .enb_1_2_0(enb_1_2_0),
                                                        .start_reading(write_frame_to_ram_out4),
                                                        .ram_size(write_frame_to_ram_out5),  // ufix25
                                                        .bits_per_subcarrier(bits_per_subcarrier),  // ufix4
                                                        .cp_len_in_0(cp_len_in_0),  // boolean
                                                        .cp_len_in_1(cp_len_in_1),  // boolean
                                                        .cp_len_in_2(cp_len_in_2),  // boolean
                                                        .Enable(ready),
                                                        .rd_addr(new_rd_addr),  // uint16
                                                        .valid_out(valid_new),
                                                        .bits_per_subcarrier_out(read_frame_from_ram_out3),  // ufix4
                                                        .init_0(read_frame_from_ram_out4_0),  // boolean
                                                        .init_1(read_frame_from_ram_out4_1),  // boolean
                                                        .init_2(read_frame_from_ram_out4_2),  // boolean
                                                        .init_3(read_frame_from_ram_out4_3),  // boolean
                                                        .init_4(read_frame_from_ram_out4_4),  // boolean
                                                        .init_5(read_frame_from_ram_out4_5),  // boolean
                                                        .init_6(read_frame_from_ram_out4_6),  // boolean
                                                        .init_7(read_frame_from_ram_out4_7),  // boolean
                                                        .init_8(read_frame_from_ram_out4_8),  // boolean
                                                        .init_9(read_frame_from_ram_out4_9),  // boolean
                                                        .init_10(read_frame_from_ram_out4_10),  // boolean
                                                        .init_11(read_frame_from_ram_out4_11),  // boolean
                                                        .init_12(read_frame_from_ram_out4_12),  // boolean
                                                        .new_rsvd(new_new),
                                                        .cp_len(read_frame_from_ram_out6)  // uint8
                                                        );

  tx_125_src_RAM u_RAM (.clk(clk),
                        .enb_1_2_0(enb_1_2_0),
                        .new_din(new_din),  // ufix12
                        .new_wr_addr(new_wr_addr),  // uint16
                        .new_we(new_we),
                        .new_rd_addr(new_rd_addr),  // uint16
                        .dout_new(dout_new)  // ufix12
                        );

  always @(posedge clk)
    begin : Unit_Delay1_process
      if (reset_x == 1'b1) begin
        Unit_Delay1_out1 <= 12'b000000000000;
      end
      else begin
        if (enb_1_2_0_gated_1) begin
          Unit_Delay1_out1 <= dout_magic;
        end
      end
    end



  assign dout_magic = (Delay_out1 == 1'b0 ? Unit_Delay1_out1 :
              dout_new);



  assign data_out = dout_magic;

  assign valid_out = valid_new;

  assign bits_per_subcarrier_out = read_frame_from_ram_out3;

  assign init_0 = read_frame_from_ram_out4_0;

  assign init_1 = read_frame_from_ram_out4_1;

  assign init_2 = read_frame_from_ram_out4_2;

  assign init_3 = read_frame_from_ram_out4_3;

  assign init_4 = read_frame_from_ram_out4_4;

  assign init_5 = read_frame_from_ram_out4_5;

  assign init_6 = read_frame_from_ram_out4_6;

  assign init_7 = read_frame_from_ram_out4_7;

  assign init_8 = read_frame_from_ram_out4_8;

  assign init_9 = read_frame_from_ram_out4_9;

  assign init_10 = read_frame_from_ram_out4_10;

  assign init_11 = read_frame_from_ram_out4_11;

  assign init_12 = read_frame_from_ram_out4_12;

  assign new_rsvd = new_new;

  assign cp_len = read_frame_from_ram_out6;

endmodule  // tx_125_src_store_frame_in_ram

