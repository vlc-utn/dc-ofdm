// -------------------------------------------------------------
// 
// File Name: hdl_prj/hdlsrc/HDLTx/tx_125_src_FirRdyLogic_block.v
// Created: 2024-09-14 22:22:20
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: tx_125_src_FirRdyLogic_block
// Source Path: HDLTx/full_tx/full_ofdm_modulator/interpolator/FIR Interpolator/HDLTx/full_tx/full_ofdm_modulator/interpolator/FIR 
// Interpolator/FIRFilter2/FirRdyLogi
// Hierarchy Level: 5
// Model version: 4.114
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module tx_125_src_FirRdyLogic_block
          (clk,
           reset_x,
           enb,
           dinSwitch_re,
           dinSwitch_im,
           dinVldSwitch,
           coeff_re,
           coeff_im,
           haltProcess,
           dinSM_re,
           dinSM_im,
           dinVldSM);


  input   clk;
  input   reset_x;
  input   enb;
  input   signed [15:0] dinSwitch_re;  // sfix16_En14
  input   signed [15:0] dinSwitch_im;  // sfix16_En14
  input   dinVldSwitch;
  input   signed [15:0] coeff_re;  // sfix16_En14
  input   signed [15:0] coeff_im;  // sfix16_En14
  input   haltProcess;
  output  signed [15:0] dinSM_re;  // sfix16_En14
  output  signed [15:0] dinSM_im;  // sfix16_En14
  output  dinVldSM;


  wire syncReset;
  reg signed [15:0] firRdy_xdin_re;  // sfix16_En14
  reg signed [15:0] firRdy_xdin_im;  // sfix16_En14
  reg  firRdy_xdinVld;
  reg [2:0] firRdy_state;  // ufix3
  reg  firRdy_readyReg;
  reg  firRdy_count;  // ufix1
  reg signed [15:0] firRdy_xcoeffin_re;  // sfix16_En14
  reg signed [15:0] firRdy_xcoeffin_im;  // sfix16_En14
  reg signed [15:0] firRdy_xdin_next_re;  // sfix16_En14
  reg signed [15:0] firRdy_xdin_next_im;  // sfix16_En14
  reg  firRdy_xdinVld_next;
  reg [2:0] firRdy_state_next;  // ufix3
  reg  firRdy_readyReg_next;
  reg  firRdy_count_next;  // ufix1
  reg signed [15:0] firRdy_xcoeffin_next_re;  // sfix16_En14
  reg signed [15:0] firRdy_xcoeffin_next_im;  // sfix16_En14
  reg  readySM;
  reg signed [15:0] dinSM_re_1;  // sfix16_En14
  reg signed [15:0] dinSM_im_1;  // sfix16_En14
  reg  dinVldSM_1;
  reg signed [15:0] coeffS_re;  // sfix16_En14
  reg signed [15:0] coeffS_im;  // sfix16_En14
  reg  firRdy_out2_0;
  reg [1:0] firRdy_add_temp;  // ufix2
  reg [1:0] firRdy_t_0_0;  // ufix2


  assign syncReset = 1'b0;



  // rdyLogic
  always @(posedge clk)
    begin : firRdy_process
      if (reset_x == 1'b1) begin
        firRdy_state <= 3'b000;
        firRdy_xdin_re <= 16'sb0000000000000000;
        firRdy_xdin_im <= 16'sb0000000000000000;
        firRdy_xdinVld <= 1'b0;
        firRdy_xcoeffin_re <= 16'sb0000000000000000;
        firRdy_xcoeffin_im <= 16'sb0000000000000000;
        firRdy_readyReg <= 1'b1;
        firRdy_count <= 1'b0;
      end
      else begin
        if (enb) begin
          firRdy_xdin_re <= firRdy_xdin_next_re;
          firRdy_xdin_im <= firRdy_xdin_next_im;
          firRdy_xdinVld <= firRdy_xdinVld_next;
          firRdy_state <= firRdy_state_next;
          firRdy_readyReg <= firRdy_readyReg_next;
          firRdy_count <= firRdy_count_next;
          firRdy_xcoeffin_re <= firRdy_xcoeffin_next_re;
          firRdy_xcoeffin_im <= firRdy_xcoeffin_next_im;
        end
      end
    end

  always @(coeff_im, coeff_re, dinSwitch_im, dinSwitch_re, dinVldSwitch, firRdy_count,
       firRdy_readyReg, firRdy_state, firRdy_xcoeffin_im, firRdy_xcoeffin_re,
       firRdy_xdinVld, firRdy_xdin_im, firRdy_xdin_re, haltProcess, syncReset) begin
    firRdy_add_temp = 2'b00;
    firRdy_t_0_0 = 2'b00;
    firRdy_xdin_next_re = firRdy_xdin_re;
    firRdy_xdin_next_im = firRdy_xdin_im;
    firRdy_xdinVld_next = firRdy_xdinVld;
    firRdy_readyReg_next = firRdy_readyReg;
    firRdy_count_next = firRdy_count;
    firRdy_xcoeffin_next_re = firRdy_xcoeffin_re;
    firRdy_xcoeffin_next_im = firRdy_xcoeffin_im;
    if (( ! haltProcess) && ( ! syncReset)) begin
      case ( firRdy_state)
        3'b000 :
          begin
            dinSM_re_1 = dinSwitch_re;
            dinSM_im_1 = dinSwitch_im;
            firRdy_out2_0 = dinVldSwitch;
            coeffS_re = coeff_re;
            coeffS_im = coeff_im;
            firRdy_state_next = 3'b000;
            firRdy_readyReg_next = 1'b1;
            firRdy_xdin_next_re = 16'sb0000000000000000;
            firRdy_xdin_next_im = 16'sb0000000000000000;
            firRdy_xdinVld_next = 1'b0;
            firRdy_xcoeffin_next_re = 16'sb0000000000000000;
            firRdy_xcoeffin_next_im = 16'sb0000000000000000;
            if (dinVldSwitch) begin
              firRdy_state_next = 3'b001;
              firRdy_readyReg_next = 1'b0;
            end
          end
        3'b001 :
          begin
            dinSM_re_1 = 16'sb0000000000000000;
            dinSM_im_1 = 16'sb0000000000000000;
            firRdy_out2_0 = 1'b0;
            coeffS_re = 16'sb0000000000000000;
            coeffS_im = 16'sb0000000000000000;
            if (dinVldSwitch) begin
              firRdy_state_next = 3'b100;
              firRdy_xdin_next_re = dinSwitch_re;
              firRdy_xdin_next_im = dinSwitch_im;
              firRdy_xdinVld_next = 1'b1;
              firRdy_xcoeffin_next_re = coeff_re;
              firRdy_xcoeffin_next_im = coeff_im;
            end
            else begin
              firRdy_readyReg_next = 1'b1;
              firRdy_state_next = 3'b000;
              dinSM_re_1 = dinSwitch_re;
              dinSM_im_1 = dinSwitch_im;
            end
          end
        3'b010 :
          begin
            dinSM_re_1 = 16'sb0000000000000000;
            dinSM_im_1 = 16'sb0000000000000000;
            firRdy_out2_0 = 1'b0;
            coeffS_re = 16'sb0000000000000000;
            coeffS_im = 16'sb0000000000000000;
            firRdy_state_next = 3'b010;
            if (firRdy_count == 1'b0) begin
              firRdy_state_next = 3'b100;
            end
            firRdy_readyReg_next = 1'b0;
          end
        3'b011 :
          begin
            firRdy_readyReg_next = 1'b1;
            firRdy_state_next = 3'b000;
            dinSM_re_1 = 16'sb0000000000000000;
            dinSM_im_1 = 16'sb0000000000000000;
            coeffS_re = 16'sb0000000000000000;
            coeffS_im = 16'sb0000000000000000;
            firRdy_out2_0 = 1'b0;
          end
        3'b100 :
          begin
            firRdy_state_next = 3'b011;
            dinSM_re_1 = firRdy_xdin_re;
            dinSM_im_1 = firRdy_xdin_im;
            firRdy_out2_0 = firRdy_xdinVld;
            coeffS_re = firRdy_xcoeffin_re;
            coeffS_im = firRdy_xcoeffin_im;
            firRdy_xdin_next_re = dinSwitch_re;
            firRdy_xdin_next_im = dinSwitch_im;
            firRdy_xdinVld_next = dinVldSwitch;
            firRdy_xcoeffin_next_re = coeff_re;
            firRdy_xcoeffin_next_im = coeff_im;
          end
        default :
          begin
            dinSM_re_1 = 16'sb0000000000000000;
            dinSM_im_1 = 16'sb0000000000000000;
            firRdy_out2_0 = 1'b0;
            coeffS_re = 16'sb0000000000000000;
            coeffS_im = 16'sb0000000000000000;
            firRdy_state_next = 3'b000;
            firRdy_xdin_next_re = 16'sb0000000000000000;
            firRdy_xdin_next_im = 16'sb0000000000000000;
            firRdy_xdinVld_next = 1'b0;
            firRdy_xcoeffin_next_re = 16'sb0000000000000000;
            firRdy_xcoeffin_next_im = 16'sb0000000000000000;
            firRdy_readyReg_next = 1'b1;
          end
      endcase
    end
    else begin
      firRdy_state_next = 3'b000;
      firRdy_xdin_next_re = 16'sb0000000000000000;
      firRdy_xdin_next_im = 16'sb0000000000000000;
      firRdy_xcoeffin_next_re = 16'sb0000000000000000;
      firRdy_xcoeffin_next_im = 16'sb0000000000000000;
      firRdy_xdinVld_next = 1'b0;
      firRdy_readyReg_next = 1'b0;
      dinSM_re_1 = 16'sb0000000000000000;
      dinSM_im_1 = 16'sb0000000000000000;
      firRdy_out2_0 = 1'b0;
      coeffS_re = 16'sb0000000000000000;
      coeffS_im = 16'sb0000000000000000;
    end
    if ((dinVldSwitch || (firRdy_count > 1'b0)) || firRdy_out2_0) begin
      if ((( ~ firRdy_count) || haltProcess) || syncReset) begin
        firRdy_count_next = 1'b0;
      end
      else begin
        firRdy_t_0_0 = {1'b0, firRdy_count};
        firRdy_add_temp = firRdy_t_0_0 + 2'b01;
        firRdy_count_next = firRdy_add_temp[0];
      end
    end
    readySM = firRdy_readyReg;
    dinVldSM_1 = firRdy_out2_0;
  end



  assign dinSM_re = dinSM_re_1;

  assign dinSM_im = dinSM_im_1;

  assign dinVldSM = dinVldSM_1;

endmodule  // tx_125_src_FirRdyLogic_block

