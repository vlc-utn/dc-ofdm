// -------------------------------------------------------------
// 
// File Name: hdl_prj/hdlsrc/HDLTx/tx_125_src_falling_edge_detector.v
// Created: 2024-09-14 22:22:20
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: tx_125_src_falling_edge_detector
// Source Path: HDLTx/full_tx/full_ofdm_modulator/interpolator/falling_edge_detector
// Hierarchy Level: 3
// Model version: 4.114
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module tx_125_src_falling_edge_detector
          (clk,
           reset_x,
           enb,
           in,
           out);


  input   clk;
  input   reset_x;
  input   enb;
  input   in;
  output  out;


  wire Logical_Operator1_out1;
  wire stateControl_1;
  reg  [1:0] delayMatch_reg;  // ufix1 [2]
  wire stateControl_2;
  wire enb_gated;
  reg  Delay_out1;
  wire Logical_Operator_out1;


  assign Logical_Operator1_out1 =  ~ in;



  assign stateControl_1 = 1'b1;



  always @(posedge clk)
    begin : delayMatch_process
      if (reset_x == 1'b1) begin
        delayMatch_reg <= {2{1'b0}};
      end
      else begin
        if (enb) begin
          delayMatch_reg[0] <= stateControl_1;
          delayMatch_reg[1] <= delayMatch_reg[0];
        end
      end
    end

  assign stateControl_2 = delayMatch_reg[1];



  assign enb_gated = stateControl_2 && enb;

  always @(posedge clk)
    begin : Delay_process
      if (reset_x == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb_gated) begin
          Delay_out1 <= in;
        end
      end
    end



  assign Logical_Operator_out1 = Logical_Operator1_out1 & Delay_out1;



  assign out = Logical_Operator_out1;

endmodule  // tx_125_src_falling_edge_detector

