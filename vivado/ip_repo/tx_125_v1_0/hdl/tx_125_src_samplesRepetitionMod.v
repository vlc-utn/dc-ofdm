// -------------------------------------------------------------
// 
// File Name: hdl_prj/hdlsrc/HDLTx/tx_125_src_samplesRepetitionMod.v
// Created: 2024-09-14 22:22:20
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: tx_125_src_samplesRepetitionMod
// Source Path: 
// Hierarchy Level: 4
// Model version: 4.114
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module tx_125_src_samplesRepetitionMod
          (clk,
           reset_x,
           enb_1_2_0,
           varargin_1_re,
           varargin_1_im,
           varargin_2,
           varargin_3,
           varargin_4,
           varargout_1_re,
           varargout_1_im,
           varargout_2,
           varargout_3,
           varargout_4);


  input   clk;
  input   reset_x;
  input   enb_1_2_0;
  input   signed [15:0] varargin_1_re;  // sfix16_En14
  input   signed [15:0] varargin_1_im;  // sfix16_En14
  input   varargin_2;
  input   [13:0] varargin_3;  // ufix14
  input   [13:0] varargin_4;  // ufix14
  output  signed [15:0] varargout_1_re;  // sfix16_En14
  output  signed [15:0] varargout_1_im;  // sfix16_En14
  output  varargout_2;
  output  [8:0] varargout_3;  // ufix9
  output  [8:0] varargout_4;  // ufix9


  wire obj_samplesRepetitionObj_resetSig;
  reg  obj_samplesRepetitionObj_resetSig_1;
  wire tmp;
  wire [8:0] obj_samplesRepetitionObj_FFTLenReg;  // ufix9
  wire [8:0] obj_samplesRepetitionObj_FFTLenReg_1;  // ufix9
  wire [8:0] tmp_1;  // ufix9
  reg [8:0] obj_samplesRepetitionObj_FFTLenReg_2;  // ufix9
  wire s;
  wire obj_samplesRepetitionObj_ctrl;
  wire obj_samplesRepetitionObj_validInReg;
  wire tmp_2;
  reg  obj_samplesRepetitionObj_validInReg_1;
  wire tmp_3;
  wire tmp_4;
  reg  obj_samplesRepetitionObj_ctrl_1;
  wire [8:0] obj_samplesRepetitionObj_currFFTLength;  // ufix9
  wire [8:0] tmp_5;  // ufix9
  wire [8:0] obj_samplesRepetitionObj_inCount;  // ufix9
  wire [8:0] obj_samplesRepetitionObj_inCount_1;  // ufix9
  reg [8:0] obj_samplesRepetitionObj_inCount_2;  // ufix9
  wire [8:0] tmp_6;  // ufix9
  wire [8:0] tmp_7;  // ufix9
  wire [8:0] tmp_8;  // ufix9
  reg [8:0] obj_samplesRepetitionObj_currFFTLength_1;  // ufix9
  wire s_1;
  wire a0;
  wire [8:0] tmp_9;  // ufix9
  wire [8:0] tmp_10;  // ufix9
  wire [8:0] tmp_11;  // ufix9
  wire a0_1;
  wire obj_samplesRepetitionObj_flag;
  wire a0_2;
  wire obj_samplesRepetitionObj_flag_1;
  wire obj_samplesRepetitionObj_flag_2;
  reg  obj_samplesRepetitionObj_flag_3;
  wire tmp_12;
  wire tmp_13;
  wire tmp_14;
  wire tmp_15;
  wire tmp_16;
  wire tmp_17;
  wire obj_samplesRepetitionObj_sym2Done;
  wire obj_samplesRepetitionObj_sym2Done_1;
  wire obj_samplesRepetitionObj_sym2Done_2;
  wire obj_samplesRepetitionObj_startRead2;
  wire obj_samplesRepetitionObj_startRead2_1;
  wire obj_samplesRepetitionObj_startRead2_2;
  wire [8:0] obj_samplesRepetitionObj_outCount;  // ufix9
  wire [8:0] obj_samplesRepetitionObj_outCount_1;  // ufix9
  wire [8:0] obj_samplesRepetitionObj_outCount_2;  // ufix9
  wire obj_samplesRepetitionObj_startRead2_3;
  wire obj_samplesRepetitionObj_sym1Done;
  wire obj_samplesRepetitionObj_sym1Done_1;
  wire obj_samplesRepetitionObj_sym1Done_2;
  wire obj_samplesRepetitionObj_startRead1;
  wire obj_samplesRepetitionObj_startRead1_1;
  wire obj_samplesRepetitionObj_startRead1_2;
  wire obj_samplesRepetitionObj_startRead1_3;
  wire tmp_18;
  wire tmp_19;
  wire s_2;
  reg  obj_samplesRepetitionObj_startRead1_4;
  wire tmp_20;
  wire s_3;
  wire tmp_21;
  wire tmp_22;
  wire tmp_23;
  reg [8:0] obj_samplesRepetitionObj_outCount_3;  // ufix9
  wire [8:0] tmp_24;  // ufix9
  wire [9:0] p355_1;  // ufix10
  wire [8:0] tmp_25;  // ufix9
  wire [8:0] tmp_26;  // ufix9
  wire s_4;
  wire [8:0] tmp_27;  // ufix9
  wire s_5;
  wire [8:0] tmp_28;  // ufix9
  wire [8:0] tmp_29;  // ufix9
  wire [8:0] tmp_30;  // ufix9
  wire [9:0] p342_1;  // ufix10
  reg  obj_samplesRepetitionObj_startRead2_4;
  wire tmp_31;
  wire tmp_32;
  wire tmp_33;
  wire tmp_34;
  wire tmp_35;
  wire tmp_36;
  wire tmp_37;
  reg  obj_samplesRepetitionObj_sym2Done_3;
  wire tmp_38;
  wire tmp_39;
  wire tmp_40;
  wire tmp_41;
  wire tmp_42;
  reg  obj_samplesRepetitionObj_sym1Done_3;
  wire tmp_43;
  wire tmp_44;
  wire tmp_45;
  wire tmp_46;
  wire tmp_47;
  wire obj_samplesRepetitionObj_strtRd1Reg;
  wire tmp_48;
  reg  obj_samplesRepetitionObj_strtRd1Reg_1;
  wire obj_samplesRepetitionObj_strtRd1Reg1;
  wire tmp_49;
  reg  obj_samplesRepetitionObj_strtRd1Reg1_1;
  wire obj_samplesRepetitionObj_strtRd2Reg;
  wire tmp_50;
  reg  obj_samplesRepetitionObj_strtRd2Reg_1;
  wire obj_samplesRepetitionObj_strtRd2Reg1;
  wire tmp_51;
  reg  obj_samplesRepetitionObj_strtRd2Reg1_1;
  wire s_6;
  wire s_7;
  wire signed [15:0] obj_samplesRepetitionObj_dataOutReg_re;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataOutReg_im;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataInReg_re;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataInReg_im;  // sfix16_En14
  wire signed [15:0] tmp_re;  // sfix16_En14
  wire signed [15:0] tmp_im;  // sfix16_En14
  reg signed [15:0] obj_samplesRepetitionObj_dataInReg_re_1;  // sfix16_En14
  reg signed [15:0] obj_samplesRepetitionObj_dataInReg_im_1;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataInReg1_re;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataInReg1_im;  // sfix16_En14
  wire signed [15:0] tmp_re_1;  // sfix16_En14
  wire signed [15:0] tmp_im_1;  // sfix16_En14
  reg signed [15:0] obj_samplesRepetitionObj_dataInReg1_re_1;  // sfix16_En14
  reg signed [15:0] obj_samplesRepetitionObj_dataInReg1_im_1;  // sfix16_En14
  wire [9:0] obj_samplesRepetitionObj_wrAddr2;  // ufix10
  wire [9:0] obj_samplesRepetitionObj_wrAddr2_1;  // ufix10
  reg [9:0] obj_samplesRepetitionObj_wrAddr2_2;  // ufix10
  wire [9:0] tmp_52;  // ufix10
  wire [9:0] tmp_53;  // ufix10
  wire [9:0] tmp_54;  // ufix10
  wire [9:0] tmp_55;  // ufix10
  wire [9:0] tmp_56;  // ufix10
  wire s_8;
  wire out;
  wire out_1;
  wire tmp_57;
  wire obj_samplesRepetitionObj_wrEn2;
  reg  obj_samplesRepetitionObj_wrEn2_1;
  wire tmp_58;
  wire tmp_59;
  wire s_9;
  wire tmp_60;
  wire [8:0] obj_samplesRepetitionObj_prevFFTLength;  // ufix9
  reg [8:0] obj_samplesRepetitionObj_prevFFTLength_1;  // ufix9
  wire [8:0] tmp_61;  // ufix9
  wire [8:0] tmp_62;  // ufix9
  wire [8:0] tmp_63;  // ufix9
  wire [9:0] obj_samplesRepetitionObj_rdAddr2;  // ufix10
  wire [9:0] obj_samplesRepetitionObj_rdAddr2_1;  // ufix10
  wire [9:0] obj_samplesRepetitionObj_rdAddr2_2;  // ufix10
  wire [9:0] tmp_64;  // ufix10
  wire [9:0] tmp_65;  // ufix10
  reg [9:0] obj_samplesRepetitionObj_rdAddr2_3;  // ufix10
  wire [9:0] tmp_66;  // ufix10
  wire s_10;
  wire [9:0] p334_1;  // ufix10
  wire [9:0] tmp_67;  // ufix10
  wire [9:0] tmp_68;  // ufix10
  wire [9:0] tmp_69;  // ufix10
  wire [9:0] tmp_70;  // ufix10
  wire signed [15:0] varargout_1_re_1;  // sfix16_En14
  wire signed [15:0] varargout_1_im_1;  // sfix16_En14
  wire signed [15:0] tmp_re_2;  // sfix16_En14
  wire signed [15:0] tmp_im_2;  // sfix16_En14
  wire [9:0] obj_samplesRepetitionObj_wrAddr1;  // ufix10
  wire [9:0] obj_samplesRepetitionObj_wrAddr1_1;  // ufix10
  reg [9:0] obj_samplesRepetitionObj_wrAddr1_2;  // ufix10
  wire [9:0] tmp_71;  // ufix10
  wire [9:0] tmp_72;  // ufix10
  wire [9:0] tmp_73;  // ufix10
  wire [9:0] tmp_74;  // ufix10
  wire [9:0] tmp_75;  // ufix10
  wire s_11;
  wire out_2;
  wire out_3;
  wire tmp_76;
  wire obj_samplesRepetitionObj_wrEn1;
  reg  obj_samplesRepetitionObj_wrEn1_1;
  wire tmp_77;
  wire tmp_78;
  wire [9:0] obj_samplesRepetitionObj_rdAddr1;  // ufix10
  wire [9:0] obj_samplesRepetitionObj_rdAddr1_1;  // ufix10
  wire [9:0] obj_samplesRepetitionObj_rdAddr1_2;  // ufix10
  wire [9:0] tmp_79;  // ufix10
  wire [9:0] tmp_80;  // ufix10
  reg [9:0] obj_samplesRepetitionObj_rdAddr1_3;  // ufix10
  wire [9:0] tmp_81;  // ufix10
  wire s_12;
  wire [9:0] p347_1;  // ufix10
  wire [9:0] tmp_82;  // ufix10
  wire [9:0] tmp_83;  // ufix10
  wire [9:0] tmp_84;  // ufix10
  wire signed [15:0] varargout_1_re_2;  // sfix16_En14
  wire signed [15:0] varargout_1_im_2;  // sfix16_En14
  wire signed [15:0] tmp_re_3;  // sfix16_En14
  wire signed [15:0] tmp_im_3;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataOutReg_re_1;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataOutReg_im_1;  // sfix16_En14
  wire signed [15:0] tmp_re_4;  // sfix16_En14
  wire signed [15:0] tmp_im_4;  // sfix16_En14
  reg signed [15:0] obj_samplesRepetitionObj_dataOutReg_re_2;  // sfix16_En14
  reg signed [15:0] obj_samplesRepetitionObj_dataOutReg_im_2;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataOut_re;  // sfix16_En14
  wire signed [15:0] obj_samplesRepetitionObj_dataOut_im;  // sfix16_En14
  wire signed [15:0] tmp_re_5;  // sfix16_En14
  wire signed [15:0] tmp_im_5;  // sfix16_En14
  reg signed [15:0] obj_samplesRepetitionObj_dataOut_re_1;  // sfix16_En14
  reg signed [15:0] obj_samplesRepetitionObj_dataOut_im_1;  // sfix16_En14
  wire obj_samplesRepetitionObj_validOutReg;
  wire obj_samplesRepetitionObj_validOutReg_1;
  wire tmp_85;
  wire obj_samplesRepetitionObj_validOutReg_2;
  wire tmp_86;
  wire obj_samplesRepetitionObj_validOutReg_3;
  wire tmp_87;
  reg  obj_samplesRepetitionObj_validOutReg_4;
  wire obj_samplesRepetitionObj_validOutReg1;
  wire tmp_88;
  reg  obj_samplesRepetitionObj_validOutReg1_1;
  wire obj_samplesRepetitionObj_validOutReg2;
  wire tmp_89;
  reg  obj_samplesRepetitionObj_validOutReg2_1;
  wire obj_samplesRepetitionObj_validOut;
  wire tmp_90;
  reg  obj_samplesRepetitionObj_validOut_1;
  wire [8:0] obj_samplesRepetitionObj_FFTLengthReg;  // ufix9
  reg [8:0] obj_samplesRepetitionObj_FFTLengthReg_1;  // ufix9
  wire [8:0] tmp_91;  // ufix9
  wire [8:0] tmp_92;  // ufix9
  wire [8:0] obj_samplesRepetitionObj_FFTLengthRegOut;  // ufix9
  reg [8:0] obj_samplesRepetitionObj_FFTLengthRegOut_1;  // ufix9
  wire [8:0] tmp_93;  // ufix9
  wire [8:0] tmp_94;  // ufix9
  wire [8:0] tmp_95;  // ufix9
  wire [8:0] tmp_96;  // ufix9
  wire [8:0] obj_samplesRepetitionObj_CPLengthReg;  // ufix9
  reg [8:0] obj_samplesRepetitionObj_CPLengthReg_1;  // ufix9
  wire [8:0] tmp_97;  // ufix9
  wire [8:0] tmp_98;  // ufix9
  wire [8:0] obj_samplesRepetitionObj_CPLengthRegOut;  // ufix9
  reg [8:0] obj_samplesRepetitionObj_CPLengthRegOut_1;  // ufix9
  wire [8:0] tmp_99;  // ufix9
  wire [8:0] tmp_100;  // ufix9
  wire [8:0] tmp_101;  // ufix9


  assign obj_samplesRepetitionObj_resetSig = 1'b0;



  assign tmp = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_resetSig_1 :
              obj_samplesRepetitionObj_resetSig);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_resetSig_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_resetSig_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_resetSig_1 <= tmp;
        end
      end
    end



  assign obj_samplesRepetitionObj_FFTLenReg = varargin_3[8:0];



  assign obj_samplesRepetitionObj_FFTLenReg_1 = 9'b100000000;



  assign tmp_1 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_FFTLenReg :
              obj_samplesRepetitionObj_FFTLenReg_1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_FFTLenReg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_FFTLenReg_2 <= 9'b100000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_FFTLenReg_2 <= tmp_1;
        end
      end
    end



  assign s = obj_samplesRepetitionObj_FFTLenReg_2 != 9'b000000001;



  assign obj_samplesRepetitionObj_ctrl = 1'b0;



  assign obj_samplesRepetitionObj_validInReg = 1'b0;



  assign tmp_2 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? varargin_2 :
              obj_samplesRepetitionObj_validInReg);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_validInReg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_validInReg_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_validInReg_1 <= tmp_2;
        end
      end
    end



  assign tmp_4 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_3 :
              obj_samplesRepetitionObj_ctrl);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_ctrl_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_ctrl_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_ctrl_1 <= tmp_4;
        end
      end
    end



  assign tmp_3 = (s == 1'b0 ? obj_samplesRepetitionObj_ctrl_1 :
              obj_samplesRepetitionObj_validInReg_1);



  assign obj_samplesRepetitionObj_currFFTLength = 9'b100000000;



  assign tmp_5 = obj_samplesRepetitionObj_FFTLenReg_2 - 9'b000000001;



  assign obj_samplesRepetitionObj_inCount = 9'b000000000;



  assign obj_samplesRepetitionObj_inCount_1 = 9'b000000000;



  assign tmp_6 = obj_samplesRepetitionObj_inCount_2 + 9'b000000001;



  assign tmp_8 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_7 :
              obj_samplesRepetitionObj_currFFTLength);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_currFFTLength_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_currFFTLength_1 <= 9'b100000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_currFFTLength_1 <= tmp_8;
        end
      end
    end



  assign s_1 = (obj_samplesRepetitionObj_inCount_2 == 9'b000000000) && obj_samplesRepetitionObj_validInReg_1;



  assign tmp_7 = (s_1 == 1'b0 ? obj_samplesRepetitionObj_currFFTLength_1 :
              tmp_5);



  assign a0 = obj_samplesRepetitionObj_inCount_2 == tmp_7;



  assign tmp_9 = (a0 == 1'b0 ? tmp_6 :
              obj_samplesRepetitionObj_inCount);



  assign tmp_10 = (obj_samplesRepetitionObj_validInReg_1 == 1'b0 ? obj_samplesRepetitionObj_inCount_2 :
              tmp_9);



  assign tmp_11 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_10 :
              obj_samplesRepetitionObj_inCount_1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_inCount_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_inCount_2 <= 9'b000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_inCount_2 <= tmp_11;
        end
      end
    end



  assign a0_1 = obj_samplesRepetitionObj_inCount_2 == obj_samplesRepetitionObj_currFFTLength_1;



  assign obj_samplesRepetitionObj_flag = 1'b1;



  assign a0_2 = obj_samplesRepetitionObj_inCount_2 == obj_samplesRepetitionObj_currFFTLength_1;



  assign obj_samplesRepetitionObj_flag_1 = 1'b0;



  assign obj_samplesRepetitionObj_flag_2 = 1'b0;



  assign tmp_12 = (a0_2 == 1'b0 ? obj_samplesRepetitionObj_flag_3 :
              obj_samplesRepetitionObj_flag_1);



  assign tmp_13 = (tmp_3 == 1'b0 ? obj_samplesRepetitionObj_flag_3 :
              tmp_12);



  assign tmp_14 = (a0_1 == 1'b0 ? obj_samplesRepetitionObj_flag_3 :
              obj_samplesRepetitionObj_flag);



  assign tmp_15 = (tmp_3 == 1'b0 ? obj_samplesRepetitionObj_flag_3 :
              tmp_14);



  assign tmp_16 = (obj_samplesRepetitionObj_flag_3 == 1'b0 ? tmp_15 :
              tmp_13);



  assign tmp_17 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_16 :
              obj_samplesRepetitionObj_flag_2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_flag_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_flag_3 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_flag_3 <= tmp_17;
        end
      end
    end



  assign obj_samplesRepetitionObj_sym2Done = 1'b0;



  assign obj_samplesRepetitionObj_sym2Done_1 = 1'b1;



  assign obj_samplesRepetitionObj_sym2Done_2 = 1'b0;



  assign obj_samplesRepetitionObj_startRead2 = 1'b1;



  assign obj_samplesRepetitionObj_startRead2_1 = 1'b0;



  assign obj_samplesRepetitionObj_startRead2_2 = 1'b0;



  assign obj_samplesRepetitionObj_outCount = 9'b000000000;



  assign obj_samplesRepetitionObj_outCount_1 = 9'b000000000;



  assign obj_samplesRepetitionObj_outCount_2 = 9'b000000000;



  assign obj_samplesRepetitionObj_startRead2_3 = 1'b0;



  assign obj_samplesRepetitionObj_sym1Done = 1'b0;



  assign obj_samplesRepetitionObj_sym1Done_1 = 1'b1;



  assign obj_samplesRepetitionObj_sym1Done_2 = 1'b0;



  assign obj_samplesRepetitionObj_startRead1 = 1'b0;



  assign obj_samplesRepetitionObj_startRead1_1 = 1'b1;



  assign obj_samplesRepetitionObj_startRead1_2 = 1'b0;



  assign obj_samplesRepetitionObj_startRead1_3 = 1'b0;



  assign tmp_19 = (tmp_18 == 1'b0 ? obj_samplesRepetitionObj_startRead1_1 :
              obj_samplesRepetitionObj_startRead1_2);



  assign tmp_20 = (s_2 == 1'b0 ? obj_samplesRepetitionObj_startRead1_4 :
              obj_samplesRepetitionObj_startRead1);



  assign tmp_21 = (s_3 == 1'b0 ? obj_samplesRepetitionObj_startRead1_4 :
              tmp_20);



  assign tmp_23 = (a0_1 == 1'b0 ? tmp_22 :
              obj_samplesRepetitionObj_sym1Done_1);



  assign tmp_24 = obj_samplesRepetitionObj_outCount_3 + 9'b000000001;



  assign p355_1 = {1'b0, obj_samplesRepetitionObj_outCount_3};
  assign s_2 = p355_1 == 10'b0011111111;



  assign tmp_25 = (s_2 == 1'b0 ? tmp_24 :
              obj_samplesRepetitionObj_outCount_1);



  assign tmp_26 = obj_samplesRepetitionObj_outCount_3 + 9'b000000001;



  assign tmp_27 = (s_4 == 1'b0 ? tmp_26 :
              obj_samplesRepetitionObj_outCount);



  assign tmp_28 = (s_5 == 1'b0 ? obj_samplesRepetitionObj_outCount_3 :
              tmp_27);



  assign tmp_29 = (s_3 == 1'b0 ? tmp_28 :
              tmp_25);



  assign tmp_30 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_29 :
              obj_samplesRepetitionObj_outCount_2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_outCount_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_outCount_3 <= 9'b000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_outCount_3 <= tmp_30;
        end
      end
    end



  assign p342_1 = {1'b0, obj_samplesRepetitionObj_outCount_3};
  assign s_4 = p342_1 == 10'b0011111111;



  assign tmp_31 = (s_4 == 1'b0 ? obj_samplesRepetitionObj_startRead2_4 :
              obj_samplesRepetitionObj_startRead2_3);



  assign s_5 = obj_samplesRepetitionObj_startRead2_4 && ( ! obj_samplesRepetitionObj_startRead1_4);



  assign tmp_32 = (s_5 == 1'b0 ? obj_samplesRepetitionObj_startRead2_4 :
              tmp_31);



  assign tmp_34 = (tmp_33 == 1'b0 ? obj_samplesRepetitionObj_startRead2 :
              obj_samplesRepetitionObj_startRead2_1);



  assign tmp_36 = (a0_2 == 1'b0 ? tmp_35 :
              obj_samplesRepetitionObj_sym2Done_1);



  assign tmp_37 = (tmp_3 == 1'b0 ? tmp_35 :
              tmp_36);



  assign tmp_38 = (tmp_33 == 1'b0 ? obj_samplesRepetitionObj_sym2Done :
              obj_samplesRepetitionObj_sym2Done_3);



  assign tmp_35 = (obj_samplesRepetitionObj_sym2Done_3 == 1'b0 ? obj_samplesRepetitionObj_sym2Done_3 :
              tmp_38);



  assign tmp_39 = (obj_samplesRepetitionObj_flag_3 == 1'b0 ? tmp_35 :
              tmp_37);



  assign tmp_40 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_39 :
              obj_samplesRepetitionObj_sym2Done_2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_sym2Done_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_sym2Done_3 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_sym2Done_3 <= tmp_40;
        end
      end
    end



  assign tmp_41 = (obj_samplesRepetitionObj_sym2Done_3 == 1'b0 ? tmp_18 :
              tmp_34);



  assign tmp_42 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_41 :
              obj_samplesRepetitionObj_startRead2_2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_startRead2_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_startRead2_4 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_startRead2_4 <= tmp_42;
        end
      end
    end



  assign s_3 = obj_samplesRepetitionObj_startRead1_4 && ( ! obj_samplesRepetitionObj_startRead2_4);



  assign tmp_18 = (s_3 == 1'b0 ? tmp_32 :
              obj_samplesRepetitionObj_startRead2_4);



  assign tmp_43 = (tmp_18 == 1'b0 ? obj_samplesRepetitionObj_sym1Done :
              obj_samplesRepetitionObj_sym1Done_3);



  assign tmp_22 = (obj_samplesRepetitionObj_sym1Done_3 == 1'b0 ? obj_samplesRepetitionObj_sym1Done_3 :
              tmp_43);



  assign tmp_44 = (tmp_3 == 1'b0 ? tmp_22 :
              tmp_23);



  assign tmp_45 = (obj_samplesRepetitionObj_flag_3 == 1'b0 ? tmp_44 :
              tmp_22);



  assign tmp_46 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_45 :
              obj_samplesRepetitionObj_sym1Done_2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_sym1Done_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_sym1Done_3 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_sym1Done_3 <= tmp_46;
        end
      end
    end



  assign tmp_33 = (obj_samplesRepetitionObj_sym1Done_3 == 1'b0 ? tmp_21 :
              tmp_19);



  assign tmp_47 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_33 :
              obj_samplesRepetitionObj_startRead1_3);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_startRead1_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_startRead1_4 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_startRead1_4 <= tmp_47;
        end
      end
    end



  assign obj_samplesRepetitionObj_strtRd1Reg = 1'b0;



  assign tmp_48 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_startRead1_4 :
              obj_samplesRepetitionObj_strtRd1Reg);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_strtRd1Reg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_strtRd1Reg_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_strtRd1Reg_1 <= tmp_48;
        end
      end
    end



  assign obj_samplesRepetitionObj_strtRd1Reg1 = 1'b0;



  assign tmp_49 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_strtRd1Reg_1 :
              obj_samplesRepetitionObj_strtRd1Reg1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_strtRd1Reg1_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_strtRd1Reg1_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_strtRd1Reg1_1 <= tmp_49;
        end
      end
    end



  assign obj_samplesRepetitionObj_strtRd2Reg = 1'b0;



  assign tmp_50 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_startRead2_4 :
              obj_samplesRepetitionObj_strtRd2Reg);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_strtRd2Reg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_strtRd2Reg_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_strtRd2Reg_1 <= tmp_50;
        end
      end
    end



  assign obj_samplesRepetitionObj_strtRd2Reg1 = 1'b0;



  assign tmp_51 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_strtRd2Reg_1 :
              obj_samplesRepetitionObj_strtRd2Reg1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_strtRd2Reg1_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_strtRd2Reg1_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_strtRd2Reg1_1 <= tmp_51;
        end
      end
    end



  assign s_6 = obj_samplesRepetitionObj_strtRd1Reg1_1 && ( ! obj_samplesRepetitionObj_strtRd2Reg1_1);



  assign s_7 = ( ! obj_samplesRepetitionObj_strtRd1Reg1_1) && obj_samplesRepetitionObj_strtRd2Reg1_1;



  assign obj_samplesRepetitionObj_dataOutReg_re = 16'sb0000000000000000;
  assign obj_samplesRepetitionObj_dataOutReg_im = 16'sb0000000000000000;



  assign obj_samplesRepetitionObj_dataInReg_re = 16'sb0000000000000000;
  assign obj_samplesRepetitionObj_dataInReg_im = 16'sb0000000000000000;



  assign tmp_re = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? varargin_1_re :
              obj_samplesRepetitionObj_dataInReg_re);
  assign tmp_im = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? varargin_1_im :
              obj_samplesRepetitionObj_dataInReg_im);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_dataInReg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_dataInReg_re_1 <= 16'sb0000000000000000;
        obj_samplesRepetitionObj_dataInReg_im_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_dataInReg_re_1 <= tmp_re;
          obj_samplesRepetitionObj_dataInReg_im_1 <= tmp_im;
        end
      end
    end



  assign obj_samplesRepetitionObj_dataInReg1_re = 16'sb0000000000000000;
  assign obj_samplesRepetitionObj_dataInReg1_im = 16'sb0000000000000000;



  assign tmp_re_1 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_dataInReg_re_1 :
              obj_samplesRepetitionObj_dataInReg1_re);
  assign tmp_im_1 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_dataInReg_im_1 :
              obj_samplesRepetitionObj_dataInReg1_im);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_dataInReg1_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_dataInReg1_re_1 <= 16'sb0000000000000000;
        obj_samplesRepetitionObj_dataInReg1_im_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_dataInReg1_re_1 <= tmp_re_1;
          obj_samplesRepetitionObj_dataInReg1_im_1 <= tmp_im_1;
        end
      end
    end



  assign obj_samplesRepetitionObj_wrAddr2 = 10'b0000000000;



  assign obj_samplesRepetitionObj_wrAddr2_1 = 10'b0000000000;



  assign tmp_52 = obj_samplesRepetitionObj_wrAddr2_2 + 10'b0000000001;



  assign tmp_53 = (a0_2 == 1'b0 ? tmp_52 :
              obj_samplesRepetitionObj_wrAddr2);



  assign tmp_54 = (tmp_3 == 1'b0 ? obj_samplesRepetitionObj_wrAddr2_2 :
              tmp_53);



  assign tmp_55 = (obj_samplesRepetitionObj_flag_3 == 1'b0 ? obj_samplesRepetitionObj_wrAddr2_2 :
              tmp_54);



  assign tmp_56 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_55 :
              obj_samplesRepetitionObj_wrAddr2_1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_wrAddr2_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_wrAddr2_2 <= 10'b0000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_wrAddr2_2 <= tmp_56;
        end
      end
    end



  assign s_8 = obj_samplesRepetitionObj_validInReg_1 && obj_samplesRepetitionObj_flag_3;



  assign out = 1'b0;



  assign out_1 = 1'b1;



  assign tmp_57 = (s_8 == 1'b0 ? out :
              out_1);



  assign obj_samplesRepetitionObj_wrEn2 = 1'b0;



  assign tmp_58 = (s == 1'b0 ? obj_samplesRepetitionObj_wrEn2_1 :
              tmp_57);



  assign tmp_59 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_58 :
              obj_samplesRepetitionObj_wrEn2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_wrEn2_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_wrEn2_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_wrEn2_1 <= tmp_59;
        end
      end
    end



  assign s_9 = obj_samplesRepetitionObj_inCount_2 == 9'b000000000;



  assign tmp_60 = tmp_29 == 9'b000000000;



  assign obj_samplesRepetitionObj_prevFFTLength = 9'b100000000;



  assign tmp_61 = (tmp_60 == 1'b0 ? obj_samplesRepetitionObj_prevFFTLength_1 :
              obj_samplesRepetitionObj_currFFTLength_1);



  assign tmp_62 = (s_9 == 1'b0 ? obj_samplesRepetitionObj_prevFFTLength_1 :
              tmp_61);



  assign tmp_63 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_62 :
              obj_samplesRepetitionObj_prevFFTLength);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_prevFFTLength_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_prevFFTLength_1 <= 9'b100000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_prevFFTLength_1 <= tmp_63;
        end
      end
    end



  assign obj_samplesRepetitionObj_rdAddr2 = 10'b0000000000;



  assign obj_samplesRepetitionObj_rdAddr2_1 = 10'b0000000000;



  assign obj_samplesRepetitionObj_rdAddr2_2 = 10'b0000000000;



  assign tmp_65 = (tmp_60 == 1'b0 ? tmp_64 :
              obj_samplesRepetitionObj_rdAddr2_1);



  assign tmp_66 = obj_samplesRepetitionObj_rdAddr2_3 + 10'b0000000001;



  assign p334_1 = {1'b0, obj_samplesRepetitionObj_prevFFTLength_1};
  assign s_10 = obj_samplesRepetitionObj_rdAddr2_3 == p334_1;



  assign tmp_67 = (s_10 == 1'b0 ? tmp_66 :
              obj_samplesRepetitionObj_rdAddr2);



  assign tmp_68 = (s_5 == 1'b0 ? obj_samplesRepetitionObj_rdAddr2_3 :
              tmp_67);



  assign tmp_64 = (s_3 == 1'b0 ? tmp_68 :
              obj_samplesRepetitionObj_rdAddr2_3);



  assign tmp_69 = (s_9 == 1'b0 ? tmp_64 :
              tmp_65);



  assign tmp_70 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_69 :
              obj_samplesRepetitionObj_rdAddr2_2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_rdAddr2_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_rdAddr2_3 <= 10'b0000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_rdAddr2_3 <= tmp_70;
        end
      end
    end



  tx_125_src_SimpleDualPortRAM_generic_block #(.AddrWidth(10),
                                               .DataWidth(16)
                                               )
                                             u_simpleDualPortRam (.clk(clk),
                                                                  .enb_1_2_0(enb_1_2_0),
                                                                  .wr_din_re(obj_samplesRepetitionObj_dataInReg1_re_1),
                                                                  .wr_din_im(obj_samplesRepetitionObj_dataInReg1_im_1),
                                                                  .wr_addr(obj_samplesRepetitionObj_wrAddr2_2),
                                                                  .wr_en(obj_samplesRepetitionObj_wrEn2_1),
                                                                  .rd_addr(obj_samplesRepetitionObj_rdAddr2_3),
                                                                  .dout_re(varargout_1_re_1),
                                                                  .dout_im(varargout_1_im_1)
                                                                  );

  assign tmp_re_2 = (s_7 == 1'b0 ? obj_samplesRepetitionObj_dataOutReg_re :
              varargout_1_re_1);
  assign tmp_im_2 = (s_7 == 1'b0 ? obj_samplesRepetitionObj_dataOutReg_im :
              varargout_1_im_1);



  assign obj_samplesRepetitionObj_wrAddr1 = 10'b0000000000;



  assign obj_samplesRepetitionObj_wrAddr1_1 = 10'b0000000000;



  assign tmp_71 = obj_samplesRepetitionObj_wrAddr1_2 + 10'b0000000001;



  assign tmp_72 = (a0_1 == 1'b0 ? tmp_71 :
              obj_samplesRepetitionObj_wrAddr1);



  assign tmp_73 = (tmp_3 == 1'b0 ? obj_samplesRepetitionObj_wrAddr1_2 :
              tmp_72);



  assign tmp_74 = (obj_samplesRepetitionObj_flag_3 == 1'b0 ? tmp_73 :
              obj_samplesRepetitionObj_wrAddr1_2);



  assign tmp_75 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_74 :
              obj_samplesRepetitionObj_wrAddr1_1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_wrAddr1_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_wrAddr1_2 <= 10'b0000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_wrAddr1_2 <= tmp_75;
        end
      end
    end



  assign s_11 = obj_samplesRepetitionObj_validInReg_1 && ( ! obj_samplesRepetitionObj_flag_3);



  assign out_2 = 1'b0;



  assign out_3 = 1'b1;



  assign tmp_76 = (s_11 == 1'b0 ? out_2 :
              out_3);



  assign obj_samplesRepetitionObj_wrEn1 = 1'b0;



  assign tmp_77 = (s == 1'b0 ? obj_samplesRepetitionObj_wrEn1_1 :
              tmp_76);



  assign tmp_78 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_77 :
              obj_samplesRepetitionObj_wrEn1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_wrEn1_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_wrEn1_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_wrEn1_1 <= tmp_78;
        end
      end
    end



  assign obj_samplesRepetitionObj_rdAddr1 = 10'b0000000000;



  assign obj_samplesRepetitionObj_rdAddr1_1 = 10'b0000000000;



  assign obj_samplesRepetitionObj_rdAddr1_2 = 10'b0000000000;



  assign tmp_80 = (tmp_60 == 1'b0 ? tmp_79 :
              obj_samplesRepetitionObj_rdAddr1_1);



  assign tmp_81 = obj_samplesRepetitionObj_rdAddr1_3 + 10'b0000000001;



  assign p347_1 = {1'b0, obj_samplesRepetitionObj_prevFFTLength_1};
  assign s_12 = obj_samplesRepetitionObj_rdAddr1_3 == p347_1;



  assign tmp_82 = (s_12 == 1'b0 ? tmp_81 :
              obj_samplesRepetitionObj_rdAddr1);



  assign tmp_79 = (s_3 == 1'b0 ? obj_samplesRepetitionObj_rdAddr1_3 :
              tmp_82);



  assign tmp_83 = (s_9 == 1'b0 ? tmp_79 :
              tmp_80);



  assign tmp_84 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_83 :
              obj_samplesRepetitionObj_rdAddr1_2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_rdAddr1_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_rdAddr1_3 <= 10'b0000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_rdAddr1_3 <= tmp_84;
        end
      end
    end



  tx_125_src_SimpleDualPortRAM_generic_block #(.AddrWidth(10),
                                               .DataWidth(16)
                                               )
                                             u_simpleDualPortRam_1 (.clk(clk),
                                                                    .enb_1_2_0(enb_1_2_0),
                                                                    .wr_din_re(obj_samplesRepetitionObj_dataInReg1_re_1),
                                                                    .wr_din_im(obj_samplesRepetitionObj_dataInReg1_im_1),
                                                                    .wr_addr(obj_samplesRepetitionObj_wrAddr1_2),
                                                                    .wr_en(obj_samplesRepetitionObj_wrEn1_1),
                                                                    .rd_addr(obj_samplesRepetitionObj_rdAddr1_3),
                                                                    .dout_re(varargout_1_re_2),
                                                                    .dout_im(varargout_1_im_2)
                                                                    );

  assign tmp_re_3 = (s_6 == 1'b0 ? tmp_re_2 :
              varargout_1_re_2);
  assign tmp_im_3 = (s_6 == 1'b0 ? tmp_im_2 :
              varargout_1_im_2);



  assign obj_samplesRepetitionObj_dataOutReg_re_1 = 16'sb0000000000000000;
  assign obj_samplesRepetitionObj_dataOutReg_im_1 = 16'sb0000000000000000;



  assign tmp_re_4 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_re_3 :
              obj_samplesRepetitionObj_dataOutReg_re_1);
  assign tmp_im_4 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_im_3 :
              obj_samplesRepetitionObj_dataOutReg_im_1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_dataOutReg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_dataOutReg_re_2 <= 16'sb0000000000000000;
        obj_samplesRepetitionObj_dataOutReg_im_2 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_dataOutReg_re_2 <= tmp_re_4;
          obj_samplesRepetitionObj_dataOutReg_im_2 <= tmp_im_4;
        end
      end
    end



  assign obj_samplesRepetitionObj_dataOut_re = 16'sb0000000000000000;
  assign obj_samplesRepetitionObj_dataOut_im = 16'sb0000000000000000;



  assign tmp_re_5 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_dataOutReg_re_2 :
              obj_samplesRepetitionObj_dataOut_re);
  assign tmp_im_5 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_dataOutReg_im_2 :
              obj_samplesRepetitionObj_dataOut_im);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_dataOut_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_dataOut_re_1 <= 16'sb0000000000000000;
        obj_samplesRepetitionObj_dataOut_im_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_dataOut_re_1 <= tmp_re_5;
          obj_samplesRepetitionObj_dataOut_im_1 <= tmp_im_5;
        end
      end
    end



  assign varargout_1_re = obj_samplesRepetitionObj_dataOut_re_1;

  assign varargout_1_im = obj_samplesRepetitionObj_dataOut_im_1;

  assign obj_samplesRepetitionObj_validOutReg = 1'b0;



  assign obj_samplesRepetitionObj_validOutReg_1 = 1'b1;



  assign tmp_85 = (s_5 == 1'b0 ? obj_samplesRepetitionObj_validOutReg :
              obj_samplesRepetitionObj_validOutReg_1);



  assign obj_samplesRepetitionObj_validOutReg_2 = 1'b1;



  assign tmp_86 = (s_3 == 1'b0 ? tmp_85 :
              obj_samplesRepetitionObj_validOutReg_2);



  assign obj_samplesRepetitionObj_validOutReg_3 = 1'b0;



  assign tmp_87 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_86 :
              obj_samplesRepetitionObj_validOutReg_3);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_validOutReg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_validOutReg_4 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_validOutReg_4 <= tmp_87;
        end
      end
    end



  assign obj_samplesRepetitionObj_validOutReg1 = 1'b0;



  assign tmp_88 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_validOutReg_4 :
              obj_samplesRepetitionObj_validOutReg1);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_validOutReg1_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_validOutReg1_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_validOutReg1_1 <= tmp_88;
        end
      end
    end



  assign obj_samplesRepetitionObj_validOutReg2 = 1'b0;



  assign tmp_89 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_validOutReg1_1 :
              obj_samplesRepetitionObj_validOutReg2);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_validOutReg2_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_validOutReg2_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_validOutReg2_1 <= tmp_89;
        end
      end
    end



  assign obj_samplesRepetitionObj_validOut = 1'b0;



  assign tmp_90 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? obj_samplesRepetitionObj_validOutReg2_1 :
              obj_samplesRepetitionObj_validOut);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_validOut_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_validOut_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_validOut_1 <= tmp_90;
        end
      end
    end



  assign varargout_2 = obj_samplesRepetitionObj_validOut_1;

  assign obj_samplesRepetitionObj_FFTLengthReg = 9'b100000000;



  assign tmp_91 = (s_1 == 1'b0 ? obj_samplesRepetitionObj_FFTLengthReg_1 :
              obj_samplesRepetitionObj_FFTLenReg_2);



  assign tmp_92 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_91 :
              obj_samplesRepetitionObj_FFTLengthReg);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_FFTLengthReg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_FFTLengthReg_1 <= 9'b100000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_FFTLengthReg_1 <= tmp_92;
        end
      end
    end



  assign obj_samplesRepetitionObj_FFTLengthRegOut = 9'b100000000;



  assign tmp_93 = (tmp_60 == 1'b0 ? obj_samplesRepetitionObj_FFTLengthRegOut_1 :
              obj_samplesRepetitionObj_FFTLengthReg_1);



  assign tmp_94 = (s_9 == 1'b0 ? obj_samplesRepetitionObj_FFTLengthRegOut_1 :
              tmp_93);



  assign tmp_95 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_94 :
              obj_samplesRepetitionObj_FFTLengthRegOut);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_FFTLengthRegOut_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_FFTLengthRegOut_1 <= 9'b100000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_FFTLengthRegOut_1 <= tmp_95;
        end
      end
    end



  assign varargout_3 = obj_samplesRepetitionObj_FFTLengthRegOut_1;

  assign tmp_96 = varargin_4[8:0];



  assign obj_samplesRepetitionObj_CPLengthReg = 9'b000010000;



  assign tmp_97 = (s_1 == 1'b0 ? obj_samplesRepetitionObj_CPLengthReg_1 :
              tmp_96);



  assign tmp_98 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_97 :
              obj_samplesRepetitionObj_CPLengthReg);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_CPLengthReg_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_CPLengthReg_1 <= 9'b000010000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_CPLengthReg_1 <= tmp_98;
        end
      end
    end



  assign obj_samplesRepetitionObj_CPLengthRegOut = 9'b000010000;



  assign tmp_99 = (tmp_60 == 1'b0 ? obj_samplesRepetitionObj_CPLengthRegOut_1 :
              obj_samplesRepetitionObj_CPLengthReg_1);



  assign tmp_100 = (s_9 == 1'b0 ? obj_samplesRepetitionObj_CPLengthRegOut_1 :
              tmp_99);



  assign tmp_101 = (obj_samplesRepetitionObj_resetSig_1 == 1'b0 ? tmp_100 :
              obj_samplesRepetitionObj_CPLengthRegOut);



  always @(posedge clk)
    begin : obj_samplesRepetitionObj_CPLengthRegOut_reg_process
      if (reset_x == 1'b1) begin
        obj_samplesRepetitionObj_CPLengthRegOut_1 <= 9'b000010000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_samplesRepetitionObj_CPLengthRegOut_1 <= tmp_101;
        end
      end
    end



  assign varargout_4 = obj_samplesRepetitionObj_CPLengthRegOut_1;

endmodule  // tx_125_src_samplesRepetitionMod

