// -------------------------------------------------------------
// 
// File Name: hdl_prj/hdlsrc/HDLTx/tx_125_src_HDLFFTShiftMod.v
// Created: 2024-09-14 22:22:20
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: tx_125_src_HDLFFTShiftMod
// Source Path: 
// Hierarchy Level: 4
// Model version: 4.114
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module tx_125_src_HDLFFTShiftMod
          (clk,
           reset_x,
           enb_1_2_0,
           varargin_1_re,
           varargin_1_im,
           varargin_2,
           varargin_3,
           varargin_4,
           varargout_1_re,
           varargout_1_im,
           varargout_2,
           varargout_3,
           varargout_4);


  input   clk;
  input   reset_x;
  input   enb_1_2_0;
  input   signed [15:0] varargin_1_re;  // sfix16_En14
  input   signed [15:0] varargin_1_im;  // sfix16_En14
  input   varargin_2;
  input   [9:0] varargin_3;  // ufix10
  input   [9:0] varargin_4;  // ufix10
  output  signed [15:0] varargout_1_re;  // sfix16_En14
  output  signed [15:0] varargout_1_im;  // sfix16_En14
  output  varargout_2;
  output  [9:0] varargout_3;  // ufix10
  output  [9:0] varargout_4;  // ufix10


  wire obj_HDLFFTShiftModObj_resetSig;
  wire signed [15:0] tmp;  // sfix16_En14
  wire obj_HDLFFTShiftModObj_count;
  wire obj_HDLFFTShiftModObj_count_1;
  wire obj_HDLFFTShiftModObj_count_2;
  reg  obj_HDLFFTShiftModObj_count_3;
  wire tmp_1;
  wire tmp_2;
  wire tmp_3;
  wire signed [15:0] tmp_4;  // sfix16_En14
  wire signed [15:0] temp1;  // sfix16_En14
  wire signed [16:0] p33temp1_cast;  // sfix17_En14
  wire signed [16:0] p33temp1_cast_1;  // sfix17_En14
  wire signed [15:0] tmp_5;  // sfix16_En14
  wire signed [15:0] tmp_6;  // sfix16_En14
  wire signed [15:0] obj_HDLFFTShiftModObj_rePart;  // sfix16_En14
  wire signed [15:0] tmp_7;  // sfix16_En14
  reg signed [15:0] obj_HDLFFTShiftModObj_rePart_1;  // sfix16_En14
  wire signed [15:0] tmp_8;  // sfix16_En14
  wire signed [15:0] tmp_9;  // sfix16_En14
  wire signed [15:0] temp2;  // sfix16_En14
  wire signed [16:0] p32temp2_cast;  // sfix17_En14
  wire signed [16:0] p32temp2_cast_1;  // sfix17_En14
  wire signed [15:0] tmp_10;  // sfix16_En14
  wire signed [15:0] tmp_11;  // sfix16_En14
  wire signed [15:0] obj_HDLFFTShiftModObj_imPart;  // sfix16_En14
  wire signed [15:0] tmp_12;  // sfix16_En14
  reg signed [15:0] obj_HDLFFTShiftModObj_imPart_1;  // sfix16_En14
  wire obj_HDLFFTShiftModObj_validOut;
  wire tmp_13;
  reg  obj_HDLFFTShiftModObj_validOut_1;
  reg [9:0] obj_HDLFFTShiftModObj_FFTLen;  // ufix10
  reg [9:0] obj_HDLFFTShiftModObj_CPLen;  // ufix10


  assign obj_HDLFFTShiftModObj_resetSig = 1'b0;



  assign tmp = varargin_1_re;



  assign obj_HDLFFTShiftModObj_count = 1'b1;



  assign obj_HDLFFTShiftModObj_count_1 = 1'b0;



  assign obj_HDLFFTShiftModObj_count_2 = 1'b0;



  assign tmp_1 = (obj_HDLFFTShiftModObj_count_3 == 1'b0 ? obj_HDLFFTShiftModObj_count :
              obj_HDLFFTShiftModObj_count_1);



  assign tmp_2 = (varargin_2 == 1'b0 ? obj_HDLFFTShiftModObj_count_3 :
              tmp_1);



  assign tmp_3 = (obj_HDLFFTShiftModObj_resetSig == 1'b0 ? tmp_2 :
              obj_HDLFFTShiftModObj_count_2);



  always @(posedge clk)
    begin : obj_HDLFFTShiftModObj_count_reg_process
      if (reset_x == 1'b1) begin
        obj_HDLFFTShiftModObj_count_3 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_HDLFFTShiftModObj_count_3 <= tmp_3;
        end
      end
    end



  assign tmp_4 = varargin_1_re;



  assign p33temp1_cast = {varargin_1_re[15], varargin_1_re};
  assign p33temp1_cast_1 =  - (p33temp1_cast);
  assign temp1 = p33temp1_cast_1[15:0];



  assign tmp_5 = (obj_HDLFFTShiftModObj_count_3 == 1'b0 ? tmp_4 :
              temp1);



  assign tmp_6 = (varargin_2 == 1'b0 ? tmp :
              tmp_5);



  assign obj_HDLFFTShiftModObj_rePart = 16'sb0000000000000000;



  assign tmp_7 = (obj_HDLFFTShiftModObj_resetSig == 1'b0 ? tmp_6 :
              obj_HDLFFTShiftModObj_rePart);



  always @(posedge clk)
    begin : obj_HDLFFTShiftModObj_rePart_reg_process
      if (reset_x == 1'b1) begin
        obj_HDLFFTShiftModObj_rePart_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_HDLFFTShiftModObj_rePart_1 <= tmp_7;
        end
      end
    end



  assign tmp_8 = varargin_1_im;



  assign tmp_9 = varargin_1_im;



  assign p32temp2_cast = {varargin_1_im[15], varargin_1_im};
  assign p32temp2_cast_1 =  - (p32temp2_cast);
  assign temp2 = p32temp2_cast_1[15:0];



  assign tmp_10 = (obj_HDLFFTShiftModObj_count_3 == 1'b0 ? tmp_9 :
              temp2);



  assign tmp_11 = (varargin_2 == 1'b0 ? tmp_8 :
              tmp_10);



  assign obj_HDLFFTShiftModObj_imPart = 16'sb0000000000000000;



  assign tmp_12 = (obj_HDLFFTShiftModObj_resetSig == 1'b0 ? tmp_11 :
              obj_HDLFFTShiftModObj_imPart);



  always @(posedge clk)
    begin : obj_HDLFFTShiftModObj_imPart_reg_process
      if (reset_x == 1'b1) begin
        obj_HDLFFTShiftModObj_imPart_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_HDLFFTShiftModObj_imPart_1 <= tmp_12;
        end
      end
    end



  assign varargout_1_re = obj_HDLFFTShiftModObj_rePart_1;
  assign varargout_1_im = obj_HDLFFTShiftModObj_imPart_1;



  assign obj_HDLFFTShiftModObj_validOut = 1'b0;



  assign tmp_13 = (obj_HDLFFTShiftModObj_resetSig == 1'b0 ? varargin_2 :
              obj_HDLFFTShiftModObj_validOut);



  always @(posedge clk)
    begin : obj_HDLFFTShiftModObj_validOut_reg_process
      if (reset_x == 1'b1) begin
        obj_HDLFFTShiftModObj_validOut_1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          obj_HDLFFTShiftModObj_validOut_1 <= tmp_13;
        end
      end
    end



  assign varargout_2 = obj_HDLFFTShiftModObj_validOut_1;

  always @(posedge clk)
    begin : obj_HDLFFTShiftModObj_FFTLen_reg_process
      if (reset_x == 1'b1) begin
        obj_HDLFFTShiftModObj_FFTLen <= 10'b0001000000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_HDLFFTShiftModObj_FFTLen <= varargin_3;
        end
      end
    end



  assign varargout_3 = obj_HDLFFTShiftModObj_FFTLen;

  always @(posedge clk)
    begin : obj_HDLFFTShiftModObj_CPLen_reg_process
      if (reset_x == 1'b1) begin
        obj_HDLFFTShiftModObj_CPLen <= 10'b0000010000;
      end
      else begin
        if (enb_1_2_0) begin
          obj_HDLFFTShiftModObj_CPLen <= varargin_4;
        end
      end
    end



  assign varargout_4 = obj_HDLFFTShiftModObj_CPLen;

endmodule  // tx_125_src_HDLFFTShiftMod

