-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRxDemodulator/rx_demod_ip_src_rising_edge_detector1_block1.vhd
-- Created: 2024-09-22 18:53:32
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: rx_demod_ip_src_rising_edge_detector1_block1
-- Source Path: HDLRxDemodulator/rx_demodulator_full/ofdm_separator/wait_for_header/rising_edge_detector1
-- Hierarchy Level: 3
-- Model version: 1.58
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY rx_demod_ip_src_rising_edge_detector1_block1 IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        enb_1_2_1                         :   IN    std_logic;
        In_rsvd                           :   IN    std_logic;
        Out_rsvd                          :   OUT   std_logic
        );
END rx_demod_ip_src_rising_edge_detector1_block1;


ARCHITECTURE rtl OF rx_demod_ip_src_rising_edge_detector1_block1 IS

  -- Signals
  SIGNAL In_rsvd_1                        : std_logic;
  SIGNAL RateTransition_bypass_reg        : std_logic;  -- ufix1
  SIGNAL In_rsvd_2                        : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Logical_Operator2_out1           : std_logic;
  SIGNAL Logical_Operator1_out1           : std_logic;

BEGIN
  RateTransition1_output_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        In_rsvd_1 <= '0';
      ELSIF enb_1_2_1 = '1' THEN
        In_rsvd_1 <= In_rsvd;
      END IF;
    END IF;
  END PROCESS RateTransition1_output_process;


  RateTransition_bypass_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        RateTransition_bypass_reg <= '0';
      ELSIF enb_1_2_1 = '1' THEN
        RateTransition_bypass_reg <= In_rsvd;
      END IF;
    END IF;
  END PROCESS RateTransition_bypass_process;

  
  In_rsvd_2 <= In_rsvd WHEN enb_1_2_1 = '1' ELSE
      RateTransition_bypass_reg;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb_1_2_0 = '1' THEN
        Delay2_out1 <= In_rsvd_1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Logical_Operator2_out1 <=  NOT Delay2_out1;

  Logical_Operator1_out1 <= In_rsvd_2 AND Logical_Operator2_out1;

  Out_rsvd <= Logical_Operator1_out1;

END rtl;

