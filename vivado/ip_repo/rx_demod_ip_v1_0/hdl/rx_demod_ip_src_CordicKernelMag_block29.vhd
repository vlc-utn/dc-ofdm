-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/HDLRxDemodulator/rx_demod_ip_src_CordicKernelMag_block29.vhd
-- Created: 2024-09-07 11:15:24
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: rx_demod_ip_src_CordicKernelMag_block29
-- Source Path: HDLRxDemodulator/rx_demodulator_full/ofdm_symbol_sync/frequency_offset_calculator/HDL_CMA_core/CordicKernelMag
-- Hierarchy Level: 3
-- Model version: 1.43
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY rx_demod_ip_src_CordicKernelMag_block29 IS
  PORT( xin                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
        yin                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
        zin                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En32
        lut_value                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En32
        idx                               :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
        xout                              :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
        yout                              :   OUT   std_logic_vector(32 DOWNTO 0);  -- sfix33_En24
        zout                              :   OUT   std_logic_vector(32 DOWNTO 0)  -- sfix33_En32
        );
END rx_demod_ip_src_CordicKernelMag_block29;


ARCHITECTURE rtl OF rx_demod_ip_src_CordicKernelMag_block29 IS

  -- Signals
  SIGNAL yin_signed                       : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yLessThanZero                    : std_logic;
  SIGNAL xin_signed                       : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL idx_unsigned                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dynamic_shift1_cast              : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL yShifted                         : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL xout2                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL xout1                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL xout_tmp                         : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL dynamic_shift_cast               : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL xShifted                         : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout2                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout1                            : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL yout_tmp                         : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL zin_signed                       : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL lut_value_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En32
  SIGNAL ZAdder_add_cast                  : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL zout2                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL ZSub_sub_cast                    : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL zout1                            : signed(32 DOWNTO 0);  -- sfix33_En32
  SIGNAL zout_tmp                         : signed(32 DOWNTO 0);  -- sfix33_En32

BEGIN
  yin_signed <= signed(yin);

  
  yLessThanZero <= '1' WHEN yin_signed < to_signed(0, 33) ELSE
      '0';

  xin_signed <= signed(xin);

  idx_unsigned <= unsigned(idx);

  dynamic_shift1_cast <= resize(idx_unsigned, 8);
  yShifted <= SHIFT_RIGHT(yin_signed, to_integer(dynamic_shift1_cast));

  xout2 <= xin_signed + yShifted;

  xout1 <= xin_signed - yShifted;

  
  xout_tmp <= xout2 WHEN yLessThanZero = '0' ELSE
      xout1;

  xout <= std_logic_vector(xout_tmp);

  dynamic_shift_cast <= resize(idx_unsigned, 8);
  xShifted <= SHIFT_RIGHT(xin_signed, to_integer(dynamic_shift_cast));

  yout2 <= yin_signed - xShifted;

  yout1 <= yin_signed + xShifted;

  
  yout_tmp <= yout2 WHEN yLessThanZero = '0' ELSE
      yout1;

  yout <= std_logic_vector(yout_tmp);

  zin_signed <= signed(zin);

  lut_value_unsigned <= unsigned(lut_value);

  ZAdder_add_cast <= signed(resize(lut_value_unsigned, 33));
  zout2 <= zin_signed + ZAdder_add_cast;

  ZSub_sub_cast <= signed(resize(lut_value_unsigned, 33));
  zout1 <= zin_signed - ZSub_sub_cast;

  
  zout_tmp <= zout2 WHEN yLessThanZero = '0' ELSE
      zout1;

  zout <= std_logic_vector(zout_tmp);

END rtl;

